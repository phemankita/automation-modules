categories:
  - category: cluster
    categoryName: Cluster
    selection: single
    modules:
      - id: github.com/cloud-native-toolkit/terraform-ibm-container-platform
        name: ibm-container-platform
        description: Provisions a new or connects to an existing IBM Cloud container platform cluster (Kubernetes or OpenShift)
        alias: cluster
        tags:
          - cluster
          - ibm cloud
          - kubernetes
          - openshift
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: cluster_name
                scope: global
                type: string
                description: The name of the cluster that will be created within the resource group
              - name: cluster_hardware
                scope: global
                type: string
                description: The type of hardware for the cluster (shared, dedicated)
                default: shared
                optional: true
              - name: cluster_worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: cluster_machine_type
                scope: global
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                default: b3c.4x16
                optional: true
              - name: flavor
                scope: module
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                default: b3c.4x16
                optional: true
              - name: vlan_datacenter
                scope: module
                type: string
                description: (Deprecated, use VPC) The datacenter that should be used for classic infrastructure provisioning
                default: ""
                optional: true
              - name: private_vlan_id
                scope: module
                type: string
                description: (Deprecated, use VPC) The private vlan id that should be used for classic infrastructure provisioning
                default: ""
                optional: true
              - name: public_vlan_id
                scope: module
                type: string
                description: (Deprecated, use VPC) The public vlan id that should be used for classic infrastructure provisioning
                default: ""
                optional: true
              - name: vpc_zone_count
                scope: module
                type: number
                description: Number of vpc zones
                default: 0
                optional: true
              - name: cluster_region
                scope: global
                alias: region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: cluster_type
                scope: global
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: cluster_exists
                scope: global
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
              - name: login_user
                scope: module
                type: string
                description: The username to log in to openshift
                default: apikey
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: is_vpc
                scope: module
                type: bool
                description: Flag indicating that the cluster uses vpc infrastructure
                default: false
                optional: true
              - name: ocp_entitlement
                scope: module
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: cos_name
                scope: module
                type: string
                description: (optional) The name of the cos instance that will be used for the OCP 4 vpc instance
                default: ""
                optional: true
              - name: provision_cos
                scope: module
                type: bool
                description: Flag indicating that the cos instance should be provisioned, if necessary
                default: true
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
            version: v1.20.8
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: (Deprecated) Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: (Deprecated) Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: (Deprecated) The username used to log into the openshift cli
              - name: login_password
                description: (Deprecated) The password used to log into the openshift cli
              - name: tls_secret_name
                description: (Deprecated) The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag based on the cluster type
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: cluster_name
                scope: global
                type: string
                description: The name of the cluster that will be created within the resource group
              - name: cluster_hardware
                scope: global
                type: string
                description: The type of hardware for the cluster (shared, dedicated)
                default: shared
                optional: true
              - name: cluster_worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: cluster_machine_type
                scope: global
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                default: b3c.4x16
                optional: true
              - name: flavor
                scope: module
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                default: b3c.4x16
                optional: true
              - name: vlan_datacenter
                scope: module
                type: string
                description: (Deprecated, use VPC) The datacenter that should be used for classic infrastructure provisioning
                default: ""
                optional: true
              - name: private_vlan_id
                scope: module
                type: string
                description: (Deprecated, use VPC) The private vlan id that should be used for classic infrastructure provisioning
                default: ""
                optional: true
              - name: public_vlan_id
                scope: module
                type: string
                description: (Deprecated, use VPC) The public vlan id that should be used for classic infrastructure provisioning
                default: ""
                optional: true
              - name: vpc_zone_count
                scope: module
                type: number
                description: Number of vpc zones
                default: 0
                optional: true
              - name: cluster_region
                scope: global
                alias: region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: cluster_type
                scope: global
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: cluster_exists
                scope: global
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
              - name: login_user
                scope: module
                type: string
                description: The username to log in to openshift
                default: apikey
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: is_vpc
                scope: module
                type: bool
                description: Flag indicating that the cluster uses vpc infrastructure
                default: false
                optional: true
              - name: ocp_entitlement
                scope: module
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: cos_name
                scope: module
                type: string
                description: (optional) The name of the cos instance that will be used for the OCP 4 vpc instance
                default: ""
                optional: true
              - name: provision_cos
                scope: module
                type: bool
                description: Flag indicating that the cos instance should be provisioned, if necessary
                default: true
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
            version: v1.20.7
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: (Deprecated) Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: (Deprecated) Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: (Deprecated) The username used to log into the openshift cli
              - name: login_password
                description: (Deprecated) The password used to log into the openshift cli
              - name: tls_secret_name
                description: (Deprecated) The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag based on the cluster type
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: cluster_name
                scope: global
                type: string
                description: The name of the cluster that will be created within the resource group
              - name: cluster_hardware
                scope: global
                type: string
                description: The type of hardware for the cluster (shared, dedicated)
                default: shared
                optional: true
              - name: cluster_worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: cluster_machine_type
                scope: global
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                default: b3c.4x16
                optional: true
              - name: flavor
                scope: module
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                default: b3c.4x16
                optional: true
              - name: vlan_datacenter
                scope: module
                type: string
                description: (Deprecated, use VPC) The datacenter that should be used for classic infrastructure provisioning
                default: ""
                optional: true
              - name: private_vlan_id
                scope: module
                type: string
                description: (Deprecated, use VPC) The private vlan id that should be used for classic infrastructure provisioning
                default: ""
                optional: true
              - name: public_vlan_id
                scope: module
                type: string
                description: (Deprecated, use VPC) The public vlan id that should be used for classic infrastructure provisioning
                default: ""
                optional: true
              - name: vpc_zone_count
                scope: module
                type: number
                description: Number of vpc zones
                default: 0
                optional: true
              - name: cluster_region
                scope: global
                alias: region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: cluster_type
                scope: global
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: cluster_exists
                scope: global
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
              - name: login_user
                scope: module
                type: string
                description: The username to log in to openshift
                default: apikey
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: is_vpc
                scope: module
                type: bool
                description: Flag indicating that the cluster uses vpc infrastructure
                default: false
                optional: true
              - name: ocp_entitlement
                scope: module
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: cos_name
                scope: module
                type: string
                description: (optional) The name of the cos instance that will be used for the OCP 4 vpc instance
                default: ""
                optional: true
              - name: provision_cos
                scope: module
                type: bool
                description: Flag indicating that the cos instance should be provisioned, if necessary
                default: true
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
            version: v1.20.6
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: (Deprecated) Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: (Deprecated) Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: (Deprecated) The username used to log into the openshift cli
              - name: login_password
                description: (Deprecated) The password used to log into the openshift cli
              - name: tls_secret_name
                description: (Deprecated) The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag based on the cluster type
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: cluster_name
                scope: global
                type: string
                description: The name of the cluster that will be created within the resource group
              - name: cluster_hardware
                scope: global
                type: string
                description: The type of hardware for the cluster (shared, dedicated)
                default: shared
                optional: true
              - name: cluster_worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: cluster_machine_type
                scope: global
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                default: b3c.4x16
                optional: true
              - name: flavor
                scope: module
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                default: b3c.4x16
                optional: true
              - name: vlan_datacenter
                scope: module
                type: string
                description: (Deprecated, use VPC) The datacenter that should be used for classic infrastructure provisioning
              - name: private_vlan_id
                scope: module
                type: string
                description: (Deprecated, use VPC) The private vlan id that should be used for classic infrastructure provisioning
              - name: public_vlan_id
                scope: module
                type: string
                description: (Deprecated, use VPC) The public vlan id that should be used for classic infrastructure provisioning
              - name: vpc_zone_count
                scope: module
                type: number
                description: Number of vpc zones
                default: 0
                optional: true
              - name: cluster_region
                scope: global
                alias: region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: cluster_type
                scope: global
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: cluster_exists
                scope: global
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
              - name: login_user
                scope: module
                type: string
                description: The username to log in to openshift
                default: apikey
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
              - name: is_vpc
                scope: module
                type: bool
                description: Flag indicating that the cluster uses vpc infrastructure
                default: false
                optional: true
              - name: ocp_entitlement
                scope: module
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: cos_name
                scope: module
                type: string
                description: (optional) The name of the cos instance that will be used for the OCP 4 vpc instance
              - name: provision_cos
                scope: module
                type: bool
                description: Flag indicating that the cos instance should be provisioned, if necessary
                default: true
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
            version: v1.20.5
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: (Deprecated) Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: (Deprecated) Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: (Deprecated) The username used to log into the openshift cli
              - name: login_password
                description: (Deprecated) The password used to log into the openshift cli
              - name: tls_secret_name
                description: (Deprecated) The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag based on the cluster type
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: cluster_name
                scope: global
                type: string
                description: The name of the cluster that will be created within the resource group
              - name: cluster_hardware
                scope: global
                type: string
                description: The type of hardware for the cluster (shared, dedicated)
                default: shared
                optional: true
              - name: cluster_worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: cluster_machine_type
                scope: global
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                default: b3c.4x16
                optional: true
              - name: flavor
                scope: module
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                default: b3c.4x16
                optional: true
              - name: vlan_datacenter
                scope: module
                type: string
                description: (Deprecated, use VPC) The datacenter that should be used for classic infrastructure provisioning
              - name: private_vlan_id
                scope: module
                type: string
                description: (Deprecated, use VPC) The private vlan id that should be used for classic infrastructure provisioning
              - name: public_vlan_id
                scope: module
                type: string
                description: (Deprecated, use VPC) The public vlan id that should be used for classic infrastructure provisioning
              - name: vpc_zone_count
                scope: module
                type: number
                description: Number of vpc zones
                default: 0
                optional: true
              - name: cluster_region
                scope: global
                alias: region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: cluster_type
                scope: global
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: cluster_exists
                scope: global
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
              - name: login_user
                scope: module
                type: string
                description: The username to log in to openshift
                default: apikey
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
              - name: is_vpc
                scope: module
                type: bool
                description: Flag indicating that the cluster uses vpc infrastructure
                default: false
                optional: true
              - name: opc_entitlement
                scope: module
              - name: cos_name
                scope: module
                type: string
                description: (optional) The name of the cos instance that will be used for the OCP 4 vpc instance
              - name: provision_cos
                scope: module
                type: bool
                description: Flag indicating that the cos instance should be provisioned, if necessary
                default: true
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
              - name: ocp_entitlement
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
            version: v1.20.4
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: (Deprecated) Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: (Deprecated) Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: (Deprecated) The username used to log into the openshift cli
              - name: login_password
                description: (Deprecated) The password used to log into the openshift cli
              - name: tls_secret_name
                description: (Deprecated) The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag based on the cluster type
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: cluster_name
                scope: global
                type: string
                description: The name of the cluster that will be created within the resource group
              - name: cluster_hardware
                scope: global
                type: string
                description: The type of hardware for the cluster (shared, dedicated)
                default: shared
                optional: true
              - name: cluster_worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: cluster_machine_type
                scope: global
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                default: b3c.4x16
                optional: true
              - name: flavor
                scope: module
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                default: b3c.4x16
                optional: true
              - name: vlan_datacenter
                scope: module
                type: string
                description: (Deprecated, use VPC) The datacenter that should be used for classic infrastructure provisioning
              - name: private_vlan_id
                scope: module
                type: string
                description: (Deprecated, use VPC) The private vlan id that should be used for classic infrastructure provisioning
              - name: public_vlan_id
                scope: module
                type: string
                description: (Deprecated, use VPC) The public vlan id that should be used for classic infrastructure provisioning
              - name: vpc_zone_count
                scope: module
                type: number
                description: Number of vpc zones
                default: 0
                optional: true
              - name: cluster_region
                scope: global
                alias: region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - nane: cluster_type
                scope: global
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: cluster_exists
                scope: global
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
              - name: login_user
                scope: module
                type: string
                description: The username to log in to openshift
                default: apikey
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
              - name: is_vpc
                scope: module
                type: bool
                description: Flag indicating that the cluster uses vpc infrastructure
                default: false
                optional: true
              - name: opc_entitlement
                scope: module
              - name: cos_name
                scope: module
                type: string
                description: (optional) The name of the cos instance that will be used for the OCP 4 vpc instance
              - name: provision_cos
                scope: module
                type: bool
                description: Flag indicating that the cos instance should be provisioned, if necessary
                default: true
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
              - name: cluster_type
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: ocp_entitlement
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
            version: v1.20.3
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: (Deprecated) Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: (Deprecated) Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: (Deprecated) The username used to log into the openshift cli
              - name: login_password
                description: (Deprecated) The password used to log into the openshift cli
              - name: tls_secret_name
                description: (Deprecated) The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag based on the cluster type
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: cluster_name
                scope: global
                type: string
                description: The name of the cluster that will be created within the resource group
              - name: cluster_hardware
                scope: global
                type: string
                description: The type of hardware for the cluster (shared, dedicated)
                default: shared
                optional: true
              - name: cluster_worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: cluster_machine_type
                scope: global
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                default: b3c.4x16
                optional: true
              - name: flavor
                scope: module
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                default: b3c.4x16
                optional: true
              - name: vlan_datacenter
                scope: module
                type: string
                description: (Deprecated, use VPC) The datacenter that should be used for classic infrastructure provisioning
              - name: private_vlan_id
                scope: module
                type: string
                description: (Deprecated, use VPC) The private vlan id that should be used for classic infrastructure provisioning
              - name: public_vlan_id
                scope: module
                type: string
                description: (Deprecated, use VPC) The public vlan id that should be used for classic infrastructure provisioning
              - name: vpc_zone_count
                scope: module
                type: number
                description: Number of vpc zones
                default: 0
                optional: true
              - name: cluster_region
                scope: global
                alias: region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - nane: cluster_type
                scope: global
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: cluster_exists
                scope: global
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
              - name: login_user
                scope: module
                type: string
                description: The username to log in to openshift
                default: apikey
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
              - name: is_vpc
                scope: module
                type: bool
                description: Flag indicating that the cluster uses vpc infrastructure
                default: false
                optional: true
              - name: opc_entitlement
                scope: module
              - name: cos_name
                scope: module
                type: string
                description: (optional) The name of the cos instance that will be used for the OCP 4 vpc instance
              - name: provision_cos
                scope: module
                type: bool
                description: Flag indicating that the cos instance should be provisioned, if necessary
                default: true
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
              - name: cluster_type
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: ocp_entitlement
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
            version: v1.20.2
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: (Deprecated) Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: (Deprecated) Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: (Deprecated) The username used to log into the openshift cli
              - name: login_password
                description: (Deprecated) The password used to log into the openshift cli
              - name: tls_secret_name
                description: (Deprecated) The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag based on the cluster type
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: cluster_name
                scope: global
                type: string
                description: The name of the cluster that will be created within the resource group
              - name: cluster_hardware
                scope: global
                type: string
                description: The type of hardware for the cluster (shared, dedicated)
                optional: true
              - name: cluster_worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                optional: true
              - name: cluster_machine_type
                scope: global
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                optional: true
              - name: flavor
                scope: module
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                optional: true
              - name: vlan_datacenter
                scope: module
                type: string
                description: (Deprecated, use VPC) The datacenter that should be used for classic infrastructure provisioning
                optional: true
              - name: private_vlan_id
                scope: module
                type: string
                description: (Deprecated, use VPC) The private vlan id that should be used for classic infrastructure provisioning
                optional: true
              - name: public_vlan_id
                scope: module
                type: string
                description: (Deprecated, use VPC) The public vlan id that should be used for classic infrastructure provisioning
                optional: true
              - name: vpc_zone_count
                scope: module
                type: number
                description: Number of vpc zones
                optional: true
              - name: cluster_region
                scope: global
                alias: region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - nane: cluster_type
                scope: global
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: cluster_exists
                scope: global
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
              - name: login_user
                scope: module
                type: string
                description: The username to log in to openshift
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                optional: true
              - name: is_vpc
                scope: module
                type: bool
                description: Flag indicating that the cluster uses vpc infrastructure
                optional: true
              - name: opc_entitlement
                scope: module
              - name: cos_name
                scope: module
                type: string
                description: (optional) The name of the cos instance that will be used for the OCP 4 vpc instance
                optional: true
              - name: provision_cos
                scope: module
                type: bool
                description: Flag indicating that the cos instance should be provisioned, if necessary
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                optional: true
              - name: cluster_type
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: ocp_entitlement
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                optional: true
            version: v1.20.1
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: (Deprecated) Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: (Deprecated) Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: (Deprecated) The username used to log into the openshift cli
              - name: login_password
                description: (Deprecated) The password used to log into the openshift cli
              - name: tls_secret_name
                description: (Deprecated) The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag based on the cluster type
          - version: v1.20.0
            variables:
              - name: resource_group_name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: cluster_name
                type: string
                description: The name of the cluster that will be created within the resource group
              - name: cluster_hardware
                type: string
                description: The type of hardware for the cluster (shared, dedicated)
                optional: true
              - name: cluster_worker_count
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                optional: true
              - name: cluster_machine_type
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                optional: true
              - name: flavor
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                optional: true
              - name: vlan_datacenter
                type: string
                description: (Deprecated, use VPC) The datacenter that should be used for classic infrastructure provisioning
                optional: true
              - name: private_vlan_id
                type: string
                description: (Deprecated, use VPC) The private vlan id that should be used for classic infrastructure provisioning
                optional: true
              - name: public_vlan_id
                type: string
                description: (Deprecated, use VPC) The public vlan id that should be used for classic infrastructure provisioning
                optional: true
              - name: vpc_zone_count
                type: number
                description: Number of vpc zones
                optional: true
              - name: cluster_region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: cluster_type
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: ibmcloud_api_key
                type: string
                description: The IBM Cloud api token
              - name: cluster_exists
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
              - name: login_user
                type: string
                description: The username to log in to openshift
                optional: true
              - name: name_prefix
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                optional: true
              - name: is_vpc
                type: bool
                description: Flag indicating that the cluster uses vpc infrastructure
                optional: true
              - name: ocp_entitlement
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                optional: true
              - name: cos_name
                type: string
                description: (optional) The name of the cos instance that will be used for the OCP 4 vpc instance
                optional: true
              - name: provision_cos
                type: bool
                description: Flag indicating that the cos instance should be provisioned, if necessary
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                optional: true
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: (Deprecated) Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: (Deprecated) Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: (Deprecated) The username used to log into the openshift cli
              - name: login_password
                description: (Deprecated) The password used to log into the openshift cli
              - name: tls_secret_name
                description: (Deprecated) The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag based on the cluster type
          - version: v1.19.1
            variables:
              - name: resource_group_name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: cluster_name
                type: string
                description: The name of the cluster that will be created within the resource group
              - name: cluster_hardware
                type: string
                description: The type of hardware for the cluster (shared, dedicated)
                optional: true
              - name: cluster_worker_count
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                optional: true
              - name: cluster_machine_type
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                optional: true
              - name: flavor
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                optional: true
              - name: vlan_datacenter
                type: string
                description: (Deprecated, use VPC) The datacenter that should be used for classic infrastructure provisioning
                optional: true
              - name: private_vlan_id
                type: string
                description: (Deprecated, use VPC) The private vlan id that should be used for classic infrastructure provisioning
                optional: true
              - name: public_vlan_id
                type: string
                description: (Deprecated, use VPC) The public vlan id that should be used for classic infrastructure provisioning
                optional: true
              - name: vpc_zone_names
                type: list(string)
                description: List of vpc zones
                optional: true
              - name: cluster_region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: cluster_type
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: ibmcloud_api_key
                type: string
                description: The IBM Cloud api token
              - name: cluster_exists
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
              - name: login_user
                type: string
                description: The username to log in to openshift
                optional: true
              - name: name_prefix
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                optional: true
              - name: is_vpc
                type: bool
                description: Flag indicating that the cluster uses vpc infrastructure
                optional: true
              - name: ocp_entitlement
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                optional: true
              - name: cos_name
                type: string
                description: (optional) The name of the cos instance that will be used for the OCP 4 vpc instance
                optional: true
              - name: provision_cos
                type: bool
                description: Flag indicating that the cos instance should be provisioned, if necessary
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                optional: true
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: (Deprecated) Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: (Deprecated) Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: (Deprecated) The username used to log into the openshift cli
              - name: login_password
                description: (Deprecated) The password used to log into the openshift cli
              - name: tls_secret_name
                description: (Deprecated) The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag based on the cluster type
          - version: v1.19.0
            variables:
              - name: resource_group_name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: cluster_name
                type: string
                description: The name of the cluster that will be created within the resource group
              - name: cluster_hardware
                type: string
                description: The type of hardware for the cluster (shared, dedicated)
                optional: true
              - name: cluster_worker_count
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                optional: true
              - name: cluster_machine_type
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                optional: true
              - name: flavor
                type: string
                description: (Deprecated, use VPC) The machine type that will be provisioned for classic infrastructure
                optional: true
              - name: vlan_datacenter
                type: string
                description: (Deprecated, use VPC) The datacenter that should be used for classic infrastructure provisioning
                optional: true
              - name: private_vlan_id
                type: string
                description: (Deprecated, use VPC) The private vlan id that should be used for classic infrastructure provisioning
                optional: true
              - name: public_vlan_id
                type: string
                description: (Deprecated, use VPC) The public vlan id that should be used for classic infrastructure provisioning
                optional: true
              - name: vpc_zone_names
                type: list(string)
                description: List of vpc zones
                optional: true
              - name: cluster_region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: cluster_type
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: ibmcloud_api_key
                type: string
                description: The IBM Cloud api token
              - name: cluster_exists
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
              - name: login_user
                type: string
                description: The username to log in to openshift
                optional: true
              - name: name_prefix
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                optional: true
              - name: is_vpc
                type: bool
                description: Flag indicating that the cluster uses vpc infrastructure
                optional: true
              - name: ocp_entitlement
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                optional: true
              - name: cos_name
                type: string
                description: (optional) The name of the cos instance that will be used for the OCP 4 vpc instance
                optional: true
              - name: provision_cos
                type: bool
                description: Flag indicating that the cos instance should be provisioned, if necessary
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                optional: true
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: (Deprecated) Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: (Deprecated) Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: (Deprecated) The username used to log into the openshift cli
              - name: login_password
                description: (Deprecated) The password used to log into the openshift cli
              - name: tls_secret_name
                description: (Deprecated) The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag based on the cluster type
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
        name: ocp-cluster
        description: Connects to an existing OpenShift cluster
        alias: cluster
        tags:
          - cluster
          - openshift
        versions:
          - platforms:
              - ocp4
            dependencies: []
            variables:
              - name: cluster_type
                scope: global
                type: string
                description: The type of cluster into which the toolkit will be installed (openshift or ocp3 or ocp4)
                default: ocp4
                optional: true
              - name: login_user
                scope: module
                type: string
                description: The username to log in to openshift
                default: ""
                optional: true
              - name: login_password
                scope: module
                type: string
                description: The password to log in to openshift
                default: ""
                optional: true
              - name: login_token
                scope: module
                type: string
                description: The token to log in to openshift
                default: ""
                optional: true
              - name: server_url
                scope: module
                type: string
                description: The url to the server
              - name: resource_group_name
                scope: ignore
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
                default: N/A
                optional: true
              - name: cluster_region
                scope: ignore
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
                default: N/A
                optional: true
              - name: ingress_subdomain
                scope: ignore
                type: string
                description: The ROUTER_CANONICAL_HOSTNAME for the cluster
                default: ""
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
            version: v2.4.5
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: The username used to log into the openshift cli
              - name: login_password
                description: The password used to log into the openshift cli
              - name: tls_secret_name
                description: The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag vased on the cluster type
          - platforms:
              - ocp4
            dependencies: []
            variables:
              - name: cluster_type
                scope: global
                type: string
                description: The type of cluster into which the toolkit will be installed (openshift or ocp3 or ocp4)
                default: ocp4
                optional: true
              - name: login_user
                scope: module
                type: string
                description: The username to log in to openshift
              - name: login_password
                scope: module
                type: string
                description: The password to log in to openshift
              - name: login_token
                scope: module
                type: string
                description: The token to log in to openshift
              - name: server_url
                scope: module
                type: string
                description: The url to the server
              - name: resource_group_name
                scope: ignore
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
                default: N/A
                optional: true
              - name: cluster_region
                scope: ignore
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
                default: N/A
                optional: true
              - name: ingress_subdomain
                scope: ignore
                type: string
                description: The ROUTER_CANONICAL_HOSTNAME for the cluster
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
            version: v2.4.4
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: The username used to log into the openshift cli
              - name: login_password
                description: The password used to log into the openshift cli
              - name: tls_secret_name
                description: The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag vased on the cluster type
          - platforms:
              - ocp4
            dependencies: []
            variables:
              - name: cluster_type
                scope: global
                type: string
                description: The type of cluster into which the toolkit will be installed (openshift or ocp3 or ocp4)
                default: ocp4
                optional: true
              - name: login_user
                scope: module
                type: string
                description: The username to log in to openshift
              - name: login_password
                scope: module
                type: string
                description: The password to log in to openshift
              - name: login_token
                scope: module
                type: string
                description: The token to log in to openshift
              - name: server_url
                scope: module
                type: string
                description: The url to the server
              - name: resource_group_name
                scope: ignore
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
                default: N/A
                optional: true
              - name: cluster_region
                scope: ignore
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
                default: N/A
                optional: true
              - name: ingress_subdomain
                scope: ignore
                type: string
                description: The ROUTER_CANONICAL_HOSTNAME for the cluster
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
            version: v2.4.3
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: The username used to log into the openshift cli
              - name: login_password
                description: The password used to log into the openshift cli
              - name: tls_secret_name
                description: The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag vased on the cluster type
          - platforms:
              - ocp4
            dependencies: []
            variables:
              - name: cluster_type
                scope: global
                type: string
                description: The type of cluster into which the toolkit will be installed (openshift or ocp3 or ocp4)
                default: '"ocp4"'
                optional: true
              - name: login_user
                scope: module
                type: string
                description: The username to log in to openshift
                default: '""'
                optional: true
              - name: login_password
                scope: module
                type: string
                description: The password to log in to openshift
                default: '""'
                optional: true
              - name: login_token
                scope: module
                type: string
                description: The token to log in to openshift
                default: '""'
                optional: true
              - name: server_url
                scope: module
                type: string
                description: The url to the server
              - name: resource_group_name
                scope: ignore
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
                default: '"N/A"'
                optional: true
              - name: cluster_region
                scope: ignore
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
                default: '"N/A"'
                optional: true
              - name: ingress_subdomain
                scope: ignore
                type: string
                description: The ROUTER_CANONICAL_HOSTNAME for the cluster
                default: '""'
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: '""'
                optional: true
            version: v2.4.2
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: The username used to log into the openshift cli
              - name: login_password
                description: The password used to log into the openshift cli
              - name: tls_secret_name
                description: The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag vased on the cluster type
          - version: v2.4.1
            variables:
              - name: cluster_type
                type: string
                description: The type of cluster into which the toolkit will be installed (openshift or ocp3 or ocp4)
                optional: true
              - name: login_user
                type: string
                description: The username to log in to openshift
                optional: true
              - name: login_password
                type: string
                description: The password to log in to openshift
                optional: true
              - name: login_token
                type: string
                description: The token to log in to openshift
                optional: true
              - name: server_url
                type: string
                description: The url to the server
              - name: resource_group_name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
                optional: true
              - name: cluster_region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
                optional: true
              - name: ingress_subdomain
                type: string
                description: The ROUTER_CANONICAL_HOSTNAME for the cluster
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                optional: true
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: The username used to log into the openshift cli
              - name: login_password
                description: The password used to log into the openshift cli
              - name: tls_secret_name
                description: The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag vased on the cluster type
          - version: v2.4.0
            variables:
              - name: cluster_type
                type: string
                description: The type of cluster into which the toolkit will be installed (openshift or ocp3 or ocp4)
                optional: true
              - name: login_user
                type: string
                description: The username to log in to openshift
                optional: true
              - name: login_password
                type: string
                description: The password to log in to openshift
                optional: true
              - name: login_token
                type: string
                description: The token to log in to openshift
                optional: true
              - name: server_url
                type: string
                description: The url to the server
              - name: resource_group_name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
                optional: true
              - name: cluster_region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
                optional: true
              - name: ingress_subdomain
                type: string
                description: The ROUTER_CANONICAL_HOSTNAME for the cluster
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                optional: true
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: ingress_hostname
                description: Ingress hostname of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: type
                description: (Deprecated, use platform.type) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: type_code
                description: (Deprecated, use platform.type_code) The type of cluster (openshift or ocp4 or ocp3 or kubernetes)
              - name: platform
                description: Configuration values for the cluster platform
              - name: version
                description: (Deprecated, use platform.version) The point release version number of cluster (3.11 or 4.3 or 1.16)
              - name: login_user
                description: The username used to log into the openshift cli
              - name: login_password
                description: The password used to log into the openshift cli
              - name: tls_secret_name
                description: The name of the secret containin the tls information for the cluster
              - name: tag
                description: The tag vased on the cluster type
        aliasIds:
          - github.com/cloud-native-toolkit/terraform-ocp-cluster
        provider: k8s
      - id: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
        name: ibm-ocp-vpc
        alias: cluster
        type: terraform
        description: Provisions an IBM Cloud OCP cluster
        tags:
          - ocp
          - cluster
          - vpc
        versions:
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.8.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
                optional: true
              - id: sync
                refs: []
                interface: github.com/cloud-native-toolkit/automation-modules#sync
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: subnets
                  output: vpc_name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: kms_id
                moduleRef:
                  id: kms_key
                  output: kms_id
                optional: true
                type: string
                description: The crn of the KMS instance that will be used to encrypt the cluster.
                default: "null"
              - name: kms_key_id
                moduleRef:
                  id: kms_key
                  output: id
                optional: true
                type: string
                description: The id of the root key in the KMS instance that will be used to encrypt the cluster.
                default: "null"
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: sync
                moduleRef:
                  id: sync
                  output: sync
                type: string
                description: Value used to order dependencies
                default: ""
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
              - name: ocp_entitlement
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that kms encryption should be enabled for this cluster
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating that the private endpoint should be used to connect the KMS system to the cluster.
                default: true
                optional: true
              - name: login
                type: bool
                description: Flag indicating that after the cluster is provisioned, the module should log into the cluster
                default: false
                optional: true
            version: v1.9.0
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
              - name: sync
                description: Value used to sync downstream modules
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.8.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: subnets
                  output: vpc_name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: kms_id
                moduleRef:
                  id: kms_key
                  output: kms_id
                optional: true
                type: string
                description: The crn of the KMS instance that will be used to encrypt the cluster.
                default: "null"
              - name: kms_key_id
                moduleRef:
                  id: kms_key
                  output: id
                optional: true
                type: string
                description: The id of the root key in the KMS instance that will be used to encrypt the cluster.
                default: "null"
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that kms encryption should be enabled for this cluster
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating that the private endpoint should be used to connect the KMS system to the cluster.
                default: true
                optional: true
              - name: login
                type: bool
                description: Flag indicating that after the cluster is provisioned, the module should log into the cluster
                default: false
                optional: true
            version: v1.8.0
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: kms_id
                moduleRef:
                  id: kms_key
                  output: kms_id
                optional: true
                type: string
                description: The crn of the KMS instance that will be used to encrypt the cluster.
                default: "null"
              - name: kms_key_id
                moduleRef:
                  id: kms_key
                  output: id
                optional: true
                type: string
                description: The id of the root key in the KMS instance that will be used to encrypt the cluster.
                default: "null"
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that kms encryption should be enabled for this cluster
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating that the private endpoint should be used to connect the KMS system to the cluster.
                default: true
                optional: true
              - name: login
                type: bool
                description: Flag indicating that after the cluster is provisioned, the module should log into the cluster
                default: false
                optional: true
            version: v1.7.0
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: kms_id
                moduleRef:
                  id: kms_key
                  output: kms_id
                optional: true
                type: string
                description: The crn of the KMS instance that will be used to encrypt the cluster.
                default: "null"
              - name: kms_key_id
                moduleRef:
                  id: kms_key
                  output: id
                optional: true
                type: string
                description: The id of the root key in the KMS instance that will be used to encrypt the cluster.
                default: "null"
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that kms encryption should be enabled for this cluster
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating that the private endpoint should be used to connect the KMS system to the cluster.
                default: true
                optional: true
              - name: login
                type: bool
                description: Flag indicating that after the cluster is provisioned, the module should log into the cluster
                default: false
                optional: true
            version: v1.6.1
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: kms_id
                moduleRef:
                  id: kms_key
                  output: kms_id
                optional: true
                type: string
                description: The crn of the KMS instance that will be used to encrypt the cluster.
                default: "null"
              - name: kms_key_id
                moduleRef:
                  id: kms_key
                  output: id
                optional: true
                type: string
                description: The id of the root key in the KMS instance that will be used to encrypt the cluster.
                default: "null"
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that kms encryption should be enabled for this cluster
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating that the private endpoint should be used to connect the KMS system to the cluster.
                default: true
                optional: true
              - name: login
                type: bool
                description: Flag indicating that after the cluster is provisioned, the module should log into the cluster
                default: false
                optional: true
            version: v1.6.0
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: kms_id
                moduleRef:
                  id: kms_key
                  output: kms_id
                optional: true
                type: string
                description: The crn of the KMS instance that will be used to encrypt the cluster.
                default: "null"
              - name: kms_key_id
                moduleRef:
                  id: kms_key
                  output: id
                optional: true
                type: string
                description: The id of the root key in the KMS instance that will be used to encrypt the cluster.
                default: "null"
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that kms encryption should be enabled for this cluster
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating that the private endpoint should be used to connect the KMS system to the cluster.
                default: true
                optional: true
              - name: login
                type: bool
                description: Flag indicating that after the cluster is provisioned, the module should log into the cluster
                default: false
                optional: true
            version: v1.5.0
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: kms_id
                moduleRef:
                  id: kms
                  output: guid
                optional: true
                type: string
                description: The crn of the KMS instance that will be used to encrypt the cluster.
                default: ""
              - name: kms_key_id
                optional: true
                type: string
                description: The id of the root key in the KMS instance that will be used to encrypt the cluster.
                default: ""
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                scope: ignore
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that kms encryption should be enabled for this cluster
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating that the private endpoint should be used to connect the KMS system to the cluster.
                default: true
                optional: true
              - name: authorize_kms
                type: bool
                description: Flag indicating that the authorization between the kms and the service should be created.
                default: true
                optional: true
              - name: login
                type: bool
                description: Flag indicating that after the cluster is provisioned, the module should log into the cluster
                default: false
                optional: true
            version: v1.4.1
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: kms_id
                moduleRef:
                  id: kms
                  output: guid
                optional: true
                type: string
                description: The crn of the KMS instance that will be used to encrypt the cluster.
                default: ""
              - name: kms_key_id
                optional: true
                type: string
                description: The id of the root key in the KMS instance that will be used to encrypt the cluster.
                default: ""
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                scope: ignore
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that kms encryption should be enabled for this cluster
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating that the private endpoint should be used to connect the KMS system to the cluster.
                default: true
                optional: true
              - name: authorize_kms
                type: bool
                description: Flag indicating that the authorization between the kms and the service should be created.
                default: true
                optional: true
              - name: login
                type: bool
                description: Flag indicating that after the cluster is provisioned, the module should log into the cluster
                default: false
                optional: true
            version: v1.4.0
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: kms_id
                moduleRef:
                  id: kms
                  output: guid
                optional: true
                type: string
                description: The crn of the KMS instance that will be used to encrypt the cluster.
                default: ""
              - name: kms_key_id
                optional: true
                type: string
                description: The id of the root key in the KMS instance that will be used to encrypt the cluster.
                default: ""
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                scope: ignore
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: gitops_dir
                scope: global
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that kms encryption should be enabled for this cluster
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating that the private endpoint should be used to connect the KMS system to the cluster.
                default: true
                optional: true
              - name: authorize_kms
                type: bool
                description: Flag indicating that the authorization between the kms and the service should be created.
                default: true
                optional: true
            version: v1.3.4
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: kms_id
                moduleRef:
                  id: kms
                  output: id
                optional: true
                type: string
                description: The crn of the KMS instance that will be used to encrypt the cluster.
                default: ""
              - name: kms_key_id
                optional: true
                type: string
                description: The id of the root key in the KMS instance that will be used to encrypt the cluster.
                default: ""
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                scope: ignore
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that kms encryption should be enabled for this cluster
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating that the private endpoint should be used to connect the KMS system to the cluster.
                default: true
                optional: true
              - name: authorize_kms
                type: bool
                description: Flag indicating that the authorization between the kms and the service should be created.
                default: true
                optional: true
            version: v1.3.3
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: kms_id
                moduleRef:
                  id: kms
                  output: id
                optional: true
                type: string
                description: The crn of the KMS instance that will be used to encrypt the cluster.
                default: ""
              - name: kms_key_id
                optional: true
                type: string
                description: The id of the root key in the KMS instance that will be used to encrypt the cluster.
                default: ""
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                scope: ignore
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating that the private endpoint should be used to connect the KMS system to the cluster.
                default: true
                optional: true
              - name: authorize_kms
                type: bool
                description: Flag indicating that the authorization between the kms and the service should be created.
                default: true
                optional: true
            version: v1.3.2
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: kms_id
                moduleRef:
                  id: kms
                  output: id
                optional: true
                type: string
                description: The crn of the KMS instance that will be used to encrypt the cluster.
                default: ""
              - name: kms_key_id
                optional: true
                type: string
                description: The id of the root key in the KMS instance that will be used to encrypt the cluster.
                default: ""
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                scope: ignore
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating that the private endpoint should be used to connect the KMS system to the cluster.
                default: true
                optional: true
              - name: authorize_kms
                type: bool
                description: Flag indicating that the authorization between the kms and the service should be created.
                default: true
                optional: true
            version: v1.3.1
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: kms_id
                moduleRef:
                  id: kms
                  output: id
                optional: true
                type: string
                description: The crn of the KMS instance that will be used to encrypt the cluster.
                default: ""
              - name: kms_key_id
                optional: true
                type: string
                description: The id of the root key in the KMS instance that will be used to encrypt the cluster.
                default: ""
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                scope: ignore
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating that the private endpoint should be used to connect the KMS system to the cluster.
                default: true
                optional: true
              - name: authorize_kms
                type: bool
                description: Flag indicating that the authorization between the kms and the service should be created.
                default: true
                optional: true
            version: v1.3.0
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                scope: ignore
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
            version: v1.2.5
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                scope: ignore
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
            version: v1.2.4
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                scope: ignore
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
            version: v1.2.3
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                scope: ignore
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
            version: v1.2.2
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                scope: ignore
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
            version: v1.2.1
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: string
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: string
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
              - name: name_prefix
                scope: global
                type: string
                default: ""
              - name: region
                scope: global
                type: string
              - name: ibmcloud_api_key
                scope: global
                type: string
              - name: name
                scope: module
                default: ""
                type: string
              - name: worker_count
                scope: global
                type: number
                default: 3
              - name: ocp_version
                scope: global
                type: string
                default: 4.6
              - name: exists
                scope: module
                type: bool
                default: false
              - name: ocp_entitlement
                scope: ignore
                type: string
                default: cloud_pak
              - name: gitops_dir
                scope: global
                type: string
                default: ""
              - name: flavor
                type: string
                default: bx2.4x16
              - name: disable_public_endpoint
                type: bool
                default: false
            version: v1.2.0
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: vpc
                  output: subnet_count
                type: number
                description: Number of vpc zones
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: "4.6"
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                scope: ignore
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
            version: v1.1.1
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: vpc
                  output: subnet_count
                type: number
                description: Number of vpc zones
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: 4.6
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                scope: ignore
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: cos_name
                scope: global
              - name: provision_cos
                scope: global
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
            version: v1.1.0
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies:
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: vpc
                  output: subnet_count
                type: number
                description: Number of vpc zones
              - name: cos_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: The crn of the COS instance that will be used with the OCP instance
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: ocp_version
                scope: global
                type: string
                description: The version of the OpenShift cluster that should be provisioned (format 4.x)
                default: 4.6
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: ocp_entitlement
                scope: ignore
                type: string
                description: Value that is applied to the entitlements for OCP cluster provisioning
                default: cloud_pak
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: cos_name
                scope: global
              - name: provision_cos
                scope: global
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
            version: v1.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-iks-vpc
        name: ibm-iks-vpc
        alias: cluster
        type: terraform
        description: Provisions an IBM Cloud IKS cluster
        interfaces:
          - github.com/cloud-native-toolkit/automation-modules#cluster
          - github.com/cloud-native-toolkit/automation-modules#sync
        tags:
          - iks
          - cluster
          - vpc
        versions:
          - platforms:
              - kubernetes
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.8.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
                optional: true
              - id: sync
                refs: []
                interface: github.com/cloud-native-toolkit/automation-modules#sync
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: subnets
                  output: vpc_name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: kms_id
                moduleRef:
                  id: kms_key
                  output: kms_id
                optional: true
                type: string
                description: The crn of the KMS instance that will be used to encrypt the cluster.
                default: "null"
              - name: kms_key_id
                moduleRef:
                  id: kms_key
                  output: id
                optional: true
                type: string
                description: The id of the root key in the KMS instance that will be used to encrypt the cluster.
                default: "null"
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: sync
                moduleRef:
                  id: sync
                  output: sync
                type: string
                description: Value used to order dependencies
                default: ""
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that kms encryption should be enabled for this cluster
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating that the private endpoint should be used to connect the KMS system to the cluster.
                default: true
                optional: true
              - name: login
                type: bool
                description: Flag indicating that after the cluster is provisioned, the module should log into the cluster
                default: false
                optional: true
            version: v1.0.1
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
              - name: sync
                description: Value used to sync downstream modules
          - platforms:
              - kubernetes
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.8.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
                optional: true
              - id: sync
                refs: []
                interface: github.com/cloud-native-toolkit/automation-modules#sync
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: vpc_name
                moduleRef:
                  id: subnets
                  output: vpc_name
                type: string
                description: Name of the VPC instance that will be used
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: kms_id
                moduleRef:
                  id: kms_key
                  output: kms_id
                optional: true
                type: string
                description: The crn of the KMS instance that will be used to encrypt the cluster.
                default: "null"
              - name: kms_key_id
                moduleRef:
                  id: kms_key
                  output: id
                optional: true
                type: string
                description: The id of the root key in the KMS instance that will be used to encrypt the cluster.
                default: "null"
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: module
                type: string
                description: The name of the cluster that will be created within the resource group
                default: ""
                optional: true
              - name: worker_count
                scope: global
                type: number
                description: The number of worker nodes that should be provisioned for classic infrastructure
                default: 3
                optional: true
              - name: exists
                scope: module
                type: bool
                description: Flag indicating if the cluster already exists (true or false)
                default: false
                optional: true
              - name: sync
                moduleRef:
                  id: sync
                  output: sync
                type: string
                description: Value used to order dependencies
                default: ""
                optional: true
              - name: flavor
                type: string
                description: The machine type that will be provisioned for classic infrastructure
                default: bx2.4x16
                optional: true
              - name: disable_public_endpoint
                type: bool
                description: Flag indicating that the public endpoint should be disabled
                default: false
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that kms encryption should be enabled for this cluster
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating that the private endpoint should be used to connect the KMS system to the cluster.
                default: true
                optional: true
              - name: login
                type: bool
                description: Flag indicating that after the cluster is provisioned, the module should log into the cluster
                default: false
                optional: true
            version: v1.0.0
            outputs:
              - name: id
                description: ID of the cluster.
              - name: name
                description: Name of the cluster.
              - name: resource_group_name
                description: Name of the resource group containing the cluster.
              - name: region
                description: Region containing the cluster.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
              - name: sync
                description: Value used to sync downstream modules
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ocp-login
        name: ocp-login
        alias: login
        type: terraform
        description: Module to perform a simple cluster login and provide the cluster path
        tags:
          - openshift
        versions:
          - platforms:
              - ocp4
            dependencies: []
            variables:
              - name: server_url
                scope: global
                type: string
                description: The url for the OpenShift api
                default: ""
                optional: true
              - name: login_user
                type: string
                description: Username for login
                default: ""
                optional: true
              - name: login_password
                type: string
                description: Password for login
                default: ""
                optional: true
              - name: login_token
                type: string
                description: Token used for authentication
                default: ""
                optional: true
              - name: skip
                type: bool
                description: Flag indicating that the cluster login has already been performed
                default: false
                optional: true
              - name: cluster_version
                type: string
                description: The version of the cluster (passed through to the output)
                default: ""
                optional: true
              - name: ingress_subdomain
                type: string
                description: The ingress subdomain of the cluster (passed through to the output)
                default: ""
                optional: true
              - name: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificates for the ingress subdomain (passed through to the output)
                default: ""
                optional: true
            version: v1.1.0
            outputs:
              - name: id
                description: ID of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - ocp4
            dependencies: []
            variables:
              - name: server_url
                scope: global
                type: string
                description: The url for the OpenShift api
                default: ""
                optional: true
              - name: user
                type: string
                description: Username for login
                default: ""
                optional: true
              - name: password
                type: string
                description: Password for login
                default: ""
                optional: true
              - name: token
                type: string
                description: Token used for authentication
                default: ""
                optional: true
              - name: skip
                type: bool
                description: Flag indicating that the cluster login has already been performed
                default: false
                optional: true
            version: v1.0.0
            outputs:
              - name: id
                description: ID of the cluster.
              - name: server_url
                description: The url of the control server.
              - name: config_file_path
                description: Path to the config file for the cluster.
              - name: platform
                description: Configuration values for the cluster platform
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ocp
  - category: dev-tool
    categoryName: Dev Tools
    selection: multiple
    modules:
      - id: github.com/cloud-native-toolkit/terraform-tools-argocd
        name: argocd
        type: terraform
        description: Module to install ArgoCD into a cluster via an operator
        tags:
          - tools
          - devops
          - gitops
          - argocd
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-iks-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.17.4
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
              - name: provision_tekton
                description: Flag indicating that Tekton should be provisioned
              - name: namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: service_account
                description: The name of the service account for the ArgoCD instance has been provisioned
              - name: username
                description: The username of the default ArgoCD admin user
              - name: password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.17.3
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
              - name: provision_tekton
                description: Flag indicating that Tekton should be provisioned
              - name: namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: service_account
                description: The name of the service account for the ArgoCD instance has been provisioned
              - name: username
                description: The username of the default ArgoCD admin user
              - name: password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.17.2
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
              - name: provision_tekton
                description: Flag indicating that Tekton should be provisioned
              - name: namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: service_account
                description: The name of the service account for the ArgoCD instance has been provisioned
              - name: username
                description: The username of the default ArgoCD admin user
              - name: password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.17.1
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
              - name: provision_tekton
                description: Flag indicating that Tekton should be provisioned
              - name: namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: service_account
                description: The name of the service account for the ArgoCD instance has been provisioned
              - name: username
                description: The username of the default ArgoCD admin user
              - name: password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.17.0
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
              - name: provision_tekton
                description: Flag indicating that Tekton should be provisioned
              - name: namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: service_account
                description: The name of the service account for the ArgoCD instance has been provisioned
              - name: username
                description: The username of the default ArgoCD admin user
              - name: password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.16.3
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
              - name: provision_tekton
                description: Flag indicating that Tekton should be provisioned
              - name: namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: service_account
                description: The name of the service account for the ArgoCD instance has been provisioned
              - name: username
                description: The username of the default ArgoCD admin user
              - name: password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.16.2
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
              - name: provision_tekton
                description: Flag indicating that Tekton should be provisioned
              - name: namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: username
                description: The username of the default ArgoCD admin user
              - name: password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.16.1
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
              - name: provision_tekton
                description: Flag indicating that Tekton should be provisioned
              - name: namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: username
                description: The username of the default ArgoCD admin user
              - name: password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.16.0
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
              - name: provision_tekton
                description: Flag indicating that Tekton should be provisioned
              - name: namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: username
                description: The username of the default ArgoCD admin user
              - name: password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.15.1
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
              - name: provision_tekton
                description: Flag indicating that Tekton should be provisioned
              - name: namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: username
                description: The username of the default ArgoCD admin user
              - name: password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.15.0
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
              - name: provision_tekton
                description: Flag indicating that Tekton should be provisioned
              - name: namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: username
                description: The username of the default ArgoCD admin user
              - name: password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.14.1
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
              - name: provision_tekton
                description: Flag indicating that Tekton should be provisioned
              - name: namespace
                description: The namespace where the ArgoCD instance has been provisioned
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.14.0
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
              - name: provision_tekton
                description: Flag indicating that Tekton should be provisioned
              - name: namespace
                description: The namespace where the ArgoCD instance has been provisioned
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.13.1
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.13.0
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.12.1
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd-cluster
                optional: true
            version: v2.12.0
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd
                optional: true
              - name: operator_version
                type: string
                description: The starting version of the CSV
                default: v0.0.9
                optional: true
            version: v2.11.1
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd
                optional: true
              - name: operator_version
                type: string
                description: The starting version of the CSV
                default: v0.0.9
                optional: true
            version: v2.11.0
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                default: argocd
                optional: true
              - name: operator_version
                type: string
                description: The starting version of the CSV
                default: v0.0.9
                optional: true
            version: v2.10.2
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: The subdomain for ingresses in the cluster
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Namespace where operators will be installed
              - name: name
                type: string
                description: The name for the instance
                optional: true
              - name: operator_version
                type: string
                description: The starting version of the CSV
                optional: true
            version: v2.10.1
            outputs:
              - name: ingress_host
                description: The ingress host for the Argo CD instance
              - name: ingress_url
                description: The ingress url for the Argo CD instance
        provider: tools
      - id: github.com/cloud-native-toolkit/terraform-tools-artifactory
        name: artifactory
        type: terraform
        description: Module to install Artifactory into a cluster
        tags:
          - tools
          - devops
          - artifact management
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
              - name: service_account
                type: string
                description: The service account under which the artifactory pods should run
                default: artifactory-artifactory
                optional: true
              - name: chart_version
                type: string
                description: The chart version that will be used for artifactory release
                default: 9.4.5
                optional: true
              - name: storage_class
                type: string
                description: The storage class of the persistence volume claim
                default: ""
                optional: true
              - name: persistence
                type: bool
                description: Flag to indicate if PVCs should be used
                default: true
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
            version: v1.10.3
            outputs:
              - name: ingress_host
                description: The ingress host for the Artifactory instance
              - name: ingress_url
                description: The ingress url for the Artifactory instance
              - name: config_name
                description: The name of the secret created to store the url
              - name: secret_name
                description: The name of the secret created to store the credentials
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
              - name: service_account
                type: string
                description: The service account under which the artifactory pods should run
                default: artifactory-artifactory
                optional: true
              - name: chart_version
                type: string
                description: The chart version that will be used for artifactory release
                default: 9.4.5
                optional: true
              - name: storage_class
                type: string
                description: The storage class of the persistence volume claim
                default: ""
                optional: true
              - name: persistence
                type: bool
                description: Flag to indicate if PVCs should be used
                default: true
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
            version: v1.10.2
            outputs:
              - name: ingress_host
                description: The ingress host for the Artifactory instance
              - name: ingress_url
                description: The ingress url for the Artifactory instance
              - name: config_name
                description: The name of the secret created to store the url
              - name: secret_name
                description: The name of the secret created to store the credentials
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
              - name: service_account
                type: string
                description: The service account under which the artifactory pods should run
                default: artifactory-artifactory
                optional: true
              - name: chart_version
                type: string
                description: The chart version that will be used for artifactory release
                default: 9.4.5
                optional: true
              - name: storage_class
                type: string
                description: The storage class of the persistence volume claim
                default: ""
                optional: true
              - name: persistence
                type: bool
                description: Flag to indicate if PVCs should be used
                default: true
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
            version: v1.10.1
            outputs:
              - name: ingress_host
                description: The ingress host for the Artifactory instance
              - name: ingress_url
                description: The ingress url for the Artifactory instance
              - name: config_name
                description: The name of the secret created to store the url
              - name: secret_name
                description: The name of the secret created to store the credentials
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate values
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
              - name: service_account
                type: string
                description: The service account under which the artifactory pods should run
                optional: true
              - name: chart_version
                type: string
                description: The chart version that will be used for artifactory release
                optional: true
              - name: storage_class
                type: string
                description: The storage class of the persistence volume claim
                optional: true
              - name: persistence
                type: bool
                description: Flag to indicate if PVCs should be used
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                optional: true
            version: v1.10.0
            outputs:
              - name: ingress_host
                description: The ingress host for the Artifactory instance
              - name: ingress_url
                description: The ingress url for the Artifactory instance
              - name: config_name
                description: The name of the secret created to store the url
              - name: secret_name
                description: The name of the secret created to store the credentials
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate values
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
              - name: service_account
                type: string
                description: The service account under which the artifactory pods should run
                optional: true
              - name: chart_version
                type: string
                description: The chart version that will be used for artifactory release
                optional: true
              - name: storage_class
                type: string
                description: The storage class of the persistence volume claim
                optional: true
              - name: persistence
                type: bool
                description: Flag to indicate if PVCs should be used
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                optional: true
            version: v1.9.9
            outputs:
              - name: ingress_host
                description: The ingress host for the Artifactory instance
              - name: ingress_url
                description: The ingress url for the Artifactory instance
              - name: config_name
                description: The name of the secret created to store the url
              - name: secret_name
                description: The name of the secret created to store the credentials
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate values
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
              - name: service_account
                type: string
                description: The service account under which the artifactory pods should run
                optional: true
              - name: chart_version
                type: string
                description: The chart version that will be used for artifactory release
                optional: true
              - name: storage_class
                type: string
                description: The storage class of the persistence volume claim
                optional: true
              - name: persistence
                type: bool
                description: Flag to indicate if PVCs should be used
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                optional: true
            version: v1.9.8
            outputs:
              - name: ingress_host
                description: The ingress host for the Artifactory instance
              - name: ingress_url
                description: The ingress url for the Artifactory instance
              - name: config_name
                description: The name of the secret created to store the url
              - name: secret_name
                description: The name of the secret created to store the credentials
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate values
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
              - name: service_account
                type: string
                description: The service account under which the artifactory pods should run
                optional: true
              - name: chart_version
                type: string
                description: The chart version that will be used for artifactory release
                optional: true
              - name: storage_class
                type: string
                description: The storage class of the persistence volume claim
                optional: true
              - name: persistence
                type: bool
                description: Flag to indicate if PVCs should be used
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                optional: true
            version: v1.9.7
            outputs:
              - name: ingress_host
                description: The ingress host for the Artifactory instance
              - name: ingress_url
                description: The ingress url for the Artifactory instance
              - name: config_name
                description: The name of the secret created to store the url
              - name: secret_name
                description: The name of the secret created to store the credentials
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate values
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
              - name: service_account
                type: string
                description: The service account under which the artifactory pods should run
                optional: true
              - name: chart_version
                type: string
                description: The chart version that will be used for artifactory release
                optional: true
              - name: storage_class
                type: string
                description: The storage class of the persistence volume claim
                optional: true
              - name: persistence
                type: bool
                description: Flag to indicate if PVCs should be used
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                optional: true
            version: v1.9.6
            outputs:
              - name: ingress_host
                description: The ingress host for the Artifactory instance
              - name: ingress_url
                description: The ingress url for the Artifactory instance
              - name: config_name
                description: The name of the secret created to store the url
              - name: secret_name
                description: The name of the secret created to store the credentials
        provider: tools
      - id: github.com/cloud-native-toolkit/terraform-tools-dashboard
        name: dashboard
        type: terraform
        description: Module to install Dashboard into a cluster
        tags:
          - tools
          - devops
          - dashboard
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where the Helm Releases will be deployed.
              - name: tool_config_maps
                type: list(string)
                description: The list of config maps containing connectivity information for tools
                default: []
                optional: true
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.4.4
                optional: true
              - name: chart_version
                type: string
                description: The helm chart version that should be installed from https://ibm-garage-cloud.github.io/toolkit-charts
                default: 1.0.0
                optional: true
              - name: enable_sso
                type: bool
                description: Flag indicating that ssl should be enabled (OpenShift only)
                default: true
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
            version: v1.10.13
            outputs:
              - name: ingress_host
                description: The ingress host for the Catalyst Dashboard instance
              - name: base_icon_url
                description: The base url that serves icons for the tools
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where the Helm Releases will be deployed.
              - name: tool_config_maps
                type: list(string)
                description: The list of config maps containing connectivity information for tools
                default: []
                optional: true
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.4.3
                optional: true
              - name: chart_version
                type: string
                description: The helm chart version that should be installed from https://ibm-garage-cloud.github.io/toolkit-charts
                default: 1.0.0
                optional: true
              - name: enable_sso
                type: bool
                description: Flag indicating that ssl should be enabled (OpenShift only)
                default: true
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
            version: v1.10.12
            outputs:
              - name: ingress_host
                description: The ingress host for the Catalyst Dashboard instance
              - name: base_icon_url
                description: The base url that serves icons for the tools
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where the Helm Releases will be deployed.
              - name: tool_config_maps
                type: list(string)
                description: The list of config maps containing connectivity information for tools
                default: []
                optional: true
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.3.11
                optional: true
              - name: chart_version
                type: string
                description: The helm chart version that should be installed from https://ibm-garage-cloud.github.io/toolkit-charts
                default: 1.0.0
                optional: true
              - name: enable_sso
                type: bool
                description: Flag indicating that ssl should be enabled (OpenShift only)
                default: true
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
            version: v1.10.11
            outputs:
              - name: ingress_host
                description: The ingress host for the Catalyst Dashboard instance
              - name: base_icon_url
                description: The base url that serves icons for the tools
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where the Helm Releases will be deployed.
              - name: tool_config_maps
                type: list(string)
                description: The list of config maps containing connectivity information for tools
                default: []
                optional: true
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.3.10
                optional: true
              - name: chart_version
                type: string
                description: The helm chart version that should be installed from https://ibm-garage-cloud.github.io/toolkit-charts
                default: 1.0.0
                optional: true
              - name: enable_sso
                type: bool
                description: Flag indicating that ssl should be enabled (OpenShift only)
                default: true
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
            version: v1.10.10
            outputs:
              - name: ingress_host
                description: The ingress host for the Catalyst Dashboard instance
              - name: base_icon_url
                description: The base url that serves icons for the tools
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where the Helm Releases will be deployed.
              - name: tool_config_maps
                type: list(string)
                description: The list of config maps containing connectivity information for tools
                default: []
                optional: true
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.3.9
                optional: true
              - name: chart_version
                type: string
                description: The helm chart version that should be installed from https://ibm-garage-cloud.github.io/toolkit-charts
                default: 1.0.0
                optional: true
              - name: enable_sso
                type: bool
                description: Flag indicating that ssl should be enabled (OpenShift only)
                default: true
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
            version: v1.10.9
            outputs:
              - name: ingress_host
                description: The ingress host for the Catalyst Dashboard instance
              - name: base_icon_url
                description: The base url that serves icons for the tools
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where the Helm Releases will be deployed.
              - name: tool_config_maps
                type: list(string)
                description: The list of config maps containing connectivity information for tools
                default: []
                optional: true
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.3.8
                optional: true
              - name: chart_version
                type: string
                description: The helm chart version that should be installed from https://ibm-garage-cloud.github.io/toolkit-charts
                default: 1.0.0
                optional: true
              - name: enable_sso
                type: bool
                description: Flag indicating that ssl should be enabled (OpenShift only)
                default: true
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
            version: v1.10.8
            outputs:
              - name: ingress_host
                description: The ingress host for the Catalyst Dashboard instance
              - name: base_icon_url
                description: The base url that serves icons for the tools
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where the Helm Releases will be deployed.
              - name: tool_config_maps
                type: list(string)
                description: The list of config maps containing connectivity information for tools
                default: []
                optional: true
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.3.6
                optional: true
              - name: chart_version
                type: string
                description: The helm chart version that should be installed from https://ibm-garage-cloud.github.io/toolkit-charts
                default: 1.0.0
                optional: true
              - name: enable_sso
                type: bool
                description: Flag indicating that ssl should be enabled (OpenShift only)
                default: true
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
            version: v1.10.7
            outputs:
              - name: ingress_host
                description: The ingress host for the Catalyst Dashboard instance
              - name: base_icon_url
                description: The base url that serves icons for the tools
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where the Helm Releases will be deployed.
              - name: tool_config_maps
                type: list(string)
                description: The list of config maps containing connectivity information for tools
                default: []
                optional: true
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.3.6
                optional: true
              - name: chart_version
                type: string
                description: The helm chart version that should be installed from https://ibm-garage-cloud.github.io/toolkit-charts
                default: 1.0.0
                optional: true
              - name: enable_sso
                type: bool
                description: Flag indicating that ssl should be enabled (OpenShift only)
                default: true
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
            version: v1.10.6
            outputs:
              - name: ingress_host
                description: The ingress host for the Catalyst Dashboard instance
              - name: base_icon_url
                description: The base url that serves icons for the tools
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where the Helm Releases will be deployed.
              - name: tool_config_maps
                type: list(string)
                description: The list of config maps containing connectivity information for tools
                default: []
                optional: true
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.3.5
                optional: true
              - name: chart_version
                type: string
                description: The helm chart version that should be installed from https://ibm-garage-cloud.github.io/toolkit-charts
                default: 1.0.0
                optional: true
              - name: enable_sso
                type: bool
                description: Flag indicating that ssl should be enabled (OpenShift only)
                default: true
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
            version: v1.10.5
            outputs:
              - name: ingress_host
                description: The ingress host for the Catalyst Dashboard instance
              - name: base_icon_url
                description: The base url that serves icons for the tools
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate values
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where the Helm Releases will be deployed.
              - name: tool_config_maps
                type: list(string)
                description: The list of config maps containing connectivity information for tools
                optional: true
              - name: image_tag
                type: string
                description: The image version tag to use
                optional: true
              - name: chart_version
                type: string
                description: The helm chart version that should be installed from https://ibm-garage-cloud.github.io/toolkit-charts
                optional: true
              - name: enable_sso
                type: bool
                description: Flag indicating that ssl should be enabled (OpenShift only)
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                optional: true
            version: v1.10.4
            outputs:
              - name: ingress_host
                description: The ingress host for the Catalyst Dashboard instance
              - name: base_icon_url
                description: The base url that serves icons for the tools
        provider: tools
      - id: github.com/cloud-native-toolkit/terraform-tools-jenkins
        name: jenkins
        type: terraform
        description: Module to install Jenkins into a cluster
        tags:
          - tools
          - devops
          - jenkins
          - continuous integration
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The secret containing the tls certificates
                default: ""
                optional: true
              - name: server_url
                moduleRef:
                  id: cluster
                  output: server_url
                type: string
                description: The public url of the openshift/kubernetes cluster
                default: ""
                optional: true
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where tools are deployed.
              - name: ci_namespace
                type: string
                description: Name of the existing namespace where the CI deployments will be validated.
                default: ""
                optional: true
              - name: volume_capacity
                type: string
                description: The volume capacity of the persistence volume claim
                default: 2Gi
                optional: true
              - name: storage_class
                type: string
                description: The storage class of the persistence volume claim
                default: ibmc-file-gold
                optional: true
              - name: helm_version
                type: string
                description: The version of helm chart that should be deployed
                default: 2.0.1
                optional: true
            version: v1.4.4
            outputs:
              - name: ingress_host
                description: The ingress host for the Jenkins instance
              - name: ingress_url
                description: The ingress url for the Jenkins instance
              - name: config_name
                description: The name of the secret created to store the url
              - name: secret_name
                description: The name of the secret created to store the credentials
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The secret containing the tls certificates
                optional: true
              - name: server_url
                moduleRef:
                  id: cluster
                  output: server_url
                type: string
                description: The public url of the openshift/kubernetes cluster
                optional: true
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where tools are deployed.
              - name: ci_namespace
                type: string
                description: Name of the existing namespace where the CI deployments will be validated.
                optional: true
              - name: volume_capacity
                type: string
                description: The volume capacity of the persistence volume claim
                optional: true
              - name: storage_class
                type: string
                description: The storage class of the persistence volume claim
                optional: true
              - name: helm_version
                type: string
                description: The version of helm chart that should be deployed
                optional: true
            version: v1.4.3
            outputs:
              - name: ingress_host
                description: The ingress host for the Jenkins instance
              - name: ingress_url
                description: The ingress url for the Jenkins instance
              - name: config_name
                description: The name of the secret created to store the url
              - name: secret_name
                description: The name of the secret created to store the credentials
        provider: tools
      - id: github.com/cloud-native-toolkit/terraform-tools-openshift-cicd
        name: openshift-cicd
        type: terraform
        description: Module to provision Tekton and ArgoCD into an OpenShift cluster together
        tags:
          - tools
          - devops
          - tekton
          - argocd
        versions:
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: cert
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-util-sealed-secret-cert
                    version: '>= 0.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
              - name: sealed_secret_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: sealed-secrets
                type: string
                description: The namespace where the sealed secret will be deployed
                default: sealed-secrets
                optional: true
              - name: sealed_secret_cert
                moduleRef:
                  id: cert
                  output: cert
                type: string
                description: The certificate that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key
                moduleRef:
                  id: cert
                  output: private_key
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
            version: v1.7.2
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
              - name: sealed_secrets_private_key
                description: output "sealed_secrets_private_key" {   value = module.sealed_secrets.private_key   sensitive = true }
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.sealed_secrets.cert }
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: cert
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-util-sealed-secret-cert
                    version: '>= 0.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
              - name: sealed_secret_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: sealed-secrets
                type: string
                description: The namespace where the sealed secret will be deployed
                default: sealed-secrets
                optional: true
              - name: sealed_secret_cert
                moduleRef:
                  id: cert
                  output: cert
                type: string
                description: The certificate that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key
                moduleRef:
                  id: cert
                  output: private_key
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
            version: v1.7.1
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
              - name: sealed_secrets_private_key
                description: output "sealed_secrets_private_key" {   value = module.sealed_secrets.private_key   sensitive = true }
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.sealed_secrets.cert }
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: cert
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-util-sealed-secret-cert
                    version: '>= 0.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
              - name: sealed_secret_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: sealed-secrets
                type: string
                description: The namespace where the sealed secret will be deployed
                default: sealed-secrets
                optional: true
              - name: sealed_secret_cert
                moduleRef:
                  id: cert
                  output: cert
                type: string
                description: The certificate that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key
                moduleRef:
                  id: cert
                  output: private_key
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
            version: v1.7.0
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
              - name: sealed_secrets_private_key
                description: output "sealed_secrets_private_key" {   value = module.sealed_secrets.private_key   sensitive = true }
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.sealed_secrets.cert }
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: cert
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-util-sealed-secret-cert
                    version: '>= 0.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
              - name: sealed_secret_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: sealed-secrets
                type: string
                description: The namespace where the sealed secret will be deployed
                default: sealed-secrets
                optional: true
              - name: sealed_secret_cert
                moduleRef:
                  id: cert
                  output: cert
                type: string
                description: The certificate that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key
                moduleRef:
                  id: cert
                  output: private_key
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
            version: v1.5.6
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
              - name: sealed_secrets_private_key
                description: output "sealed_secrets_private_key" {   value = module.sealed_secrets.private_key   sensitive = true }
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.sealed_secrets.cert }
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
              - name: sealed_secret_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: sealed-secrets
                type: string
                description: The namespace where the sealed secret will be deployed
                default: sealed-secrets
                optional: true
              - name: sealed_secret_public_key
                scope: global
                type: string
                description: The public key that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key
                scope: global
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_public_key_file
                scope: global
                type: string
                description: The file containing the public key that will be used to encrypt the sealed secrets. If not provided a new public key will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key_file
                scope: global
                type: string
                description: The file containin the private key that will be used to encrypt the sealed secrets. If not provided a new private key will be generated
                default: ""
                optional: true
            version: v1.5.5
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
              - name: sealed_secrets_public_key
                description: output "sealed_secrets_public_key" {   value = module.sealed_secrets.public_key }
              - name: sealed_secrets_private_key
                description: output "sealed_secrets_private_key" {   value = module.sealed_secrets.private_key   sensitive = true }
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.sealed_secrets.cert }
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
              - name: sealed_secret_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: sealed-secrets
                type: string
                description: The namespace where the sealed secret will be deployed
                default: sealed-secrets
                optional: true
              - name: sealed_secret_public_key
                scope: global
                type: string
                description: The public key that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key
                scope: global
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_public_key_file
                scope: global
                type: string
                description: The file containing the public key that will be used to encrypt the sealed secrets. If not provided a new public key will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key_file
                scope: global
                type: string
                description: The file containin the private key that will be used to encrypt the sealed secrets. If not provided a new private key will be generated
                default: ""
                optional: true
            version: v1.5.4
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
              - name: sealed_secrets_public_key
                description: output "sealed_secrets_public_key" {   value = module.sealed_secrets.public_key }
              - name: sealed_secrets_private_key
                description: output "sealed_secrets_private_key" {   value = module.sealed_secrets.private_key   sensitive = true }
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.sealed_secrets.cert }
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
              - name: sealed_secret_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: sealed-secrets
                type: string
                description: The namespace where the sealed secret will be deployed
                default: sealed-secrets
                optional: true
              - name: sealed_secret_public_key
                scope: global
                type: string
                description: The public key that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key
                scope: global
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_public_key_file
                scope: global
                type: string
                description: The file containing the public key that will be used to encrypt the sealed secrets. If not provided a new public key will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key_file
                scope: global
                type: string
                description: The file containin the private key that will be used to encrypt the sealed secrets. If not provided a new private key will be generated
                default: ""
                optional: true
            version: v1.5.3
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
              - name: sealed_secrets_public_key
                description: output "sealed_secrets_public_key" {   value = module.sealed_secrets.public_key }
              - name: sealed_secrets_private_key
                description: output "sealed_secrets_private_key" {   value = module.sealed_secrets.private_key   sensitive = true }
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.sealed_secrets.cert }
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
              - name: sealed_secret_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: sealed-secrets
                type: string
                description: The namespace where the sealed secret will be deployed
                default: sealed-secrets
                optional: true
              - name: sealed_secret_public_key
                scope: global
                type: string
                description: The public key that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key
                scope: global
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_public_key_file
                scope: global
                type: string
                description: The file containing the public key that will be used to encrypt the sealed secrets. If not provided a new public key will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key_file
                scope: global
                type: string
                description: The file containin the private key that will be used to encrypt the sealed secrets. If not provided a new private key will be generated
                default: ""
                optional: true
            version: v1.5.2
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
              - name: sealed_secrets_public_key
                description: output "sealed_secrets_public_key" {   value = module.sealed_secrets.public_key }
              - name: sealed_secrets_private_key
                description: output "sealed_secrets_private_key" {   value = module.sealed_secrets.private_key   sensitive = true }
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.sealed_secrets.cert }
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
              - name: sealed_secret_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: sealed-secrets
                type: string
                description: The namespace where the sealed secret will be deployed
                default: sealed-secrets
                optional: true
              - name: sealed_secret_public_key
                scope: global
                type: string
                description: The public key that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key
                scope: global
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_public_key_file
                scope: global
                type: string
                description: The file containing the public key that will be used to encrypt the sealed secrets. If not provided a new public key will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key_file
                scope: global
                type: string
                description: The file containin the private key that will be used to encrypt the sealed secrets. If not provided a new private key will be generated
                default: ""
                optional: true
            version: v1.5.1
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
              - name: sealed_secrets_public_key
                description: output "sealed_secrets_public_key" {   value = module.sealed_secrets.public_key }
              - name: sealed_secrets_private_key
                description: output "sealed_secrets_private_key" {   value = module.sealed_secrets.private_key   sensitive = true }
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.sealed_secrets.cert }
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
              - name: sealed_secret_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: sealed-secrets
                type: string
                description: The namespace where the sealed secret will be deployed
                default: sealed-secrets
                optional: true
              - name: sealed_secret_public_key
                scope: global
                type: string
                description: The public key that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key
                scope: global
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_public_key_file
                scope: global
                type: string
                description: The file containing the public key that will be used to encrypt the sealed secrets. If not provided a new public key will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key_file
                scope: global
                type: string
                description: The file containin the private key that will be used to encrypt the sealed secrets. If not provided a new private key will be generated
                default: ""
                optional: true
            version: v1.5.0
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
              - name: sealed_secrets_public_key
                description: output "sealed_secrets_public_key" {   value = module.sealed_secrets.public_key }
              - name: sealed_secrets_private_key
                description: output "sealed_secrets_private_key" {   value = module.sealed_secrets.private_key   sensitive = true }
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.sealed_secrets.cert }
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
              - name: sealed_secret_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: sealed-secrets
                type: string
                description: The namespace where the sealed secret will be deployed
                default: sealed-secrets
                optional: true
              - name: sealed_secret_public_key
                scope: global
                type: string
                description: The public key that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key
                scope: global
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_public_key_file
                scope: global
                type: string
                description: The file containing the public key that will be used to encrypt the sealed secrets. If not provided a new public key will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key_file
                scope: global
                type: string
                description: The file containin the private key that will be used to encrypt the sealed secrets. If not provided a new private key will be generated
                default: ""
                optional: true
            version: v1.4.3
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
              - name: sealed_secrets_public_key
                description: output "sealed_secrets_public_key" {   value = module.sealed_secrets.private_key   sensitive = true }
              - name: sealed_secrets_private_key
                description: output "sealed_secrets_private_key" {   value = module.sealed_secrets.private_key   sensitive = true }
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
              - name: sealed_secret_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: sealed-secrets
                type: string
                description: The namespace where the sealed secret will be deployed
                default: sealed-secrets
                optional: true
              - name: sealed_secret_public_key
                scope: global
                type: string
                description: The public key that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key
                scope: global
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_public_key_file
                scope: global
                type: string
                description: The file containing the public key that will be used to encrypt the sealed secrets. If not provided a new public key will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key_file
                scope: global
                type: string
                description: The file containin the private key that will be used to encrypt the sealed secrets. If not provided a new private key will be generated
                default: ""
                optional: true
            version: v1.4.2
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
              - name: sealed_secrets_public_key
                description: output "sealed_secrets_public_key" {   value = module.sealed_secrets.private_key   sensitive = true }
              - name: sealed_secrets_private_key
                description: output "sealed_secrets_private_key" {   value = module.sealed_secrets.private_key   sensitive = true }
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
              - name: sealed_secret_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: sealed-secrets
                type: string
                description: The namespace where the sealed secret will be deployed
                default: sealed-secrets
                optional: true
              - name: sealed_secret_public_key
                scope: global
                type: string
                description: The public key that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key
                scope: global
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_public_key_file
                scope: global
                type: string
                description: The file containing the public key that will be used to encrypt the sealed secrets. If not provided a new public key will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key_file
                scope: global
                type: string
                description: The file containin the private key that will be used to encrypt the sealed secrets. If not provided a new private key will be generated
                default: ""
                optional: true
            version: v1.4.1
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
              - name: sealed_secrets_public_key
                description: output "sealed_secrets_public_key" {   value = module.sealed_secrets.private_key   sensitive = true }
              - name: sealed_secrets_private_key
                description: output "sealed_secrets_private_key" {   value = module.sealed_secrets.private_key   sensitive = true }
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
              - name: sealed_secret_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: sealed-secrets
                type: string
                description: The namespace where the sealed secret will be deployed
                default: sealed-secrets
                optional: true
              - name: sealed_secret_public_key
                scope: global
                type: string
                description: The public key that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key
                scope: global
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_public_key_file
                scope: global
                type: string
                description: The file containing the public key that will be used to encrypt the sealed secrets. If not provided a new public key will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key_file
                scope: global
                type: string
                description: The file containin the private key that will be used to encrypt the sealed secrets. If not provided a new private key will be generated
                default: ""
                optional: true
            version: v1.4.0
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
            version: v1.3.0
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
            version: v1.2.2
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
            version: v1.2.1
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
            version: v1.2.0
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
            version: v1.1.0
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_host
                description: The ingress host for the Argo CD instance
              - name: argocd_url
                description: The ingress url for the Argo CD instance
              - name: argocd_username
                description: The username of the default ArgoCD admin user
              - name: argocd_password
                description: The password of the default ArgoCD admin user
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
            version: v1.0.1
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: app_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: gitops
                type: string
                description: Namespace where operators will be installed
            version: v1.0.0
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: tools
      - id: github.com/cloud-native-toolkit/terraform-tools-pactbroker
        name: pactbroker
        type: terraform
        description: Module to install Pactbroker into a cluster
        tags:
          - tools
          - devops
          - contract testing
          - pact
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The secret containing the tls certificates
                default: ""
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
            version: v1.4.3
            outputs:
              - name: ingress_host
                description: The ingress host for the Pact Broker instance
              - name: ingress_url
                description: The ingress url for the Pact Broker instance
              - name: secret_name
                description: The name of the secret created to store the credentials
              - name: config_name
                description: The name of the ConfigMap created to store the url
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The secret containing the tls certificates
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
            version: v1.4.2
            outputs:
              - name: ingress_host
                description: The ingress host for the Pact Broker instance
              - name: ingress_url
                description: The ingress url for the Pact Broker instance
              - name: secret_name
                description: The name of the secret created to store the credentials
              - name: config_name
                description: The name of the ConfigMap created to store the url
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The secret containing the tls certificates
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
            version: v1.4.1
            outputs:
              - name: ingress_host
                description: The ingress host for the Pact Broker instance
              - name: ingress_url
                description: The ingress url for the Pact Broker instance
              - name: secret_name
                description: The name of the secret created to store the credentials
              - name: config_name
                description: The name of the ConfigMap created to store the url
        provider: tools
      - id: github.com/cloud-native-toolkit/terraform-tools-sonarqube
        name: sonarqube
        type: terraform
        description: Module to install Sonarqube into a cluster
        tags:
          - tools
          - devops
          - quality gate
          - lint
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The secret containing the tls certificates
                default: ""
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where the Helm Releases will be deployed.
              - name: mode
                scope: global
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: postgresql
                scope: ignore
                type: object({
                description: Properties for an existing postgresql database
                default: '{ username = password = hostname = port = database_name = external = false'
                optional: true
              - name: plugins
                scope: ignore
                type: list(string)
                description: The list of plugins that will be installed on SonarQube
                default: '[ https://binaries.sonarsource.com/Distribution/sonar-typescript-plugin/sonar-typescript-plugin-2.1.0.4359.jar, https://binaries.sonarsource.com/Distribution/sonar-java-plugin/sonar-java-plugin-6.5.1.22586.jar, https://binaries.sonarsource.com/Distribution/sonar-javascript-plugin/sonar-javascript-plugin-6.2.1.12157.jar, https://binaries.sonarsource.com/Distribution/sonar-python-plugin/sonar-python-plugin-2.9.0.6410.jar, https://binaries.sonarsource.com/Distribution/sonar-go-plugin/sonar-go-plugin-1.7.0.883.jar, https://github.com/checkstyle/sonar-checkstyle/releases/download/4.33/checkstyle-sonar-plugin-4.33.jar ]'
                optional: true
              - name: hostname
                type: string
                description: The hostname that will be used for the ingress/route
                default: sonarqube
                optional: true
              - name: helm_version
                type: string
                description: The version of the helm chart that should be used
                default: 6.4.1
                optional: true
              - name: service_account_name
                type: string
                description: The name of the service account that should be used for the deployment
                default: sonarqube-sonarqube
                optional: true
              - name: volume_capacity
                type: string
                description: The volume capacity of the persistence volume claim
                default: 2Gi
                optional: true
              - name: storage_class
                type: string
                description: The storage class of the persistence volume claim
                default: ibmc-file-gold
                optional: true
            version: v1.9.4
            outputs:
              - name: ingress_host
                description: The ingress host for the SonarQube instance
              - name: ingress_url
                description: The ingress url for the SonarQube instance
              - name: config_name
                description: The name of the configmap created to store the url
              - name: secret_name
                description: The name of the secret created to store the credentials
              - name: service_account
                description: The service account name that was used
              - name: namespace
                description: The namespace where sonarqube has been installed
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The secret containing the tls certificates
                default: ""
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where the Helm Releases will be deployed.
              - name: hostname
                type: string
                description: The hostname that will be used for the ingress/route
                default: sonarqube
                optional: true
              - name: helm_version
                type: string
                description: The version of the helm chart that should be used
                default: 6.4.1
                optional: true
              - name: service_account_name
                type: string
                description: The name of the service account that should be used for the deployment
                default: sonarqube-sonarqube
                optional: true
              - name: plugins
                type: list(string)
                description: The list of plugins that will be installed on SonarQube
                default: '[ https://binaries.sonarsource.com/Distribution/sonar-typescript-plugin/sonar-typescript-plugin-2.1.0.4359.jar, https://binaries.sonarsource.com/Distribution/sonar-java-plugin/sonar-java-plugin-6.5.1.22586.jar, https://binaries.sonarsource.com/Distribution/sonar-javascript-plugin/sonar-javascript-plugin-6.2.1.12157.jar, https://binaries.sonarsource.com/Distribution/sonar-python-plugin/sonar-python-plugin-2.9.0.6410.jar, https://binaries.sonarsource.com/Distribution/sonar-go-plugin/sonar-go-plugin-1.7.0.883.jar, https://github.com/checkstyle/sonar-checkstyle/releases/download/4.33/checkstyle-sonar-plugin-4.33.jar ]'
                optional: true
              - name: volume_capacity
                type: string
                description: The volume capacity of the persistence volume claim
                default: 2Gi
                optional: true
              - name: storage_class
                type: string
                description: The storage class of the persistence volume claim
                default: ibmc-file-gold
                optional: true
              - name: postgresql
                type: object({
                description: Properties for an existing postgresql database
                default: '{ username = password = hostname = port = database_name = external = false'
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
            version: v1.9.3
            outputs:
              - name: ingress_host
                description: The ingress host for the SonarQube instance
              - name: ingress_url
                description: The ingress url for the SonarQube instance
              - name: config_name
                description: The name of the configmap created to store the url
              - name: secret_name
                description: The name of the secret created to store the credentials
              - name: service_account
                description: The service account name that was used
              - name: namespace
                description: The namespace where sonarqube has been installed
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: variable "cluster_type" {   description = "The cluster type (openshift or ocp3 or ocp4 or kubernetes)" }
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The secret containing the tls certificates
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where the Helm Releases will be deployed.
              - name: hostname
                type: string
                description: The hostname that will be used for the ingress/route
                optional: true
              - name: helm_version
                type: string
                description: The version of the helm chart that should be used
                optional: true
              - name: service_account_name
                type: string
                description: The name of the service account that should be used for the deployment
                optional: true
              - name: plugins
                type: list(string)
                description: The list of plugins that will be installed on SonarQube
                optional: true
              - name: volume_capacity
                type: string
                description: The volume capacity of the persistence volume claim
                optional: true
              - name: storage_class
                type: string
                description: The storage class of the persistence volume claim
                optional: true
              - name: postgresql
                type: object({
                description: Properties for an existing postgresql database
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                optional: true
            version: v1.9.2
            outputs:
              - name: ingress_host
                description: The ingress host for the SonarQube instance
              - name: ingress_url
                description: The ingress url for the SonarQube instance
              - name: config_name
                description: The name of the configmap created to store the url
              - name: secret_name
                description: The name of the secret created to store the credentials
              - name: service_account
                description: The service account name that was used
              - name: namespace
                description: The namespace where sonarqube has been installed
        provider: tools
      - id: github.com/cloud-native-toolkit/terraform-tools-swaggereditor
        name: swaggereditor
        type: terraform
        description: Module to install Swagger editor into a cluster
        tags:
          - tools
          - devops
          - swagger editor
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where the Helm Releases will be deployed.
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v3.8.0
                optional: true
              - name: enable_sso
                type: bool
                description: Flag indicating if oauth should be applied (only available for OpenShift)
                default: true
                optional: true
              - name: chart_version
                type: string
                description: The version of the helm chart that will be installed
                default: 2.0.0
                optional: true
            version: v1.4.2
            outputs:
              - name: ingress_host
                description: The ingress host for the Swagger Editor Console instance
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: variable "cluster_type" {   description = "The cluster type (openshift or kubernetes)" }
                description: The cluster type (openshift or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: variable "tls_secret_name" {   description = "The name of the secret containing the tls certificate values"   default     = "" }
                description: The name of the secret containing the tls certificate values
                optional: true
              - name: releases_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where the Helm Releases will be deployed.
              - name: image_tag
                type: variable "image_tag" {   description = "The image version tag to use"   default     = "v3.8.0" }
                description: The image version tag to use
                optional: true
              - name: enable_sso
                type: bool
                description: Flag indicating if oauth should be applied (only available for OpenShift)
                optional: true
              - name: chart_version
                type: string
                description: The version of the helm chart that will be installed
                optional: true
            version: v1.4.1
            outputs:
              - name: ingress_host
                description: The ingress host for the Swagger Editor Console instance
        provider: tools
      - id: github.com/cloud-native-toolkit/terraform-tools-tekton
        name: tekton
        type: terraform
        description: Module to install Tekton into a cluster
        tags:
          - tools
          - devops
          - tekton
          - continuous integration
        versions:
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where tools are installed
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
                default: ""
                optional: true
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
                default: ""
                optional: true
              - name: tekton_dashboard_version
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: v0.7.1
                optional: true
              - name: tekton_dashboard_namespace
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: openshift-pipelines
                optional: true
              - name: tekton_dashboard_yaml_file_ocp
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for openshift
                default: openshift-tekton-dashboard-release.yaml
                optional: true
              - name: tekton_dashboard_yaml_file_k8s
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for kubernetes
                default: tekton-dashboard-release.yaml
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                scope: global
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that Tekton should be provisioned
                default: true
                optional: true
            version: v2.3.4
            outputs:
              - name: namespace
                description: The namespace where Tekton dashboard was deployed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where tools are installed
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
                default: ""
                optional: true
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
                default: ""
                optional: true
              - name: tekton_dashboard_version
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: v0.7.1
                optional: true
              - name: tekton_dashboard_namespace
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: openshift-pipelines
                optional: true
              - name: tekton_dashboard_yaml_file_ocp
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for openshift
                default: openshift-tekton-dashboard-release.yaml
                optional: true
              - name: tekton_dashboard_yaml_file_k8s
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for kubernetes
                default: tekton-dashboard-release.yaml
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                scope: global
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that Tekton should be provisioned
                default: true
                optional: true
            version: v2.3.3
            outputs:
              - name: namespace
                description: The namespace where Tekton dashboard was deployed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where tools are installed
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
                default: ""
                optional: true
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
                default: ""
                optional: true
              - name: tekton_dashboard_version
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: v0.7.1
                optional: true
              - name: tekton_dashboard_namespace
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: openshift-pipelines
                optional: true
              - name: tekton_dashboard_yaml_file_ocp
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for openshift
                default: openshift-tekton-dashboard-release.yaml
                optional: true
              - name: tekton_dashboard_yaml_file_k8s
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for kubernetes
                default: tekton-dashboard-release.yaml
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                scope: global
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that Tekton should be provisioned
                default: true
                optional: true
            version: v2.3.2
            outputs:
              - name: namespace
                description: The namespace where Tekton dashboard was deployed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where tools are installed
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
                default: ""
                optional: true
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
                default: ""
                optional: true
              - name: tekton_dashboard_version
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: v0.7.1
                optional: true
              - name: tekton_dashboard_namespace
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: openshift-pipelines
                optional: true
              - name: tekton_dashboard_yaml_file_ocp
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for openshift
                default: openshift-tekton-dashboard-release.yaml
                optional: true
              - name: tekton_dashboard_yaml_file_k8s
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for kubernetes
                default: tekton-dashboard-release.yaml
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                scope: global
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that Tekton should be provisioned
                default: true
                optional: true
            version: v2.3.1
            outputs:
              - name: namespace
                description: The namespace where Tekton dashboard was deployed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where tools are installed
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
                default: ""
                optional: true
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
                default: ""
                optional: true
              - name: tekton_dashboard_version
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: v0.7.1
                optional: true
              - name: tekton_dashboard_namespace
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: openshift-pipelines
                optional: true
              - name: tekton_dashboard_yaml_file_ocp
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for openshift
                default: openshift-tekton-dashboard-release.yaml
                optional: true
              - name: tekton_dashboard_yaml_file_k8s
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for kubernetes
                default: tekton-dashboard-release.yaml
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                scope: global
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that Tekton should be provisioned
                default: true
                optional: true
            version: v2.3.0
            outputs:
              - name: namespace
                description: The namespace where Tekton dashboard was deployed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where tools are installed
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
                default: ""
                optional: true
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
                default: ""
                optional: true
              - name: tekton_dashboard_version
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: v0.7.1
                optional: true
              - name: tekton_dashboard_namespace
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: openshift-pipelines
                optional: true
              - name: tekton_dashboard_yaml_file_ocp
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for openshift
                default: openshift-tekton-dashboard-release.yaml
                optional: true
              - name: tekton_dashboard_yaml_file_k8s
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for kubernetes
                default: tekton-dashboard-release.yaml
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                scope: global
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that Tekton should be provisioned
                default: true
                optional: true
            version: v2.2.1
            outputs:
              - name: namespace
                description: The namespace where Tekton dashboard was deployed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where tools are installed
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
                default: ""
                optional: true
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
                default: ""
                optional: true
              - name: tekton_dashboard_version
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: v0.7.1
                optional: true
              - name: tekton_dashboard_namespace
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: openshift-pipelines
                optional: true
              - name: tekton_dashboard_yaml_file_ocp
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for openshift
                default: openshift-tekton-dashboard-release.yaml
                optional: true
              - name: tekton_dashboard_yaml_file_k8s
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for kubernetes
                default: tekton-dashboard-release.yaml
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                scope: global
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that Tekton should be provisioned
                default: true
                optional: true
            version: v2.2.0
            outputs:
              - name: namespace
                description: The namespace where Tekton dashboard was deployed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where tools are installed
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
                default: ""
                optional: true
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
                default: ""
                optional: true
              - name: tekton_dashboard_version
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: v0.7.1
                optional: true
              - name: tekton_dashboard_namespace
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: openshift-pipelines
                optional: true
              - name: tekton_dashboard_yaml_file_ocp
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for openshift
                default: openshift-tekton-dashboard-release.yaml
                optional: true
              - name: tekton_dashboard_yaml_file_k8s
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for kubernetes
                default: tekton-dashboard-release.yaml
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                scope: global
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
            version: v2.1.3
            outputs:
              - name: namespace
                description: The namespace where Tekton dashboard was deployed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where tools are installed
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
                default: ""
                optional: true
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
                default: ""
                optional: true
              - name: tekton_dashboard_version
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: v0.7.1
                optional: true
              - name: tekton_dashboard_namespace
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: openshift-pipelines
                optional: true
              - name: tekton_dashboard_yaml_file_ocp
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for openshift
                default: openshift-tekton-dashboard-release.yaml
                optional: true
              - name: tekton_dashboard_yaml_file_k8s
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for kubernetes
                default: tekton-dashboard-release.yaml
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
                default: ""
                optional: true
              - name: mode
                scope: global
                type: string
                description: The mode of operation for the module (setup)
                default: ""
                optional: true
            version: v2.1.2
            outputs:
              - name: namespace
                description: The namespace where Tekton dashboard was deployed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where tools are installed
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: tekton_dashboard_version
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: v0.7.1
                optional: true
              - name: tekton_dashboard_namespace
                scope: ignore
                type: string
                description: The tekton dashboard version to install
                default: openshift-pipelines
                optional: true
              - name: tekton_dashboard_yaml_file_ocp
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for openshift
                default: openshift-tekton-dashboard-release.yaml
                optional: true
              - name: tekton_dashboard_yaml_file_k8s
                scope: ignore
                type: string
                description: The tekton dashboard yaml file for the release for kubernetes
                default: tekton-dashboard-release.yaml
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: Directory where the gitops repo content should be written
              - name: mode
                scope: global
                type: string
                description: The mode of operation for the module (setup)
            version: v2.1.1
            outputs:
              - name: namespace
                description: The namespace where Tekton dashboard was deployed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where tools are installed
              - name: tekton_dashboard_version
                type: string
                description: The tekton dashboard version to install
                optional: true
              - name: tekton_dashboard_namespace
                type: string
                description: The tekton dashboard version to install
                optional: true
              - name: tekton_dashboard_yaml_file_ocp
                type: string
                description: The tekton dashboard yaml file for the release for openshift
                optional: true
              - name: tekton_dashboard_yaml_file_k8s
                type: string
                description: The tekton dashboard yaml file for the release for kubernetes
                optional: true
              - name: olm_namespace
                type: string
                description: Namespace where olm is installed
                optional: true
              - name: operator_namespace
                type: string
                description: Namespace where operators will be installed
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                optional: true
            version: v2.1.0
            outputs:
              - name: namespace
                description: The namespace where Tekton dashboard was deployed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: ingress_hostname
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where tools are installed
              - name: tekton_dashboard_version
                type: string
                description: The tekton dashboard version to install
                optional: true
              - name: tekton_dashboard_namespace
                type: string
                description: The tekton dashboard version to install
                optional: true
              - name: tekton_dashboard_yaml_file_ocp
                type: string
                description: The tekton dashboard yaml file for the release for openshift
                optional: true
              - name: tekton_dashboard_yaml_file_k8s
                type: string
                description: The tekton dashboard yaml file for the release for kubernetes
                optional: true
              - name: olm_namespace
                type: string
                description: Namespace where olm is installed
                optional: true
              - name: operator_namespace
                type: string
                description: Namespace where operators will be installed
                optional: true
              - name: gitops_dir
                type: string
                description: Directory where the gitops repo content should be written
                optional: true
              - name: mode
                type: string
                description: The mode of operation for the module (setup)
                optional: true
            version: v2.0.2
            outputs:
              - name: namespace
                description: The namespace where Tekton dashboard was deployed
        provider: tools
      - id: github.com/cloud-native-toolkit/terraform-tools-tekton-resources
        name: tekton-resources
        type: terraform
        description: Module to install Tekton resources into a cluster
        tags:
          - tools
          - devops
          - continuous integration
          - tekton
        versions:
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
                scope: ignore
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                default: tools
                optional: true
              - name: pre_tekton
                scope: ignore
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                default: "false"
                optional: true
              - name: revision
                scope: ignore
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                default: v2.7.7
                optional: true
              - name: git_url
                scope: ignore
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                default: ' https://api.github.com/repos/ibm/ibm-garage-tekton-tasks'
                optional: true
            version: v2.2.24
            outputs: []
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
                scope: ignore
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                default: tools
                optional: true
              - name: pre_tekton
                scope: ignore
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                default: "false"
                optional: true
              - name: revision
                scope: ignore
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                default: v2.7.6
                optional: true
              - name: git_url
                scope: ignore
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                default: ' https://api.github.com/repos/ibm/ibm-garage-tekton-tasks'
                optional: true
            version: v2.2.23
            outputs: []
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
                scope: ignore
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                default: tools
                optional: true
              - name: pre_tekton
                scope: ignore
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                default: "false"
                optional: true
              - name: revision
                scope: ignore
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                default: v2.7.3
                optional: true
              - name: git_url
                scope: ignore
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                default: ' https://api.github.com/repos/ibm/ibm-garage-tekton-tasks'
                optional: true
            version: v2.2.22
            outputs: []
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
                scope: ignore
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                default: tools
                optional: true
              - name: pre_tekton
                scope: ignore
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                default: "false"
                optional: true
              - name: revision
                scope: ignore
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                default: v2.7.2
                optional: true
              - name: git_url
                scope: ignore
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                default: ' https://api.github.com/repos/ibm/ibm-garage-tekton-tasks'
                optional: true
            version: v2.2.21
            outputs: []
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
                scope: ignore
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                default: tools
                optional: true
              - name: pre_tekton
                scope: ignore
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                default: "false"
                optional: true
              - name: revision
                scope: ignore
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                default: v2.6.13
                optional: true
              - name: git_url
                scope: ignore
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                default: ' https://api.github.com/repos/ibm/ibm-garage-tekton-tasks'
                optional: true
            version: v2.2.20
            outputs: []
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
                scope: ignore
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                default: tools
                optional: true
              - name: pre_tekton
                scope: ignore
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                default: "false"
                optional: true
              - name: revision
                scope: ignore
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                default: v2.6.10
                optional: true
              - name: git_url
                scope: ignore
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                default: ' https://api.github.com/repos/ibm/ibm-garage-tekton-tasks'
                optional: true
            version: v2.2.19
            outputs: []
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
                scope: ignore
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                default: tools
                optional: true
              - name: pre_tekton
                scope: ignore
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                default: "false"
                optional: true
              - name: revision
                scope: ignore
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                default: v2.6.10
                optional: true
              - name: git_url
                scope: ignore
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                default: ' https://api.github.com/repos/ibm/ibm-garage-tekton-tasks'
                optional: true
            version: v2.2.18
            outputs: []
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
                scope: ignore
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                default: tools
                optional: true
              - name: pre_tekton
                scope: ignore
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                default: "false"
                optional: true
              - name: revision
                scope: ignore
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                default: v2.6.10
                optional: true
              - name: git_url
                scope: ignore
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                default: ' https://api.github.com/repos/ibm/ibm-garage-tekton-tasks'
                optional: true
            version: v2.2.17
            outputs: []
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
                scope: ignore
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                default: tools
                optional: true
              - name: pre_tekton
                scope: ignore
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                default: "false"
                optional: true
              - name: revision
                scope: ignore
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                default: v2.6.2
                optional: true
              - name: git_url
                scope: ignore
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                default: ' https://api.github.com/repos/ibm/ibm-garage-tekton-tasks'
                optional: true
            version: v2.2.16
            outputs: []
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
                scope: ignore
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                default: tools
                optional: true
              - name: pre_tekton
                scope: ignore
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                default: "false"
                optional: true
              - name: revision
                scope: ignore
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                default: v2.6.2
                optional: true
              - name: git_url
                scope: ignore
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                default: ' https://api.github.com/repos/ibm/ibm-garage-tekton-tasks'
                optional: true
            version: v2.2.15
            outputs: []
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
                scope: ignore
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                default: tools
                optional: true
              - name: pre_tekton
                scope: ignore
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                default: "false"
                optional: true
              - name: revision
                scope: ignore
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                default: v2.5.0
                optional: true
              - name: git_url
                scope: ignore
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                default: ' https://api.github.com/repos/ibm/ibm-garage-tekton-tasks'
                optional: true
            version: v2.2.14
            outputs: []
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
                scope: ignore
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                default: tools
                optional: true
              - name: pre_tekton
                scope: ignore
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                default: "false"
                optional: true
              - name: revision
                scope: ignore
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                default: v2.5.0
                optional: true
              - name: git_url
                scope: ignore
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                default: ' https://api.github.com/repos/ibm/ibm-garage-tekton-tasks'
                optional: true
            version: v2.2.13
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
                scope: ignore
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                default: tools
                optional: true
              - name: pre_tekton
                scope: ignore
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                default: "false"
                optional: true
              - name: revision
                scope: ignore
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                default: v2.5.0
                optional: true
              - name: git_url
                scope: ignore
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                default: ' https://api.github.com/repos/ibm/ibm-garage-tekton-tasks'
                optional: true
            version: v2.2.12
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
                scope: ignore
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                default: tools
                optional: true
              - name: pre_tekton
                scope: ignore
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                default: "false"
                optional: true
              - name: revision
                scope: ignore
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                default: v2.3.0
                optional: true
              - name: git_url
                scope: ignore
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                default: ' https://api.github.com/repos/ibm/ibm-garage-tekton-tasks'
                optional: true
            version: v2.2.11
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                optional: true
              - name: pre_tekton
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                optional: true
              - name: revision
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                optional: true
              - name: git_url
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                optional: true
            version: v2.2.10
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                optional: true
              - name: pre_tekton
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                optional: true
              - name: revision
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                optional: true
              - name: git_url
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                optional: true
            version: v2.2.9
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                optional: true
              - name: pre_tekton
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                optional: true
              - name: revision
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                optional: true
              - name: git_url
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                optional: true
            version: v2.2.8
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                optional: true
              - name: pre_tekton
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                optional: true
              - name: revision
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                optional: true
              - name: git_url
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                optional: true
            version: v2.2.7
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                optional: true
              - name: pre_tekton
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                optional: true
              - name: revision
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                optional: true
              - name: git_url
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                optional: true
            version: v2.2.6
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                optional: true
              - name: pre_tekton
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                optional: true
              - name: revision
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                optional: true
              - name: git_url
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                optional: true
            version: v2.2.5
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                optional: true
              - name: pre_tekton
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                optional: true
              - name: revision
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                optional: true
              - name: git_url
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                optional: true
            version: v2.2.4
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                optional: true
              - name: pre_tekton
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                optional: true
              - name: revision
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                optional: true
              - name: git_url
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                optional: true
            version: v2.2.3
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                optional: true
              - name: pre_tekton
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                optional: true
              - name: revision
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                optional: true
              - name: git_url
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                optional: true
            version: v2.2.2
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                optional: true
              - name: pre_tekton
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                optional: true
              - name: revision
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                optional: true
              - name: git_url
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                optional: true
            version: v2.2.1
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                optional: true
              - name: pre_tekton
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                optional: true
              - name: revision
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                optional: true
              - name: git_url
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                optional: true
            version: v2.2.0
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: tekton
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-tekton
                    version: '>= 2.0.1'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tekton_namespace
                moduleRef:
                  id: tekton
                  output: namespace
                type: string
                description: The namespace where the tekton service was deployed
              - name: resource_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tekton tasks will be deployed
                optional: true
              - name: pre_tekton
                type: string
                description: Flag indicating that the Tekton installed version is pre 0.7.0
                optional: true
              - name: revision
                type: string
                description: The revision Cloud Native Toolkit Tekton tasks and pipelines
                optional: true
              - name: git_url
                type: string
                description: The git api url containing Cloud-Native Toolkit Tekton tasks and pipelines
                optional: true
            version: v2.1.12
        provider: tools
      - id: github.com/cloud-native-toolkit/terraform-tools-turbonomic
        name: turbonomic
        type: terraform
        description: Module to install Turbonomic
        tags:
          - tools
          - devops
          - quality gate
          - lint
        versions:
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
                default: ocp4
                optional: true
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The secret containing the tls certificates
                default: ""
                optional: true
              - name: turbo_service_account_name
                type: string
                description: The name of the service account that should be used for the deployment
                default: t8c-operator
                optional: true
              - name: turbo_probes
                type: list(string)
                description: The probes to deploy with turbonomic
                default: '[kubeturbo,instana,openshiftingress]'
                optional: true
              - name: turbo_storage_class_provision
                type: bool
                description: Flag indicating that an ibm block custom storage class should be created and used
                default: true
                optional: true
              - name: turbo_storage_class_name
                type: string
                description: Name of the storage class to use
                default: ibmc-vpc-block-10iops-mzr
                optional: true
              - name: turbo_namespace
                type: string
                description: Name of the existing namespace where turbo will be deployed.
                default: turbonomic
                optional: true
            version: v1.2.0
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
                default: ocp4
                optional: true
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The secret containing the tls certificates
                default: ""
                optional: true
              - name: turbo_service_account_name
                type: string
                description: The name of the service account that should be used for the deployment
                default: t8c-operator
                optional: true
              - name: turbo_probes
                type: list(string)
                description: The probes to deploy with turbonomic
                default: '[kubeturbo,instana,openshiftingress]'
                optional: true
              - name: turbo_storage_class_provision
                type: bool
                description: Flag indicating that an ibm block custom storage class should be created and used
                default: true
                optional: true
              - name: turbo_storage_class_name
                type: string
                description: Name of the storage class to use
                default: ibmc-vpc-block-10iops-mzr
                optional: true
              - name: turbo_namespace
                type: string
                description: Name of the existing namespace where turbo will be deployed.
                default: turbonomic
                optional: true
            version: v1.1.1
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
                default: ocp4
                optional: true
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The secret containing the tls certificates
                default: ""
                optional: true
              - name: turbo_service_account_name
                type: string
                description: The name of the service account that should be used for the deployment
                default: t8c-operator
                optional: true
              - name: turbo_probes
                type: list(string)
                description: The probes to deploy with turbonomic
                default: '[kubeturbo,instana,openshiftingress]'
                optional: true
              - name: turbo_storage_class_provision
                type: bool
                description: Flag indicating that an ibm block custom storage class should be created and used
                default: true
                optional: true
              - name: turbo_storage_class_name
                type: string
                description: Name of the storage class to use
                default: ibmc-vpc-block-10iops-mzr
                optional: true
              - name: turbo_namespace
                type: string
                description: Name of the existing namespace where turbo will be deployed.
                default: turbonomic
                optional: true
            version: v1.1.0
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
                default: ocp4
                optional: true
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The secret containing the tls certificates
                default: ""
                optional: true
              - name: turbo_service_account_name
                type: string
                description: The name of the service account that should be used for the deployment
                default: t8c-operator
                optional: true
              - name: turbo_probes
                type: list(string)
                description: The probes to deploy with turbonomic
                default: '[kubeturbo,instana,openshiftingress]'
                optional: true
              - name: turbo_storage_class_provision
                type: bool
                description: Flag indicating that an ibm block custom storage class should be created and used
                default: true
                optional: true
              - name: turbo_storage_class_name
                type: string
                description: Name of the storage class to use
                default: ibmc-vpc-block-10iops-mzr
                optional: true
              - name: turbo_namespace
                type: string
                description: Name of the existing namespace where turbo will be deployed.
                default: turbonomic
                optional: true
            version: v1.0.2
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
                default: ocp4
                optional: true
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The secret containing the tls certificates
                default: ""
                optional: true
              - name: turbo_service_account_name
                type: string
                description: The name of the service account that should be used for the deployment
                default: t8c-operator
                optional: true
              - name: turbo_probes
                type: list(string)
                description: The probes to deploy with turbonomic
                default: '[kubeturbo,instana,openshiftingress]'
                optional: true
              - name: turbo_storage_class_provision
                type: bool
                description: Flag indicating that an ibm block custom storage class should be created and used
                default: true
                optional: true
              - name: turbo_storage_class_name
                type: string
                description: Name of the storage class to use
                default: ibmc-vpc-block-10iops-mzr
                optional: true
              - name: turbo_namespace
                type: string
                description: Name of the existing namespace where turbo will be deployed.
                default: turbonomic
                optional: true
            version: v1.0.1
        provider: tools
  - category: gitops
    categoryName: GitOps
    selection: multiple
    modules:
      - id: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap
        name: argocd-bootstrap
        alias: argocd-bootstrap
        type: terraform
        description: Module to provision ArgoCD and bootstrap an application using the GitOps repo
        tags:
          - tools
          - gitops
          - bootstrap
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops
                    version: '>= 1.2.0'
              - id: cert
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-util-sealed-secret-cert
                    version: '>= 0.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: gitops_repo_url
                moduleRef:
                  id: gitops
                  output: config_repo_url
                type: string
                description: The GitOps repo url
              - name: git_username
                moduleRef:
                  id: gitops
                  output: config_username
                type: string
                description: The username used to access the GitOps repo
              - name: git_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: |-
                  The token used to access the GitOps repo
                  //  sensitive   = true
              - name: bootstrap_path
                moduleRef:
                  id: gitops
                  output: bootstrap_path
                type: string
                description: The path to the bootstrap config for ArgoCD
              - name: sealed_secret_cert
                moduleRef:
                  id: cert
                  output: cert
                type: string
                description: The certificate that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key
                moduleRef:
                  id: cert
                  output: private_key
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
            version: v1.3.0
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.openshift_cicd.sealed_secrets_cert }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops
                    version: '>= 1.2.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: gitops_repo_url
                moduleRef:
                  id: gitops
                  output: config_repo_url
                type: string
                description: The GitOps repo url
              - name: git_username
                moduleRef:
                  id: gitops
                  output: config_username
                type: string
                description: The username used to access the GitOps repo
              - name: git_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: |-
                  The token used to access the GitOps repo
                  //  sensitive   = true
              - name: bootstrap_path
                moduleRef:
                  id: gitops
                  output: bootstrap_path
                type: string
                description: The path to the bootstrap config for ArgoCD
            version: v1.2.0
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.openshift_cicd.sealed_secrets_cert }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops
                    version: '>= 1.2.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: gitops_repo_url
                moduleRef:
                  id: gitops
                  output: config_repo_url
                type: string
                description: The GitOps repo url
              - name: git_username
                moduleRef:
                  id: gitops
                  output: config_username
                type: string
                description: The username used to access the GitOps repo
              - name: git_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: |-
                  The token used to access the GitOps repo
                  //  sensitive   = true
              - name: bootstrap_path
                moduleRef:
                  id: gitops
                  output: bootstrap_path
                type: string
                description: The path to the bootstrap config for ArgoCD
            version: v1.1.4
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.openshift_cicd.sealed_secrets_cert }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops
                    version: '>= 1.2.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: gitops_repo_url
                moduleRef:
                  id: gitops
                  output: config_repo_url
                type: string
                description: The GitOps repo url
              - name: git_username
                moduleRef:
                  id: gitops
                  output: config_username
                type: string
                description: The username used to access the GitOps repo
              - name: git_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: |-
                  The token used to access the GitOps repo
                  //  sensitive   = true
              - name: bootstrap_path
                moduleRef:
                  id: gitops
                  output: bootstrap_path
                type: string
                description: The path to the bootstrap config for ArgoCD
            version: v1.1.3
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.openshift_cicd.sealed_secrets_cert }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops
                    version: '>= 1.2.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: gitops_repo_url
                moduleRef:
                  id: gitops
                  output: config_repo_url
                type: string
                description: The GitOps repo url
              - name: git_username
                moduleRef:
                  id: gitops
                  output: config_username
                type: string
                description: The username used to access the GitOps repo
              - name: git_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: |-
                  The token used to access the GitOps repo
                  //  sensitive   = true
              - name: bootstrap_path
                moduleRef:
                  id: gitops
                  output: bootstrap_path
                type: string
                description: The path to the bootstrap config for ArgoCD
            version: v1.1.2
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.openshift_cicd.sealed_secrets_cert }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops
                    version: '>= 1.2.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: gitops_repo_url
                moduleRef:
                  id: gitops
                  output: config_repo_url
                type: string
                description: The GitOps repo url
              - name: git_username
                moduleRef:
                  id: gitops
                  output: config_username
                type: string
                description: The username used to access the GitOps repo
              - name: git_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: |-
                  The token used to access the GitOps repo
                  //  sensitive   = true
              - name: bootstrap_path
                moduleRef:
                  id: gitops
                  output: bootstrap_path
                type: string
                description: The path to the bootstrap config for ArgoCD
            version: v1.1.1
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.openshift_cicd.sealed_secrets_cert }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops
                    version: '>= 1.2.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: gitops_repo_url
                moduleRef:
                  id: gitops
                  output: config_repo_url
                type: string
                description: The GitOps repo url
              - name: git_username
                moduleRef:
                  id: gitops
                  output: config_username
                type: string
                description: The username used to access the GitOps repo
              - name: git_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: |-
                  The token used to access the GitOps repo
                  //  sensitive   = true
              - name: bootstrap_path
                moduleRef:
                  id: gitops
                  output: bootstrap_path
                type: string
                description: The path to the bootstrap config for ArgoCD
            version: v1.1.0
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = module.openshift_cicd.sealed_secrets_cert }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops
                    version: '>= 1.2.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: gitops_repo_url
                moduleRef:
                  id: gitops
                  output: config_repo_url
                type: string
                description: The GitOps repo url
              - name: git_username
                moduleRef:
                  id: gitops
                  output: config_username
                type: string
                description: The username used to access the GitOps repo
              - name: git_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: |-
                  The token used to access the GitOps repo
                  //  sensitive   = true
              - name: bootstrap_path
                moduleRef:
                  id: gitops
                  output: bootstrap_path
                type: string
                description: The path to the bootstrap config for ArgoCD
            version: v1.0.1
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops
                    version: '>= 1.2.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: gitops_repo_url
                moduleRef:
                  id: gitops
                  output: config_repo_url
                type: string
                description: The GitOps repo url
              - name: git_username
                moduleRef:
                  id: gitops
                  output: config_username
                type: string
                description: The username used to access the GitOps repo
              - name: git_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: |-
                  The token used to access the GitOps repo
                  //  sensitive   = true
              - name: bootstrap_path
                moduleRef:
                  id: gitops
                  output: bootstrap_path
                type: string
                description: The path to the bootstrap config for ArgoCD
            version: v1.0.0
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: tools
      - id: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap
        name: vsi-argocd-bootstrap
        alias: argocd-bootstrap
        type: terraform
        description: Module to provision ArgoCD and bootstrap an application using the GitOps repo
        tags:
          - tools
          - gitops
          - bootstrap
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group.git
                    version: '>= 1.0.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops
                    version: '>= 1.2.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets.git
                    version: '>= 1.0.0'
              - id: cert
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-util-sealed-secret-cert
                    version: '>= 0.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC has been provisioned.
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: server_url
                moduleRef:
                  id: cluster
                  output: platform.server_url
                type: string
                description: The url of the OCP cluster where ArgoCd will be deployed
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: gitops_repo_url
                moduleRef:
                  id: gitops
                  output: config_repo_url
                type: string
                description: The GitOps repo url
              - name: git_username
                moduleRef:
                  id: gitops
                  output: config_username
                type: string
                description: The username used to access the GitOps repo
              - name: git_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: |-
                  The token used to access the GitOps repo
                    //  sensitive   = true
              - name: bootstrap_path
                moduleRef:
                  id: gitops
                  output: bootstrap_path
                type: string
                description: The path to the bootstrap config for ArgoCD
              - name: bootstrap_branch
                moduleRef:
                  id: gitops
                  output: bootstrap_branch
                type: string
                default: main
                optional: true
              - name: vpc_name
                moduleRef:
                  id: subnets
                  output: vpc_name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: sealed_secret_cert
                moduleRef:
                  id: cert
                  output: cert
                type: string
                description: The certificate that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: sealed_secret_private_key
                moduleRef:
                  id: cert
                  output: private_key
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: label
                type: string
                description: The label for the server instance
                default: argocd
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: kms_key_crn
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.2.0
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
              - name: sealed_secrets_cert
                description: output "sealed_secrets_cert" {   value = var.sealed_secret_cert   depends_on = [module.vsi-instance] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group.git
                    version: '>= 1.0.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops
                    version: '>= 1.2.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets.git
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC has been provisioned.
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: server_url
                moduleRef:
                  id: cluster
                  output: platform.server_url
                type: string
                description: The url of the OCP cluster where ArgoCd will be deployed
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: gitops_repo_url
                moduleRef:
                  id: gitops
                  output: config_repo_url
                type: string
                description: The GitOps repo url
              - name: git_username
                moduleRef:
                  id: gitops
                  output: config_username
                type: string
                description: The username used to access the GitOps repo
              - name: git_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: |-
                  The token used to access the GitOps repo
                    //  sensitive   = true
              - name: bootstrap_path
                moduleRef:
                  id: gitops
                  output: bootstrap_path
                type: string
                description: The path to the bootstrap config for ArgoCD
              - name: bootstrap_branch
                moduleRef:
                  id: gitops
                  output: bootstrap_branch
                type: string
                default: main
                optional: true
              - name: vpc_name
                moduleRef:
                  id: subnets
                  output: vpc_name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: label
                type: string
                description: The label for the server instance
                default: argocd
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: kms_key_crn
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.1.1
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group.git
                    version: '>= 1.0.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
              - id: olm
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-olm
                    version: '>= 1.2.2'
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops
                    version: '>= 1.2.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets.git
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC has been provisioned.
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: ingress_subdomain
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: server_url
                moduleRef:
                  id: cluster
                  output: platform.server_url
                type: string
                description: The url of the OCP cluster where ArgoCd will be deployed
              - name: olm_namespace
                moduleRef:
                  id: olm
                  output: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                moduleRef:
                  id: olm
                  output: target_namespace
                type: string
                description: Namespace where operators will be installed
              - name: gitops_repo_url
                moduleRef:
                  id: gitops
                  output: config_repo_url
                type: string
                description: The GitOps repo url
              - name: git_username
                moduleRef:
                  id: gitops
                  output: config_username
                type: string
                description: The username used to access the GitOps repo
              - name: git_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: |-
                  The token used to access the GitOps repo
                    //  sensitive   = true
              - name: bootstrap_path
                moduleRef:
                  id: gitops
                  output: bootstrap_path
                type: string
                description: The path to the bootstrap config for ArgoCD
              - name: bootstrap_branch
                moduleRef:
                  id: gitops
                  output: bootstrap_branch
                type: string
                default: main
                optional: true
              - name: vpc_name
                moduleRef:
                  id: subnets
                  output: vpc_name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: label
                type: string
                description: The label for the server instance
                default: argocd
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: kms_key_crn
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.1.0
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables:
              - name: resource_group_name
                type: string
                description: The name of the IBM Cloud resource group where the VPC has been provisioned.
              - name: region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                type: string
                description: The IBM Cloud api token
              - name: vpc_name
                type: string
                description: The name of the vpc instance
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: vpc_subnet_count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: kms_key_crn
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: cluster_config_file
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: cluster_type
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: olm_namespace
                type: string
                description: Namespace where olm is installed
              - name: operator_namespace
                type: string
                description: Namespace where operators will be installed
              - name: ingress_subdomain
                type: string
                description: The subdomain for ingresses in the cluster
                default: ""
                optional: true
              - name: gitops_repo_url
                type: string
                description: The GitOps repo url
              - name: git_username
                type: string
                description: The username used to access the GitOps repo
              - name: git_token
                type: string
                description: |-
                  The token used to access the GitOps repo
                    //  sensitive   = true
              - name: bootstrap_path
                type: string
                description: The path to the bootstrap config for ArgoCD
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: server_url
                type: string
                description: The url of the OCP cluster where ArgoCd will be deployed
              - name: private_key
                type: string
              - name: public_key
                type: string
              - name: bootstrap_branch
                type: string
                default: main
                optional: true
            version: v1.0.0
            outputs:
              - name: argocd_namespace
                description: The namespace where the ArgoCD instance has been provisioned
              - name: argocd_service_account
                description: The namespace where the ArgoCD instance has been provisioned
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: vsi
      - id: github.com/cloud-native-toolkit/terraform-tools-gitops
        name: gitops-repo
        type: terraform
        description: Module to provision and set up a GitOps repository
        tags:
          - tools
          - devops
          - gitops
        versions:
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: The short name of the repository (i.e. the part after the org/group name)
              - name: branch
                type: string
                description: The name of the branch that will be used. If the repo already exists (provision=false) then it is assumed this branch already exists as well
                default: main
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the git repo should be provisioned. If `false` then the repo is expected to already exist
                default: true
                optional: true
              - name: initialize
                type: bool
                description: Flag indicating that the git repo should be initialized. If `false` then the repo is expected to already have been initialized
                default: false
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
                default: openshift-gitops
                optional: true
              - name: server_name
                type: string
                description: The name of the cluster that will be configured via gitops. This is used to separate the config by cluster
                default: default
                optional: true
              - name: sealed_secrets_cert
                type: string
                description: The certificate/public key used to encrypt the sealed secrets
                default: ""
                optional: true
            version: v1.11.1
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: bootstrap_branch
                description: The branch in the gitrepo containing the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
              - name: gitops_config
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                description: The credentials for the gitops repo(s)
              - name: server_name
                description: The name of the cluster that will be configured for gitops
              - name: sealed_secrets_cert
                description: The certificate used to encrypt sealed secrets
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: The short name of the repository (i.e. the part after the org/group name)
              - name: branch
                type: string
                description: The name of the branch that will be used. If the repo already exists (provision=false) then it is assumed this branch already exists as well
                default: main
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the git repo should be provisioned. If `false` then the repo is expected to already exist
                default: true
                optional: true
              - name: initialize
                type: bool
                description: Flag indicating that the git repo should be initialized. If `false` then the repo is expected to already have been initialized
                default: false
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
                default: openshift-gitops
                optional: true
              - name: server_name
                type: string
                description: The name of the cluster that will be configured via gitops. This is used to separate the config by cluster
                default: default
                optional: true
              - name: sealed_secrets_cert
                type: string
                description: The certificate/public key used to encrypt the sealed secrets
                default: ""
                optional: true
            version: v1.11.0
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: bootstrap_branch
                description: The branch in the gitrepo containing the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
              - name: gitops_config
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                description: The credentials for the gitops repo(s)
              - name: server_name
                description: The name of the cluster that will be configured for gitops
              - name: sealed_secrets_cert
                description: The certificate used to encrypt sealed secrets
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: The short name of the repository (i.e. the part after the org/group name)
              - name: branch
                type: string
                description: The name of the branch that will be used. If the repo already exists (provision=false) then it is assumed this branch already exists as well
                default: main
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the git repo should be provisioned. If `false` then the repo is expected to already exist
                default: true
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
                default: openshift-gitops
                optional: true
              - name: server_name
                type: string
                description: The name of the cluster that will be configured via gitops. This is used to separate the config by cluster
                default: default
                optional: true
              - name: sealed_secrets_cert
                type: string
                description: The certificate/public key used to encrypt the sealed secrets
                default: ""
                optional: true
            version: v1.10.0
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: bootstrap_branch
                description: The branch in the gitrepo containing the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
              - name: gitops_config
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                description: The credentials for the gitops repo(s)
              - name: server_name
                description: The name of the cluster that will be configured for gitops
              - name: sealed_secrets_cert
                description: The certificate used to encrypt sealed secrets
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: The short name of the repository (i.e. the part after the org/group name)
              - name: branch
                type: string
                description: The name of the branch that will be used. If the repo already exists (provision=false) then it is assumed this branch already exists as well
                default: main
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the git repo should be provisioned. If `false` then the repo is expected to already exist
                default: true
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
                default: openshift-gitops
                optional: true
              - name: banner_label
                type: string
                description: The label for the cluster
                default: cluster
                optional: true
              - name: banner_color
                type: string
                description: The color for the cluster
                default: purple
                optional: true
              - name: server_name
                type: string
                description: The name of the cluster that will be configured via gitops. This is used to separate the config by cluster
                default: default
                optional: true
              - name: sealed_secrets_cert
                type: string
                description: The certificate/public key used to encrypt the sealed secrets
                default: ""
                optional: true
            version: v1.9.0
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: bootstrap_branch
                description: The branch in the gitrepo containing the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
              - name: gitops_config
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                description: The credentials for the gitops repo(s)
              - name: server_name
                description: The name of the cluster that will be configured for gitops
              - name: sealed_secrets_cert
                description: The certificate used to encrypt sealed secrets
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: The short name of the repository (i.e. the part after the org/group name)
              - name: branch
                type: string
                description: The name of the branch that will be used. If the repo already exists (provision=false) then it is assumed this branch already exists as well
                default: main
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the git repo should be provisioned. If `false` then the repo is expected to already exist
                default: true
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
                default: openshift-gitops
                optional: true
              - name: banner_label
                type: string
                description: The label for the cluster
                default: cluster
                optional: true
              - name: banner_color
                type: string
                description: The color for the cluster
                default: purple
                optional: true
              - name: server_name
                type: string
                description: The name of the cluster that will be configured via gitops. This is used to separate the config by cluster
                default: default
                optional: true
            version: v1.8.2
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: bootstrap_branch
                description: The branch in the gitrepo containing the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
              - name: gitops_config
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                description: The credentials for the gitops repo(s)
              - name: server_name
                description: The name of the cluster that will be configured for gitops
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: The short name of the repository (i.e. the part after the org/group name)
              - name: branch
                type: string
                description: The name of the branch that will be used. If the repo already exists (provision=false) then it is assumed this branch already exists as well
                default: main
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the git repo should be provisioned. If `false` then the repo is expected to already exist
                default: true
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
                default: openshift-gitops
                optional: true
              - name: banner_label
                type: string
                description: The label for the cluster
                default: cluster
                optional: true
              - name: banner_color
                type: string
                description: The color for the cluster
                default: purple
                optional: true
              - name: serverName
                type: string
                description: The name of the cluster that will be configured via gitops. This is used to separate the config by cluster
                default: default
                optional: true
            version: v1.8.1
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: bootstrap_branch
                description: The branch in the gitrepo containing the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
              - name: gitops_config
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                description: The credentials for the gitops repo(s)
              - name: server_name
                description: The name of the cluster that will be configured for gitops
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: The short name of the repository (i.e. the part after the org/group name)
              - name: branch
                type: string
                description: The name of the branch that will be used. If the repo already exists (provision=false) then it is assumed this branch already exists as well
                default: main
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the git repo should be provisioned. If `false` then the repo is expected to already exist
                default: true
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
                default: openshift-gitops
                optional: true
              - name: banner_label
                type: string
                description: The label for the cluster
                default: cluster
                optional: true
              - name: banner_color
                type: string
                description: The color for the cluster
                default: purple
                optional: true
              - name: serverName
                type: string
                description: The name of the cluster that will be configured via gitops. This is used to separate the config by cluster
                default: default
                optional: true
            version: v1.8.0
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: bootstrap_branch
                description: The branch in the gitrepo containing the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
              - name: gitops_config
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                description: The credentials for the gitops repo(s)
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: The short name of the repository (i.e. the part after the org/group name)
              - name: branch
                type: string
                description: The name of the branch that will be used. If the repo already exists (provision=false) then it is assumed this branch already exists as well
                default: main
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the git repo should be provisioned. If `false` then the repo is expected to already exist
                default: true
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
                default: openshift-gitops
                optional: true
              - name: banner_label
                type: string
                description: The label for the cluster
                default: cluster
                optional: true
              - name: banner_color
                type: string
                description: The color for the cluster
                default: purple
                optional: true
            version: v1.7.2
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: bootstrap_branch
                description: The branch in the gitrepo containing the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
              - name: gitops_config
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                description: The credentials for the gitops repo(s)
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: The short name of the repository (i.e. the part after the org/group name)
              - name: branch
                type: string
                description: The name of the branch that will be used. If the repo already exists (provision=false) then it is assumed this branch already exists as well
                default: main
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the git repo should be provisioned. If `false` then the repo is expected to already exist
                default: true
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
              - name: banner_label
                type: string
                description: The label for the cluster
                default: cluster
                optional: true
              - name: banner_color
                type: string
                description: The color for the cluster
                default: purple
                optional: true
            version: v1.7.1
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: bootstrap_branch
                description: The branch in the gitrepo containing the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
              - name: gitops_config
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                description: The credentials for the gitops repo(s)
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: The short name of the repository (i.e. the part after the org/group name)
              - name: branch
                type: string
                description: The name of the branch that will be used. If the repo already exists (provision=false) then it is assumed this branch already exists as well
                default: main
                optional: true
              - name: provision
                type: bool
                description: |-
                  variable "provision" {
                    type        = bool
                    description = "A description of my
              - name: variable"~  default     = true~}~~
                type: string
                default: "true"
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
              - name: banner_label
                type: string
                description: The label for the cluster
                default: cluster
                optional: true
              - name: banner_color
                type: string
                description: The color for the cluster
                default: purple
                optional: true
            version: v1.7.0
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: bootstrap_branch
                description: The branch in the gitrepo containing the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
              - name: gitops_config
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                description: The credentials for the gitops repo(s)
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: |-
                  variable "repo" {
                    type        = string
                    description = "A description of my
              - name: variable"~}~~
                type: string
              - name: provision
                type: bool
                description: |-
                  variable "provision" {
                    type        = bool
                    description = "A description of my
              - name: variable"~  default     = true~}~~
                type: string
                default: "true"
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
              - name: banner_label
                type: string
                description: The label for the cluster
                default: cluster
                optional: true
              - name: banner_color
                type: string
                description: The color for the cluster
                default: purple
                optional: true
            version: v1.6.0
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
              - name: gitops_config
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                description: The credentials for the gitops repo(s)
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: |-
                  variable "repo" {
                    type        = string
                    description = "A description of my
              - name: variable"~}~~
                type: string
              - name: provision
                type: bool
                description: |-
                  variable "provision" {
                    type        = bool
                    description = "A description of my
              - name: variable"~  default     = true~}~~
                type: string
                default: "true"
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
              - name: banner_label
                type: string
                description: The label for the cluster
                default: cluster
                optional: true
              - name: banner_color
                type: string
                description: The color for the cluster
                default: purple
                optional: true
            version: v1.5.0
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: |-
                  variable "repo" {
                    type        = string
                    description = "A description of my
              - name: variable"~}~~
                type: string
              - name: provision
                type: bool
                description: |-
                  variable "provision" {
                    type        = bool
                    description = "A description of my
              - name: variable"~  default     = true~}~~
                type: string
                default: "true"
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
            version: v1.4.2
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: |-
                  variable "repo" {
                    type        = string
                    description = "A description of my
              - name: variable"~}~~
                type: string
              - name: provision
                type: bool
                description: |-
                  variable "provision" {
                    type        = bool
                    description = "A description of my
              - name: variable"~  default     = true~}~~
                type: string
                default: "true"
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
            version: v1.4.1
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: |-
                  variable "repo" {
                    type        = string
                    description = "A description of my
              - name: variable"~}~~
                type: string
              - name: provision
                type: bool
                description: |-
                  variable "provision" {
                    type        = bool
                    description = "A description of my
              - name: variable"~  default     = true~}~~
                type: string
                default: "true"
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
            version: v1.4.0
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: |-
                  variable "repo" {
                    type        = string
                    description = "A description of my
              - name: variable"~}~~
                type: string
              - name: provision
                type: bool
                description: |-
                  variable "provision" {
                    type        = bool
                    description = "A description of my
              - name: variable"~  default     = true~}~~
                type: string
                default: "true"
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
            version: v1.3.1
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: |-
                  variable "repo" {
                    type        = string
                    description = "A description of my
              - name: variable"~}~~
                type: string
              - name: provision
                type: bool
                description: |-
                  variable "provision" {
                    type        = bool
                    description = "A description of my
              - name: variable"~  default     = true~}~~
                type: string
                default: "true"
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
            version: v1.3.0
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_repo_url
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_repo_url
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: |-
                  variable "repo" {
                    type        = string
                    description = "A description of my
              - name: variable"~}~~
                type: string
              - name: provision
                type: bool
                description: |-
                  variable "provision" {
                    type        = bool
                    description = "A description of my
              - name: variable"~  default     = true~}~~
                type: string
                default: "true"
                optional: true
              - name: username
                type: string
                description: The username of the user with access to the repository
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
            version: v1.2.0
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_username
                description: The username for the config repo
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_username
                description: The username for the application repo
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: |-
                  variable "repo" {
                    type        = string
                    description = "A description of my
              - name: variable"~}~~
                type: string
              - name: provision
                type: bool
                description: |-
                  variable "provision" {
                    type        = bool
                    description = "A description of my
              - name: variable"~  default     = true~}~~
                type: string
                default: "true"
                optional: true
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
            version: v1.1.0
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: config_projects
                description: The ArgoCD projects for the different layers of the repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
          - platforms: []
            dependencies: []
            variables:
              - name: host
                type: string
                description: The host for the git repository.
              - name: type
                type: string
                description: The type of the hosted git repository (github or gitlab).
              - name: org
                type: string
                description: The org/group where the git repository exists/will be provisioned.
              - name: repo
                type: string
                description: |-
                  variable "repo" {
                    type        = string
                    description = "A description of my
              - name: variable"~}~~
                type: string
              - name: provision
                type: bool
                description: |-
                  variable "provision" {
                    type        = bool
                    description = "A description of my
              - name: variable"~  default     = true~}~~
                type: string
                default: "true"
                optional: true
              - name: token
                type: string
                description: The personal access token used to access the repository
              - name: public
                type: bool
                description: Flag indicating that the repo should be public or private
                default: false
                optional: true
              - name: gitops_namespace
                type: string
                description: The namespace where ArgoCD is running in the cluster
            version: v1.0.0
            outputs:
              - name: config_repo
                description: The repo that contains the argocd configuration
              - name: config_token
                description: The token for the config repo
              - name: config_paths
                description: The paths in the config repo
              - name: bootstrap_path
                description: The path to the bootstrap configuration
              - name: application_repo
                description: The repo that contains the application configuration
              - name: application_token
                description: The token for the application repo
              - name: application_paths
                description: The paths in the application repo
        provider: tools
      - id: github.com/cloud-native-toolkit/terraform-gitops-namespace
        name: gitops-namespace
        type: terraform
        description: Module to configure the provisioning of a namespace in a GitOps repo
        tags:
          - tools
          - gitops
        versions:
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: name
                type: string
                description: The value that should be used for the namespace
              - name: ci
                type: bool
                description: Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)
                default: false
                optional: true
            version: v1.9.0
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: name
                type: string
                description: The value that should be used for the namespace
              - name: ci
                type: bool
                description: Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)
                default: false
                optional: true
            version: v1.8.3
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: name
                type: string
                description: The value that should be used for the namespace
              - name: ci
                type: bool
                description: Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)
                default: false
                optional: true
            version: v1.8.2
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: name
                type: string
                description: The value that should be used for the namespace
              - name: ci
                type: bool
                description: Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)
                default: false
                optional: true
            version: v1.8.1
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: name
                type: string
                description: The value that should be used for the namespace
              - name: ci
                type: bool
                description: Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)
                default: false
                optional: true
            version: v1.8.0
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: name
                type: string
                description: The value that should be used for the namespace
              - name: ci
                type: bool
                description: Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)
                default: false
                optional: true
            version: v1.7.2
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: name
                type: string
                description: The value that should be used for the namespace
              - name: ci
                type: bool
                description: Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)
                default: false
                optional: true
            version: v1.7.1
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: serverName
                moduleRef:
                  id: gitops
                  output: serverName
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: name
                type: string
                description: The value that should be used for the namespace
              - name: ci
                type: bool
                description: Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)
                default: false
                optional: true
            version: v1.7.0
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: name
                type: string
                description: The value that should be used for the namespace
              - name: ci
                type: bool
                description: Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)
                default: false
                optional: true
            version: v1.6.0
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: name
                type: string
                description: The value that should be used for the namespace
              - name: dev
                type: bool
                description: Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)
                default: false
                optional: true
            version: v1.5.3
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: name
                type: string
                description: The value that should be used for the namespace
              - name: dev
                type: bool
                description: Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)
                default: false
                optional: true
            version: v1.5.2
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: name
                type: string
                description: The value that should be used for the namespace
              - name: dev
                type: bool
                description: Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)
                default: false
                optional: true
            version: v1.5.1
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: name
                type: string
                description: The value that should be used for the namespace
              - name: dev
                type: bool
                description: Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)
                default: false
                optional: true
            version: v1.5.0
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: name
                type: string
                description: The value that should be used for the namespace
              - name: dev
                type: bool
                description: Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)
                default: false
                optional: true
            version: v1.4.1
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: name
                type: string
                description: The value that should be used for the namespace
              - name: dev
                type: bool
                description: Flag indicating that this namespace will be used for development (e.g. configmaps and secrets)
                default: false
                optional: true
            version: v1.4.0
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: name
                type: string
                description: The value that should be used for the namespace
            version: v1.3.2
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: name
                type: string
                description: The value that should be used for the namespace
            version: v1.3.1
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: name
                type: string
                description: The value that should be used for the namespace
            version: v1.3.0
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: name
                type: string
                description: The value that should be used for the namespace
            version: v1.2.1
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: argocd
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-openshift-gitops.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd.git
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: argocd_namespace
                moduleRef:
                  id: argocd
                  output: argocd_namespace
                type: string
                description: The namespace where argocd has been deployed
              - name: argocd_service_account
                moduleRef:
                  id: argocd
                  output: argocd_service_account
                type: string
                description: The service account for argocd
              - name: name
                type: string
                description: The value that should be used for the namespace
            version: v1.2.0
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: name
                type: string
                description: The value that should be used for the namespace
            version: v1.1.0
            outputs:
              - name: name
                description: Namespace name
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 0.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: name
                type: string
                description: The value that should be used for the namespace
            version: v1.0.0
            outputs:
              - name: name
                description: Namespace name
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: gitops
      - id: github.com/cloud-native-toolkit/terraform-gitops-console-link-job
        name: gitops-console-link-job
        type: terraform
        description: Module that populates a gitops repository with the Console Link Cronjob chart from https://charts.cloudnativetoolkit.dev. The chart deploys a cron job into a cluster that runs periodically (every 5 minutes by default) looking for matching resources and creating cron jobs and config maps with the information. The matching resources include routes with the `console-link.cloud-native-toolkit.dev/enabled=true` label and `logdna-agent` and `sysdig-agent` daemonsets.
        tags:
          - tools
          - gitops
          - consolelink
          - cronjob
        versions:
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v1.4.2
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v1.4.1
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v1.4.0
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v1.3.0
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v1.2.1
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v1.2.0
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v1.1.0
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v1.0.4
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v1.0.3
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v1.0.2
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v1.0.1
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v1.0.0
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.4.4
                optional: true
            version: v0.0.0
        provider: gitops
      - id: github.com/cloud-native-toolkit/terraform-gitops-artifactory
        name: gitops-artifactory
        type: terraform
        description: ""
        tags:
          - tools
          - gitops
          - artifactory
          - artifact management
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#cluster
                optional: true
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
                default: ocp4
                optional: true
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
                default: ""
                optional: true
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: storage_class
                type: string
                description: The storage class to use for the persistent volume claim
                default: ""
                optional: true
              - name: persistence
                type: bool
                description: Flag to indicate if persistence should be enabled
                default: true
                optional: true
            version: v1.2.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: storage_class
                type: string
                description: The storage class to use for the persistent volume claim
                default: ""
                optional: true
              - name: persistence
                type: bool
                description: Flag to indicate if persistence should be enabled
                default: true
                optional: true
            version: v1.1.1
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: storage_class
                type: string
                description: The storage class to use for the persistent volume claim
                default: ""
                optional: true
              - name: persistence
                type: bool
                description: Flag to indicate if persistence should be enabled
                default: true
                optional: true
            version: v1.1.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: storage_class
                type: string
                description: The storage class to use for the persistent volume claim
                default: ""
                optional: true
              - name: persistence
                type: bool
                description: Flag to indicate if persistence should be enabled
                default: true
                optional: true
            version: v1.0.1
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: storage_class
                type: string
                description: The storage class to use for the persistent volume claim
                default: ""
                optional: true
              - name: persistence
                type: bool
                description: Flag to indicate if persistence should be enabled
                default: true
                optional: true
            version: v1.0.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: gitops
      - id: github.com/cloud-native-toolkit/terraform-gitops-dashboard
        name: gitops-dashboard
        type: terraform
        description: Module to configure the provisioning of the Developer Dashboard in a GitOps repo
        tags:
          - tools
          - gitops
          - dashboard
        versions:
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs: []
                optional: true
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#cluster
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
                default: ocp4
                optional: true
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
                default: ""
                optional: true
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.4.4
                optional: true
            version: v1.6.0
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.4.4
                optional: true
            version: v1.5.1
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.4.4
                optional: true
            version: v1.5.0
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.4.4
                optional: true
            version: v1.4.1
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: serverName
                moduleRef:
                  id: gitops
                  output: serverName
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.4.4
                optional: true
            version: v1.4.0
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.4.4
                optional: true
            version: v1.3.2
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.4.4
                optional: true
            version: v1.3.1
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.4.4
                optional: true
            version: v1.3.0
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.4.4
                optional: true
            version: v1.2.0
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.4.4
                optional: true
            version: v1.1.0
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                type: string
                description: The namespace where the application should be deployed
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.4.4
                optional: true
            version: v1.0.1
          - platforms: []
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
            variables:
              - name: config_repo
                moduleRef:
                  id: gitops
                  output: config_repo
                type: string
                description: The repo that contains the argocd configuration
              - name: config_token
                moduleRef:
                  id: gitops
                  output: config_token
                type: string
                description: The token for the config repo
              - name: config_paths
                moduleRef:
                  id: gitops
                  output: config_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the config repo
              - name: config_projects
                moduleRef:
                  id: gitops
                  output: config_projects
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The ArgoCD projects in the config repo
              - name: application_repo
                moduleRef:
                  id: gitops
                  output: application_repo
                type: string
                description: The repo that contains the application configuration
              - name: application_token
                moduleRef:
                  id: gitops
                  output: application_token
                type: string
                description: The token for the application repo
              - name: application_paths
                moduleRef:
                  id: gitops
                  output: application_paths
                type: |-
                  object({
                      infrastructure = string
                      services       = string
                      applications   = string
                    })
                description: The paths in the application repo
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                type: string
                description: The namespace where the application should be deployed
              - name: image_tag
                type: string
                description: The image version tag to use
                default: v1.4.4
                optional: true
            version: v1.0.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: gitops
      - id: github.com/cloud-native-toolkit/terraform-gitops-pact-broker
        name: gitops-pact-broker
        type: terraform
        description: Module to populate gitops repo to deploy Pact Broker
        tags:
          - tools
          - devops
          - pact
          - contract testing
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs: []
                optional: true
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#cluster
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The cluster where the application will be provisioned
                default: default
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
                default: ocp4
                optional: true
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
                default: ""
                optional: true
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v1.1.2
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The cluster where the application will be provisioned
                default: default
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v1.1.1
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The cluster where the application will be provisioned
                default: default
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v1.1.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The cluster where the application will be provisioned
                default: default
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v1.0.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v0.1.2
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v0.1.1
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v0.1.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: gitops
      - id: github.com/cloud-native-toolkit/terraform-gitops-sonarqube
        name: gitops-sonarqube
        type: terraform
        description: Module to populate gitops repo to deploy SonarQube
        tags:
          - tools
          - devops
          - sonarqube
          - gitops
        versions:
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#cluster
                optional: true
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
                default: ocp4
                optional: true
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
                default: ""
                optional: true
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: kubeseal_cert
                moduleRef:
                  id: gitops
                  output: sealed_secrets_cert
                type: string
                description: The certificate/public key used to encrypt the sealed secrets
                default: ""
                optional: true
              - name: storage_class
                type: string
                description: The storage class to use for the persistent volume claim
                default: ""
                optional: true
              - name: service_account_name
                type: string
                description: The name of the service account that should be used for the deployment
                default: sonarqube-sonarqube
                optional: true
              - name: plugins
                type: list(string)
                description: The list of plugins that will be installed on SonarQube
                default: '[ https://github.com/checkstyle/sonar-checkstyle/releases/download/4.33/checkstyle-sonar-plugin-4.33.jar ]'
                optional: true
              - name: postgresql
                type: |-
                  object({
                      username      = string
                      password      = string
                      hostname      = string
                      port          = string
                      database_name = string
                      external      = bool
                    })
                description: Properties for an existing postgresql database
                default: '{ username = password = hostname = port = database_name = external = false }'
                optional: true
              - name: hostname
                type: string
                description: The hostname that will be used for the ingress/route
                default: sonarqube
                optional: true
              - name: persistence
                type: bool
                description: Flag indicating that persistence should be enabled for the pods
                default: false
                optional: true
            version: v1.2.2
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
              - id: argocd-bootstrap
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '> 0.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
                    version: '> 0.0.0'
                optional: true
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
                default: ocp4
                optional: true
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
                default: ""
                optional: true
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: kubeseal_cert
                moduleRef:
                  id: argocd-bootstrap
                  output: sealed_secrets_cert
                type: string
                description: The certificate/public key used to encrypt the sealed secrets
                default: ""
                optional: true
              - name: storage_class
                type: string
                description: The storage class to use for the persistent volume claim
                default: ""
                optional: true
              - name: service_account_name
                type: string
                description: The name of the service account that should be used for the deployment
                default: sonarqube-sonarqube
                optional: true
              - name: plugins
                type: list(string)
                description: The list of plugins that will be installed on SonarQube
                default: '[ https://github.com/checkstyle/sonar-checkstyle/releases/download/4.33/checkstyle-sonar-plugin-4.33.jar ]'
                optional: true
              - name: postgresql
                type: |-
                  object({
                      username      = string
                      password      = string
                      hostname      = string
                      port          = string
                      database_name = string
                      external      = bool
                    })
                description: Properties for an existing postgresql database
                default: '{ username = password = hostname = port = database_name = external = false }'
                optional: true
              - name: hostname
                type: string
                description: The hostname that will be used for the ingress/route
                default: sonarqube
                optional: true
              - name: persistence
                type: bool
                description: Flag indicating that persistence should be enabled for the pods
                default: false
                optional: true
            version: v1.2.1
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
              - id: argocd-bootstrap
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '> 0.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
                    version: '> 0.0.0'
                optional: true
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
                default: ocp4
                optional: true
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
                default: ""
                optional: true
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: kubeseal_cert
                moduleRef:
                  id: argocd-bootstrap
                  output: sealed_secrets_cert
                type: string
                description: The certificate/public key used to encrypt the sealed secrets
                default: ""
                optional: true
              - name: storage_class
                type: string
                description: The storage class to use for the persistent volume claim
                default: ""
                optional: true
              - name: service_account_name
                type: string
                description: The name of the service account that should be used for the deployment
                default: sonarqube-sonarqube
                optional: true
              - name: plugins
                type: list(string)
                description: The list of plugins that will be installed on SonarQube
                default: '[ https://github.com/checkstyle/sonar-checkstyle/releases/download/4.33/checkstyle-sonar-plugin-4.33.jar ]'
                optional: true
              - name: postgresql
                type: |-
                  object({
                      username      = string
                      password      = string
                      hostname      = string
                      port          = string
                      database_name = string
                      external      = bool
                    })
                description: Properties for an existing postgresql database
                default: '{ username = password = hostname = port = database_name = external = false }'
                optional: true
              - name: hostname
                type: string
                description: The hostname that will be used for the ingress/route
                default: sonarqube
                optional: true
              - name: persistence
                type: bool
                description: Flag indicating that persistence should be enabled for the pods
                default: false
                optional: true
            version: v1.2.0
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
              - id: argocd-bootstrap
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '> 0.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
                    version: '> 0.0.0'
                optional: true
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
                default: ocp4
                optional: true
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
                default: ""
                optional: true
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: kubeseal_cert
                moduleRef:
                  id: argocd-bootstrap
                  output: sealed_secrets_cert
                type: string
                description: The certificate/public key used to encrypt the sealed secrets
                default: ""
                optional: true
              - name: storage_class
                type: string
                description: The storage class to use for the persistent volume claim
                default: ""
                optional: true
              - name: service_account_name
                type: string
                description: The name of the service account that should be used for the deployment
                default: sonarqube-sonarqube
                optional: true
              - name: plugins
                type: list(string)
                description: The list of plugins that will be installed on SonarQube
                default: '[ https://github.com/checkstyle/sonar-checkstyle/releases/download/4.33/checkstyle-sonar-plugin-4.33.jar ]'
                optional: true
              - name: postgresql
                type: |-
                  object({
                      username      = string
                      password      = string
                      hostname      = string
                      port          = string
                      database_name = string
                      external      = bool
                    })
                description: Properties for an existing postgresql database
                default: '{ username = password = hostname = port = database_name = external = false }'
                optional: true
              - name: hostname
                type: string
                description: The hostname that will be used for the ingress/route
                default: sonarqube
                optional: true
            version: v1.1.0
          - platforms:
              - kubernetes
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
              - id: argocd-bootstrap
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '> 0.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
                    version: '> 0.0.0'
                optional: true
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
                default: ocp4
                optional: true
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
                default: ""
                optional: true
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: kubeseal_cert
                moduleRef:
                  id: argocd-bootstrap
                  output: sealed_secrets_cert
                type: string
                description: The certificate/public key used to encrypt the sealed secrets
                default: ""
                optional: true
              - name: storage_class
                type: string
                description: The storage class to use for the persistent volume claim
                default: ""
                optional: true
              - name: service_account_name
                type: string
                description: The name of the service account that should be used for the deployment
                default: sonarqube-sonarqube
                optional: true
              - name: plugins
                type: list(string)
                description: The list of plugins that will be installed on SonarQube
                default: '[ https://github.com/checkstyle/sonar-checkstyle/releases/download/4.33/checkstyle-sonar-plugin-4.33.jar ]'
                optional: true
              - name: postgresql
                type: |-
                  object({
                      username      = string
                      password      = string
                      hostname      = string
                      port          = string
                      database_name = string
                      external      = bool
                    })
                description: Properties for an existing postgresql database
                default: '{ username = password = hostname = port = database_name = external = false }'
                optional: true
              - name: hostname
                type: string
                description: The hostname that will be used for the ingress/route
                default: sonarqube
                optional: true
            version: v1.0.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: gitops
      - id: github.com/cloud-native-toolkit/terraform-gitops-image-registry
        name: gitops-image-registry
        type: terraform
        description: Module to populate a gitops repo with the configuration needed to access an image registry, using a config maps and secrets.
        tags:
          - gitops
          - config
          - image registry
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
              - id: registry
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-registry.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: registry_server
                moduleRef:
                  id: registry
                  output: registry_server
                type: string
                description: The server/host of the image registry
              - name: registry_user
                moduleRef:
                  id: registry
                  output: registry_user
                type: string
                description: The username to access the image registry
              - name: registry_password
                moduleRef:
                  id: registry
                  output: registry_password
                type: string
                description: The password to access the image registry
              - name: registry_namespace
                moduleRef:
                  id: registry
                  output: registry_namespace
                type: string
                description: The namespace in the image registry
              - name: registry_url
                moduleRef:
                  id: registry
                  output: registry_url
                type: string
                description: The url to access the image registry in a browser
              - name: kubeseal_cert
                moduleRef:
                  id: gitops
                  output: sealed_secrets_cert
                type: string
                description: The certificate/public key used to encrypt the sealed secrets
                default: ""
                optional: true
              - name: image_url
                type: string
                description: The url of the image that will be added to console link. If not provided the image will be empty
                default: ""
                optional: true
              - name: display_name
                type: string
                description: The display name that will appear in the console link. If not provided the value will default to 'Image Registry'
                default: ""
                optional: true
            version: v1.1.2
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
              - id: registry
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-registry.git
                    version: '>= 1.0.0'
              - id: argocd_bootstrap
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: registry_server
                moduleRef:
                  id: registry
                  output: registry_server
                type: string
                description: The server/host of the image registry
              - name: registry_user
                moduleRef:
                  id: registry
                  output: registry_user
                type: string
                description: The username to access the image registry
              - name: registry_password
                moduleRef:
                  id: registry
                  output: registry_password
                type: string
                description: The password to access the image registry
              - name: registry_namespace
                moduleRef:
                  id: registry
                  output: registry_namespace
                type: string
                description: The namespace in the image registry
              - name: registry_url
                moduleRef:
                  id: registry
                  output: registry_url
                type: string
                description: The url to access the image registry in a browser
              - name: kubeseal_cert
                moduleRef:
                  id: argocd_bootstrap
                  output: sealed_secrets_cert
                type: string
                description: The certificate/public key used to encrypt the sealed secrets
                default: ""
                optional: true
              - name: image_url
                type: string
                description: The url of the image that will be added to console link. If not provided the image will be empty
                default: ""
                optional: true
              - name: display_name
                type: string
                description: The display name that will appear in the console link. If not provided the value will default to 'Image Registry'
                default: ""
                optional: true
            version: v1.1.1
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
              - id: registry
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-registry.git
                    version: '>= 1.0.0'
              - id: argocd_bootstrap
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The name of the server
                default: default
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: registry_server
                moduleRef:
                  id: registry
                  output: registry_server
                type: string
                description: The server/host of the image registry
              - name: registry_user
                moduleRef:
                  id: registry
                  output: registry_user
                type: string
                description: The username to access the image registry
              - name: registry_password
                moduleRef:
                  id: registry
                  output: registry_password
                type: string
                description: The password to access the image registry
              - name: registry_namespace
                moduleRef:
                  id: registry
                  output: registry_namespace
                type: string
                description: The namespace in the image registry
              - name: registry_url
                moduleRef:
                  id: registry
                  output: registry_url
                type: string
                description: The url to access the image registry in a browser
              - name: kubeseal_cert
                moduleRef:
                  id: argocd_bootstrap
                  output: sealed_secrets_cert
                type: string
                description: The certificate/public key used to encrypt the sealed secrets
                default: ""
                optional: true
              - name: image_url
                type: string
                description: The url of the image that will be added to console link. If not provided the image will be empty
                default: ""
                optional: true
              - name: display_name
                type: string
                description: The display name that will appear in the console link. If not provided the value will default to 'Image Registry'
                default: ""
                optional: true
            version: v1.1.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
              - id: registry
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-registry.git
                    version: '>= 1.0.0'
              - id: argocd_bootstrap
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: registry_server
                moduleRef:
                  id: registry
                  output: registry_server
                type: string
                description: The server/host of the image registry
              - name: registry_user
                moduleRef:
                  id: registry
                  output: registry_user
                type: string
                description: The username to access the image registry
              - name: registry_password
                moduleRef:
                  id: registry
                  output: registry_password
                type: string
                description: The password to access the image registry
              - name: registry_namespace
                moduleRef:
                  id: registry
                  output: registry_namespace
                type: string
                description: The namespace in the image registry
              - name: registry_url
                moduleRef:
                  id: registry
                  output: registry_url
                type: string
                description: The url to access the image registry in a browser
              - name: kubeseal_cert
                moduleRef:
                  id: argocd_bootstrap
                  output: sealed_secrets_cert
                type: string
                description: The certificate/public key used to encrypt the sealed secrets
                default: ""
                optional: true
              - name: image_url
                type: string
                description: The url of the image that will be added to console link. If not provided the image will be empty
                default: ""
                optional: true
              - name: display_name
                type: string
                description: The display name that will appear in the console link. If not provided the value will default to 'Image Registry'
                default: ""
                optional: true
            version: v1.0.1
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: registry_server
                type: string
                description: The server/host of the image registry
              - name: registry_user
                type: string
                description: The username to access the image registry
              - name: registry_password
                type: string
                description: The password to access the image registry
              - name: registry_namespace
                type: string
                description: The namespace in the image registry
              - name: registry_url
                type: string
                description: The url to access the image registry in a browser
              - name: kubeseal_cert
                type: string
                description: The certificate/public key used to encrypt the sealed secrets
                default: ""
                optional: true
              - name: image_url
                type: string
                description: The url of the image that will be added to console link. If not provided the image will be empty
                default: ""
                optional: true
              - name: display_name
                type: string
                description: The display name that will appear in the console link. If not provided the value will default to 'Image Registry'
                default: ""
                optional: true
            version: v1.0.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
                default: ocp4
                optional: true
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
                default: ""
                optional: true
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v0.0.0
        provider: gitops
      - id: github.com/cloud-native-toolkit/terraform-gitops-tekton-resources
        name: gitops-tekton-resources
        type: terraform
        description: Module to populate a gitops repo with Tekton resources (tasks and pipelines).
        tags:
          - tools
          - gitops
          - tekton resources
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The cluster where the application will be provisioned
                default: default
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: task_release
                type: string
                description: The release version of the tekton tasks
                default: v2.7.1
                optional: true
            version: v1.1.2
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The cluster where the application will be provisioned
                default: default
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: task_release
                type: string
                description: The release version of the tekton tasks
                default: v2.7.1
                optional: true
            version: v1.1.1
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: server_name
                moduleRef:
                  id: gitops
                  output: server_name
                type: string
                description: The cluster where the application will be provisioned
                default: default
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: task_release
                type: string
                description: The release version of the tekton tasks
                default: v2.7.1
                optional: true
            version: v1.1.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
              - name: task_release
                type: string
                description: The release version of the tekton tasks
                default: v2.7.1
                optional: true
            version: v1.0.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: gitops
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
                    version: '>= 1.1.0'
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
                    version: '>= 1.0.0'
            variables:
              - name: gitops_config
                moduleRef:
                  id: gitops
                  output: gitops_config
                type: |-
                  object({
                      boostrap = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      infrastructure = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      services = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                      applications = object({
                        argocd-config = object({
                          project = string
                          repo = string
                          url = string
                          path = string
                        })
                        payload = object({
                          repo = string
                          url = string
                          path = string
                        })
                      })
                    })
                description: Config information regarding the gitops repo structure
              - name: git_credentials
                moduleRef:
                  id: gitops
                  output: git_credentials
                type: |-
                  list(object({
                      repo = string
                      url = string
                      username = string
                      token = string
                    }))
                description: The credentials for the gitops repo(s)
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
                default: ocp4
                optional: true
              - name: cluster_ingress_hostname
                moduleRef:
                  id: cluster
                  output: platform.ingress
                type: string
                description: Ingress hostname of the IKS cluster.
                default: ""
                optional: true
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: platform.tls_secret
                type: string
                description: The name of the secret containing the tls certificate values
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace where the application should be deployed
            version: v0.0.0
        provider: gitops
  - category: iam
    categoryName: IAM
    selection: multiple
    modules:
      - id: github.com/cloud-native-toolkit/terraform-ibm-onboard-fs-account
        name: ibm-onboard-fs-account
        type: terraform
        description: Module to set account-level values that enable FS computing
        tags:
          - fscloud
          - ibmcloud
          - account
        versions:
          - platforms: []
            dependencies: []
            variables:
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region.
              - name: action
                type: string
                description: 'USAGE: ibmcloud cr platform-metrics enable | disable'
              - name: mfa
                type: string
                description: Defines the MFA trait for an account. Valid values are NONE No MFA trait set. TOTP For all non-federated IBM ID users TOTP4ALL For all users. LEVEL1 The Email based MFA for all users. LEVEL2 TOTP based MFA for all users. LEVEL3 U2F MFA for all users.
              - name: restrict_create_service_id
                type: string
                description: Defines whether creating a service ID is access controlled. Valid values are RESTRICTED to apply access control. NOT_RESTRICTED to remove access control. NOT_SET to unset a previous set value.
              - name: restrict_create_platform_apikey
                type: string
                description: Defines whether creating a API Key is access controlled. Valid values are RESTRICTED to apply access control. NOT_RESTRICTED to remove access control. NOT_SET to unset a previous set value.
            version: v1.0.1
          - platforms: []
            dependencies: []
            variables:
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region.
              - name: action
                type: string
                description: 'USAGE: ibmcloud cr platform-metrics enable | disable'
              - name: mfa
                type: string
                description: Defines the MFA trait for an account. Valid values are NONE No MFA trait set. TOTP For all non-federated IBM ID users TOTP4ALL For all users. LEVEL1 The Email based MFA for all users. LEVEL2 TOTP based MFA for all users. LEVEL3 U2F MFA for all users.
              - name: restrict_create_service_id
                type: string
                description: Defines whether creating a service ID is access controlled. Valid values are RESTRICTED to apply access control. NOT_RESTRICTED to remove access control. NOT_SET to unset a previous set value.
              - name: restrict_create_platform_apikey
                type: string
                description: Defines whether creating a API Key is access controlled. Valid values are RESTRICTED to apply access control. NOT_RESTRICTED to remove access control. NOT_SET to unset a previous set value.
            version: v1.0.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables:
              - name: ibmcloud_api_key
                type: string
                description: The api key for IBM Cloud access
              - name: resource_group_name
                type: string
                description: The name of the IBM Cloud resource group.
              - name: region
                type: string
                description: The IBM Cloud region.
              - name: action
                type: string
                description: 'USAGE: ibmcloud cr platform-metrics enable | disable'
              - name: mfa
                type: string
                description: Defines the MFA trait for an account. Valid values are NONE No MFA trait set. TOTP For all non-federated IBM ID users TOTP4ALL For all users. LEVEL1 The Email based MFA for all users. LEVEL2 TOTP based MFA for all users. LEVEL3 U2F MFA for all users.
              - name: restrict_create_service_id
                type: string
                description: Defines whether creating a service ID is access controlled. Valid values are RESTRICTED to apply access control. NOT_RESTRICTED to remove access control. NOT_SET to unset a previous set value.
              - name: restrict_create_platform_apikey
                type: string
                description: Defines whether creating a API Key is access controlled. Valid values are RESTRICTED to apply access control. NOT_RESTRICTED to remove access control. NOT_SET to unset a previous set value.
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-resource-group
        name: ibm-resource-group
        alias: resource_group
        type: terraform
        description: Creates a resource groups in the account
        tags:
          - ibm cloud
          - resource group
          - account
        versions:
          - platforms: []
            providers:
              - name: ibm
                source: ibm-cloud/ibm
            dependencies:
              - id: sync
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#sync
                optional: true
            variables:
              - name: resource_group_name
                alias: name
                scope: module
                type: string
                description: The name of the resource group
              - name: sync
                moduleRef:
                  id: sync
                  output: sync
                type: string
                description: Value used to order the provisioning of the resource group
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the resource group should be created
                default: true
                optional: true
            version: v3.0.0
            outputs:
              - name: name
                description: The name of the resource group
              - name: id
                description: The id of the resource group
              - name: group
                description: The resource group object
              - name: provision
                description: Flag indicating whether the resource group was provisioned
              - name: sync
                description: Value used to order the provisioning of the resource group
          - platforms: []
            providers:
              - name: ibm
                source: ibm-cloud/ibm
            dependencies:
              - id: sync
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#sync
                optional: true
            variables:
              - name: resource_group_name
                alias: name
                scope: module
                type: string
                description: The name of the resource group
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: sync
                moduleRef:
                  id: sync
                  output: sync
                type: string
                description: Value used to order the provisioning of the resource group
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the resource group should be created
                default: true
                optional: true
            version: v2.4.7
            outputs:
              - name: name
                description: The name of the resource group
              - name: id
                description: The id of the resource group
              - name: group
                description: The resource group object
              - name: provision
                description: Flag indicating whether the resource group was provisioned
              - name: sync
                description: Value used to order the provisioning of the resource group
          - platforms: []
            providers:
              - name: ibm
                source: ibm-cloud/ibm
            dependencies:
              - id: sync
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#sync
                optional: true
            variables:
              - name: resource_group_name
                alias: name
                scope: module
                type: string
                description: The name of the resource group
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: sync
                moduleRef:
                  id: sync
                  output: sync
                type: string
                description: Value used to order the provisioning of the resource group
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the resource group should be created
                default: true
                optional: true
            version: v2.4.6
            outputs:
              - name: name
                description: The name of the resource group
              - name: id
                description: The id of the resource group
              - name: group
                description: The resource group object
              - name: provision
                description: Flag indicating whether the resource group was provisioned
              - name: sync
                description: Value used to order the provisioning of the resource group
          - platforms: []
            providers:
              - name: ibm
                source: ibm-cloud/ibm
            dependencies:
              - id: sync
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                optional: true
                discriminator: no_match
            variables:
              - name: resource_group_name
                alias: name
                scope: module
                type: string
                description: The name of the resource group
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: sync
                moduleRef:
                  id: sync
                  output: sync
                type: string
                description: Value used to order the provisioning of the resource group
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the resource group should be created
                default: true
                optional: true
            version: v2.4.5
            outputs:
              - name: name
                description: The name of the resource group
              - name: id
                description: The id of the resource group
              - name: group
                description: The resource group object
              - name: provision
                description: Flag indicating whether the resource group was provisioned
              - name: sync
                description: Value used to order the provisioning of the resource group
          - platforms: []
            providers:
              - name: ibm
                source: ibm-cloud/ibm
            dependencies:
              - id: sync
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                optional: true
                discriminator: no_match
            variables:
              - name: resource_group_name
                alias: name
                scope: module
                type: string
                description: The name of the resource group
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: sync
                moduleRef:
                  id: sync
                  output: sync
                type: string
                description: Value used to order the provisioning of the resource group
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the resource group should be created
                default: true
                optional: true
            version: v2.4.4
            outputs:
              - name: name
                description: The name of the resource group
              - name: id
                description: The id of the resource group
              - name: group
                description: The resource group object
              - name: provision
                description: Flag indicating whether the resource group was provisioned
              - name: sync
                description: Value used to order the provisioning of the resource group
          - platforms: []
            providers:
              - name: ibm
                source: ibm-cloud/ibm
            dependencies:
              - id: sync
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                optional: true
                discriminator: no_match
            variables:
              - name: resource_group_name
                alias: name
                scope: module
                type: string
                description: The name of the resource group
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: sync
                moduleRef:
                  id: sync
                  output: sync
                type: string
                description: Value used to order the provisioning of the resource group
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the resource group should be created
                default: true
                optional: true
            version: v2.4.3
            outputs:
              - name: name
                description: The name of the resource group
              - name: id
                description: The id of the resource group
              - name: group
                description: The resource group object
              - name: provision
                description: Flag indicating whether the resource group was provisioned
              - name: sync
                description: Value used to order the provisioning of the resource group
          - platforms: []
            providers:
              - name: ibm
                source: ibm-cloud/ibm
            dependencies:
              - id: sync
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                optional: true
                discriminator: no_match
            variables:
              - name: resource_group_name
                alias: name
                scope: module
                type: string
                description: The name of the resource group
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: sync
                moduleRef:
                  id: sync
                  output: sync
                type: string
                description: Value used to order the provisioning of the resource group
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the resource group should be created
                default: true
                optional: true
            version: v2.4.2
            outputs:
              - name: name
                description: The name of the resource group
              - name: id
                description: The id of the resource group
              - name: group
                description: The resource group object
              - name: provision
                description: Flag indicating whether the resource group was provisioned
              - name: sync
                description: Value used to order the provisioning of the resource group
          - platforms: []
            providers:
              - name: ibm
                source: ibm-cloud/ibm
            dependencies:
              - id: sync
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                optional: true
            variables:
              - name: resource_group_name
                alias: name
                scope: module
                type: string
                description: The name of the resource group
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: sync
                moduleRef:
                  id: sync
                  output: sync
                type: string
                description: Value used to order the provisioning of the resource group
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the resource group should be created
                default: true
                optional: true
            version: v2.4.1
            outputs:
              - name: name
                description: The name of the resource group
              - name: id
                description: The id of the resource group
              - name: group
                description: The resource group object
              - name: provision
                description: Flag indicating whether the resource group was provisioned
              - name: sync
                description: Value used to order the provisioning of the resource group
          - platforms: []
            providers:
              - name: ibm
                source: ibm-cloud/ibm
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                optional: true
            variables:
              - name: resource_group_name
                alias: name
                scope: module
                type: string
                description: The name of the resource group
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: sync
                moduleRef:
                  id: resource_group
                  output: sync
                type: string
                description: Value used to order the provisioning of the resource group
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the resource group should be created
                default: true
                optional: true
            version: v2.4.0
            outputs:
              - name: name
                description: The name of the resource group
              - name: id
                description: The id of the resource group
              - name: group
                description: The resource group object
              - name: provision
                description: Flag indicating whether the resource group was provisioned
              - name: sync
                description: Value used to order the provisioning of the resource group
          - platforms: []
            dependencies: []
            variables:
              - name: resource_group_name
                alias: name
                scope: module
                type: string
                description: The name of the resource group
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the resource group should be created
                default: true
                optional: true
            version: v2.3.0
            outputs:
              - name: name
                description: The name of the resource group
              - name: id
                description: The id of the resource group
              - name: group
                description: The resource group object
              - name: provision
                description: Flag indicating whether the resource group was provisioned
          - platforms: []
            dependencies: []
            variables:
              - name: resource_group_name
                alias: name
                scope: module
                type: string
                description: The name of the resource group
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the resource group should be created
                default: true
                optional: true
            version: v2.2.1
            outputs:
              - name: name
                description: The name of the resource group
              - name: id
                description: The id of the resource group
              - name: group
                description: The resource group object
          - platforms: []
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the resource group
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the resource group should be created
                default: true
                optional: true
            version: v2.2.0
            outputs:
              - name: name
                description: The name of the resource group
              - name: id
                description: The id of the resource group
              - name: group
                description: The resource group object
          - platforms: []
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the resource group
              - name: provision
                type: bool
                description: Flag indicating that the resource group should be created
                default: true
                optional: true
            version: v2.1.1
            outputs:
              - name: name
                description: The name of the resource group
              - name: id
                description: The id of the resource group
              - name: group
                description: The resource group object
          - platforms: []
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the resource group
              - name: provision
                type: bool
                description: Flag indicating that the resource group should be created
                default: true
                optional: true
            version: v2.1.0
            outputs:
              - name: name
                description: The name of the resource group
              - name: id
                description: The id of the resource group
              - name: group
                description: The resource group object
          - platforms: []
            dependencies: []
            variables:
              - name: names
                type: list(string)
                description: List of resource group names that should be created
            version: v2.0.0
            outputs:
              - name: names
                description: List of resource group names
              - name: ids
                description: List of ids of generated resource groups
              - name: groups
                description: List of group names and ids
          - platforms: []
            dependencies: []
            variables:
              - name: names
                type: list(string)
                description: List of resource group names that should be created
            version: v1.4.1
            outputs:
              - name: names
                description: List of resource group names
              - name: ids
                description: List of ids of generated resource groups
              - name: groups
                description: List of group names and ids
          - platforms: []
            dependencies: []
            variables:
              - name: names
                type: list(string)
                description: List of resource group names that should be created
            version: v1.4.0
            outputs:
              - name: names
                description: List of resource group names
              - name: ids
                description: List of ids of generated resource groups
              - name: groups
                description: List of group names and ids
          - platforms: []
            dependencies: []
            variables:
              - name: resourceGroupNames
                type: string
                description: Comma-separated list of resource group names that should be created
            version: v1.3.0
            outputs:
              - name: names
                description: List of resource group names
              - name: ids
                description: List of ids of generated resource groups
              - name: groups
                description: List of group names and ids
          - platforms: []
            dependencies: []
            variables:
              - name: resourceGroupNames
                type: string
                description: Comma-separated list of resource group names that should be created
            version: v1.2.0
            outputs:
              - name: names
                description: List of resource group names
              - name: ids
                description: List of ids of generated resource groups
          - platforms: []
            dependencies: []
            variables:
              - name: resourceGroupNames
                type: string
                description: Comma-separated list of resource group names that should be created
            version: v1.1.0
            outputs:
              - name: resourceGroupNames
                description: List of resource group names
          - platforms: []
            dependencies: []
            variables:
              - name: resourceGroupNames
                type: string
                description: Comma-separated list of resource group names that should be created
            version: v1.0.0
            outputs:
              - name: resourceGroupNames
                description: List of resource group names
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables:
              - name: variable "my
                type: variable "my
                description: variable "my
              - name: 'variable" { #  type        = string #  description = "A description of my'
                type: string
                description: 'variable" { #  type        = string #  description = "A description of my'
              - name: 'variable" #  default     = "" #}'
                type: 'variable" #  default     = "" #}'
                description: 'variable" #  default     = "" #}'
                optional: true
            version: v0.0.0
            outputs:
              - name: output "my
                description: output "my
              - name: 'output" { #  description = "Description of my'
                description: 'output" { #  description = "Description of my'
              - name: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
                description: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-account-access-group
        name: ibm-account-access-group
        type: terraform
        description: Module to provision account-wide access groups for an FS-enabled account
        tags:
          - account
          - access group
        versions:
          - platforms: []
            dependencies: []
            variables:
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
            version: v1.0.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-access-group
        name: ibm-access-group
        type: terraform
        description: Module to create ADMIN and USER access groups for a set of resource groups
        tags:
          - tools
          - ibm cloud
          - access groups
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.3.0'
            variables:
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the resource group for which the access groups will be created
              - name: provision
                moduleRef:
                  id: resource_group
                  output: provision
                type: bool
                description: Flag indicating that the service authorization should be created
                default: true
                optional: true
            version: v2.3.0
            outputs:
              - name: resource_group_name
                description: List of resource group names
              - name: admin_group_name
                description: List of admin access group names
              - name: edit_group_name
                description: List of editor access group names
              - name: view_group_name
                description: List of viewer access group names
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.3.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the resource group for which the access groups will be created
              - name: provision
                moduleRef:
                  id: resource_group
                  output: provision
                type: bool
                description: Flag indicating that the service authorization should be created
                default: true
                optional: true
            version: v2.2.0
            outputs:
              - name: resource_group_name
                description: List of resource group names
              - name: admin_group_name
                description: List of admin access group names
              - name: edit_group_name
                description: List of editor access group names
              - name: view_group_name
                description: List of viewer access group names
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the resource group for which the access groups will be created
            version: v2.1.1
            outputs:
              - name: resource_group_name
                description: List of resource group names
              - name: admin_group_name
                description: List of admin access group names
              - name: edit_group_name
                description: List of editor access group names
              - name: view_group_name
                description: List of viewer access group names
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the resource group for which the access groups will be created
            version: v2.1.0
            outputs:
              - name: resource_group_name
                description: List of resource group names
              - name: admin_group_name
                description: List of admin access group names
              - name: edit_group_name
                description: List of editor access group names
              - name: view_group_name
                description: List of viewer access group names
          - platforms: []
            dependencies: []
            variables:
              - name: createResourceGroups
                scope: global
                type: bool
                description: Flag indicating that the resource groups should be created
                default: false
                optional: true
              - name: resourceGroupNames
                scope: global
                type: list(string)
                description: List of resource group names that should be created
            version: v2.0.0
            outputs:
              - name: resourceGroupNames
                description: List of resource group names
              - name: adminGroupNames
                description: List of admin access group names
              - name: userGroupNames
                description: List of editor access group names (**Deprecated** use editGroupNames instead
              - name: editGroupNames
                description: List of editor access group names
              - name: viewGroupNames
                description: List of viewer access group names
          - platforms: []
            dependencies: []
            variables:
              - name: createResourceGroups
                scope: global
                type: bool
                description: Flag indicating that the resource groups should be created
                default: false
                optional: true
              - name: resourceGroupNames
                scope: global
                type: list(string)
                description: List of resource group names that should be created
            version: v1.2.1
            outputs:
              - name: resourceGroupNames
                description: List of resource group names
              - name: adminGroupNames
                description: List of admin access group names
              - name: userGroupNames
                description: List of editor access group names (**Deprecated** use editGroupNames instead
              - name: editGroupNames
                description: List of editor access group names
              - name: viewGroupNames
                description: List of viewer access group names
          - platforms: []
            dependencies: []
            variables:
              - name: resourceGroupNames
                type: list(string)
                description: List of resource group names that should be created
              - name: createResourceGroups
                type: bool
                description: Flag indicating that the resource groups should be created
                default: false
                optional: true
            version: v1.2.0
            outputs:
              - name: resourceGroupNames
                description: List of resource group names
              - name: adminGroupNames
                description: List of admin access group names
              - name: userGroupNames
                description: List of editor access group names (**Deprecated** use editGroupNames instead
              - name: editGroupNames
                description: List of editor access group names
              - name: viewGroupNames
                description: List of viewer access group names
          - platforms: []
            dependencies: []
            variables:
              - name: resourceGroupNames
                type: list(string)
                description: List of resource group names that should be created
              - name: region
                type: string
                description: The region where the container registry should be set up
              - name: createResourceGroups
                type: bool
                description: Flag indicating that the resource groups should be created
                default: false
                optional: true
            version: v1.1.2
            outputs:
              - name: resourceGroupNames
                description: List of resource group names
              - name: adminGroupNames
                description: List of admin access group names
              - name: userGroupNames
                description: List of editor access group names (**Deprecated** use editGroupNames instead
              - name: editGroupNames
                description: List of editor access group names
              - name: viewGroupNames
                description: List of viewer access group names
          - platforms: []
            dependencies: []
            variables:
              - name: resourceGroupNames
                type: list(string)
                description: List of resource group names that should be created
              - name: region
                type: string
                description: The region where the container registry should be set up
              - name: createResourceGroups
                type: bool
                description: Flag indicating that the resource groups should be created
                default: false
                optional: true
            version: v1.1.1
            outputs:
              - name: resourceGroupNames
                description: List of resource group names
              - name: adminGroupNames
                description: List of admin access group names
              - name: userGroupNames
                description: List of editor access group names (**Deprecated** use editGroupNames instead
              - name: editGroupNames
                description: List of editor access group names
              - name: viewGroupNames
                description: List of viewer access group names
          - platforms: []
            dependencies: []
            variables:
              - name: resourceGroupNames
                type: list(string)
                description: List of resource group names that should be created
              - name: region
                type: string
                description: The region where the container registry should be set up
              - name: createResourceGroups
                type: bool
                description: Flag indicating that the resource groups should be created
                default: false
                optional: true
            version: v1.1.0
            outputs:
              - name: resourceGroupNames
                description: List of resource group names
              - name: adminGroupNames
                description: List of admin access group names
              - name: userGroupNames
                description: List of editor access group names (**Deprecated** use editGroupNames instead
              - name: editGroupNames
                description: List of editor access group names
              - name: viewGroupNames
                description: List of viewer access group names
          - platforms: []
            dependencies: []
            variables:
              - name: resourceGroupNames
                type: string
                description: Comma-separated list of resource group names that should be created
              - name: region
                type: string
                description: The region where the container registry should be set up
              - name: createResourceGroups
                type: bool
                description: Flag indicating that the resource groups should be created
                optional: true
            version: v1.0.0
            outputs:
              - name: resourceGroupNames
                description: List of resource group names
              - name: adminGroupNames
                description: List of admin access group names
              - name: userGroupNames
                description: List of user access group names
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables:
              - name: resourceGroupNames
                type: string
                description: Comma-separated list of resource group names that should be created
              - name: region
                type: string
                description: The region where the container registry should be set up
              - name: createResourceGroups
                type: bool
                description: Flag indicating that the resource groups should be created
                optional: true
            version: v0.1.0
            outputs:
              - name: resourceGroupNames
                description: List of resource group names
              - name: adminGroupNames
                description: List of admin access group names
              - name: userGroupNames
                description: List of user access group names
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables:
              - name: variable "my
                type: variable "my
                description: variable "my
              - name: 'variable" { #  type        = string #  description = "A description of my'
                type: string
                description: 'variable" { #  type        = string #  description = "A description of my'
              - name: 'variable" #  default     = "" #}'
                type: 'variable" #  default     = "" #}'
                description: 'variable" #  default     = "" #}'
                optional: true
            version: v0.0.0
            outputs:
              - name: output "my
                description: output "my
              - name: 'output" { #  description = "Description of my'
                description: 'output" { #  description = "Description of my'
              - name: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
                description: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-account-users
        name: ibm-account-users
        type: terraform
        description: Module to invite users to the account
        provider: ibm
        tags:
          - tools
          - devops
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            variables:
              - name: users
                scope: module
                type: list(string)
                description: List of users who should be invited to the account
            version: v1.1.0
            outputs:
              - name: users
                description: The list of users who have been invited
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            variables:
              - name: users
                scope: module
                type: string
                description: Comma-separated list of users who should be invited to the account
            version: v1.0.0
            outputs:
              - name: users
                description: The list of users who have been invited
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
      - id: github.com/cloud-native-toolkit/terraform-ibm-add-access-group-users
        name: ibm-add-access-group-users
        type: terraform
        description: Module to add users to provided access groups in an IBM Cloud account
        provider: ibm
        tags:
          - tools
          - devops
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            variables:
              - name: access_groups
                type: list(string)
                description: List of the groups to which the users should be added
              - name: users
                type: list(string)
                description: List of users
            version: v1.0.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
      - id: github.com/cloud-native-toolkit/terraform-ibm-iam-service-authorization
        name: ibm-iam-service-authorization
        alias: service-authorization
        type: terraform
        description: Module to create an authorization policy that will allow one service to access another.
        tags:
          - iam
          - service
          - authorization
          - policy
        versions:
          - platforms: []
            dependencies:
              - id: source_resource
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#ibm-service
                optional: true
              - id: source_resource_group
                refs: []
                optional: true
              - id: target_resource
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#ibm-service
                optional: true
              - id: target_resource_group
                refs: []
                optional: true
            variables:
              - name: source_service_name
                moduleRef:
                  id: source_resource
                  output: service
                type: string
                description: The name of the service that will be authorized to access the target service. This value is the name of the service as it appears in the service catalog.
              - name: source_resource_instance_id
                moduleRef:
                  id: source_resource
                  output: id
                optional: true
                type: string
                description: The instance id of the source service. This value is required if the authorization will be scoped to a specific service instance. If not provided the authorization will be scoped to the resource group or the account.
                default: "null"
              - name: source_resource_type
                moduleRef:
                  id: source_resource
                  output: type
                optional: true
                type: string
                description: The resource type of the source service. This value is used to define sub-types of services in the service catalog (e.g. flow-log-collector).
                default: "null"
              - name: source_resource_group_id
                moduleRef:
                  id: source_resource_group
                  output: id
                optional: true
                type: string
                description: The id of the resource group that will be used to scope which source services will be authorized to access the target service. If not provided the authorization will be scoped to the entire account. This value is superseded by the source_resource_instance_id
                default: "null"
              - name: provision
                moduleRef:
                  id: source_resource_group
                  output: provision
                optional: true
                type: bool
                description: Flag indicating that the service authorization should be created
                default: true
              - name: target_service_name
                moduleRef:
                  id: target_resource
                  output: service
                type: string
                description: The name of the service to which the source service will be authorization to access. This value is the name of the service as it appears in the service catalog.
              - name: target_resource_instance_id
                moduleRef:
                  id: target_resource
                  output: id
                optional: true
                type: string
                description: The instance id of the target service. This value is required if the authorization will be scoped to a specific service instance. If not provided the authorization will be scoped to the resource group or the account.
                default: "null"
              - name: target_resource_type
                moduleRef:
                  id: target_resource
                  output: type
                optional: true
                type: string
                description: The resource type of the target service. This value is used to define sub-types of services in the service catalog (e.g. flow-log-collector).
                default: "null"
              - name: target_resource_group_id
                moduleRef:
                  id: target_resource_group
                  output: id
                optional: true
                type: string
                description: The id of the resource group that will be used to scope which services the source services will be authorized to access. If not provided the authorization will be scoped to the entire account. This value is superseded by the target_resource_instance_id
                default: "null"
              - name: roles
                type: list(string)
                description: A list of roles that should be granted on the target service (e.g. Reader, Writer).
                default: '[Reader]'
                optional: true
              - name: source_service_account
                type: string
                description: GUID of the account where the source service is provisioned. This is required to authorize service access across accounts.
                default: "null"
                optional: true
              - name: source_instance
                type: bool
                description: Flag indicating that the source instance id should be mapped
                default: false
                optional: true
              - name: target_instance
                type: bool
                description: Flag indicating that the target instance id should be mapped
                default: false
                optional: true
            version: v1.2.0
            outputs:
              - name: id
                description: The ID of the authorization policy ID
          - platforms: []
            dependencies:
              - id: source_resource
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#ibm-service
                optional: true
              - id: source_resource_group
                refs: []
                optional: true
              - id: target_resource
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#ibm-service
                optional: true
              - id: target_resource_group
                refs: []
                optional: true
            variables:
              - name: source_service_name
                moduleRef:
                  id: source_resource
                  output: service
                type: string
                description: The name of the service that will be authorized to access the target service. This value is the name of the service as it appears in the service catalog.
              - name: source_resource_instance_id
                moduleRef:
                  id: source_resource
                  output: id
                optional: true
                type: string
                description: The instance id of the source service. This value is required if the authorization will be scoped to a specific service instance. If not provided the authorization will be scoped to the resource group or the account.
                default: "null"
              - name: source_resource_type
                moduleRef:
                  id: source_resource
                  output: type
                optional: true
                type: string
                description: The resource type of the source service. This value is used to define sub-types of services in the service catalog (e.g. flow-log-collector).
                default: "null"
              - name: source_resource_group_id
                moduleRef:
                  id: source_resource_group
                  output: id
                optional: true
                type: string
                description: The id of the resource group that will be used to scope which source services will be authorized to access the target service. If not provided the authorization will be scoped to the entire account. This value is superseded by the source_resource_instance_id
                default: "null"
              - name: provision
                moduleRef:
                  id: source_resource_group
                  output: provision
                optional: true
                type: bool
                description: Flag indicating that the service authorization should be created
                default: true
              - name: target_service_name
                moduleRef:
                  id: target_resource
                  output: service
                type: string
                description: The name of the service to which the source service will be authorization to access. This value is the name of the service as it appears in the service catalog.
              - name: target_resource_instance_id
                moduleRef:
                  id: target_resource
                  output: id
                optional: true
                type: string
                description: The instance id of the target service. This value is required if the authorization will be scoped to a specific service instance. If not provided the authorization will be scoped to the resource group or the account.
                default: "null"
              - name: target_resource_type
                moduleRef:
                  id: target_resource
                  output: type
                optional: true
                type: string
                description: The resource type of the target service. This value is used to define sub-types of services in the service catalog (e.g. flow-log-collector).
                default: "null"
              - name: target_resource_group_id
                moduleRef:
                  id: target_resource_group
                  output: id
                optional: true
                type: string
                description: The id of the resource group that will be used to scope which services the source services will be authorized to access. If not provided the authorization will be scoped to the entire account. This value is superseded by the target_resource_instance_id
                default: "null"
              - name: roles
                type: list(string)
                description: A list of roles that should be granted on the target service (e.g. Reader, Writer).
                default: '[Reader]'
                optional: true
              - name: source_service_account
                type: string
                description: GUID of the account where the source service is provisioned. This is required to authorize service access across accounts.
                default: "null"
                optional: true
            version: v1.1.2
            outputs:
              - name: id
                description: The ID of the authorization policy ID
          - platforms: []
            dependencies:
              - id: source_resource
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#ibm-service
                optional: true
              - id: source_resource_group
                refs: []
                optional: true
              - id: target_resource
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#ibm-service
                optional: true
              - id: target_resource_group
                refs: []
                optional: true
            variables:
              - name: source_service_name
                moduleRef:
                  id: source_resource
                  output: service
                type: string
                description: The name of the service that will be authorized to access the target service. This value is the name of the service as it appears in the service catalog.
              - name: source_resource_instance_id
                moduleRef:
                  id: source_resource
                  output: id
                optional: true
                type: string
                description: The instance id of the source service. This value is required if the authorization will be scoped to a specific service instance. If not provided the authorization will be scoped to the resource group or the account.
                default: "null"
              - name: source_resource_type
                moduleRef:
                  id: source_resource
                  output: type
                optional: true
                type: string
                description: The resource type of the source service. This value is used to define sub-types of services in the service catalog (e.g. flow-log-collector).
                default: "null"
              - name: source_resource_group_id
                moduleRef:
                  id: source_resource_group
                  output: id
                optional: true
                type: string
                description: The id of the resource group that will be used to scope which source services will be authorized to access the target service. If not provided the authorization will be scoped to the entire account. This value is superseded by the source_resource_instance_id
                default: "null"
              - name: provision
                moduleRef:
                  id: source_resource_group
                  output: provision
                optional: true
                type: bool
                description: Flag indicating that the service authorization should be created
                default: true
              - name: target_service_name
                moduleRef:
                  id: target_resource
                  output: service
                type: string
                description: The name of the service to which the source service will be authorization to access. This value is the name of the service as it appears in the service catalog.
              - name: target_resource_instance_id
                moduleRef:
                  id: target_resource
                  output: id
                optional: true
                type: string
                description: The instance id of the target service. This value is required if the authorization will be scoped to a specific service instance. If not provided the authorization will be scoped to the resource group or the account.
                default: "null"
              - name: target_resource_type
                moduleRef:
                  id: target_resource
                  output: type
                optional: true
                type: string
                description: The resource type of the target service. This value is used to define sub-types of services in the service catalog (e.g. flow-log-collector).
                default: "null"
              - name: target_resource_group_id
                moduleRef:
                  id: target_resource_group
                  output: id
                optional: true
                type: string
                description: The id of the resource group that will be used to scope which services the source services will be authorized to access. If not provided the authorization will be scoped to the entire account. This value is superseded by the target_resource_instance_id
                default: "null"
              - name: roles
                type: list(string)
                description: A list of roles that should be granted on the target service (e.g. Reader, Writer).
                default: '[Reader]'
                optional: true
              - name: source_service_account
                type: string
                description: GUID of the account where the source service is provisioned. This is required to authorize service access across accounts.
                default: "null"
                optional: true
            version: v1.1.1
            outputs:
              - name: iam_authorization_policy_id
                description: The ID of the authorization policy ID
          - platforms: []
            dependencies:
              - id: source_resource
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#ibm-service
                optional: true
              - id: source_resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
                optional: true
              - id: target_resource
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#ibm-service
                optional: true
              - id: target_resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: source_service_name
                moduleRef:
                  id: source_resource
                  output: service
                type: string
                description: The name of the service that will be authorized to access the target service. This value is the name of the service as it appears in the service catalog.
              - name: source_resource_instance_id
                moduleRef:
                  id: source_resource
                  output: id
                optional: true
                type: string
                description: The instance id of the source service. This value is required if the authorization will be scoped to a specific service instance. If not provided the authorization will be scoped to the resource group or the account.
                default: "null"
              - name: source_resource_type
                moduleRef:
                  id: source_resource
                  output: type
                optional: true
                type: string
                description: The resource type of the source service. This value is used to define sub-types of services in the service catalog (e.g. flow-log-collector).
                default: "null"
              - name: source_resource_group_id
                moduleRef:
                  id: source_resource_group
                  output: id
                optional: true
                type: string
                description: The id of the resource group that will be used to scope which source services will be authorized to access the target service. If not provided the authorization will be scoped to the entire account. This value is superseded by the source_resource_instance_id
                default: "null"
              - name: provision
                moduleRef:
                  id: source_resource_group
                  output: provision
                optional: true
                type: bool
                description: Flag indicating that the service authorization should be created
                default: true
              - name: target_service_name
                moduleRef:
                  id: target_resource
                  output: service
                type: string
                description: The name of the service to which the source service will be authorization to access. This value is the name of the service as it appears in the service catalog.
              - name: target_resource_instance_id
                moduleRef:
                  id: target_resource
                  output: id
                optional: true
                type: string
                description: The instance id of the target service. This value is required if the authorization will be scoped to a specific service instance. If not provided the authorization will be scoped to the resource group or the account.
                default: "null"
              - name: target_resource_type
                moduleRef:
                  id: target_resource
                  output: type
                optional: true
                type: string
                description: The resource type of the target service. This value is used to define sub-types of services in the service catalog (e.g. flow-log-collector).
                default: "null"
              - name: target_resource_group_id
                moduleRef:
                  id: target_resource_group
                  output: id
                optional: true
                type: string
                description: The id of the resource group that will be used to scope which services the source services will be authorized to access. If not provided the authorization will be scoped to the entire account. This value is superseded by the target_resource_instance_id
                default: "null"
              - name: roles
                type: list(string)
                description: A list of roles that should be granted on the target service (e.g. Reader, Writer).
                default: '[Reader]'
                optional: true
              - name: source_service_account
                type: string
                description: GUID of the account where the source service is provisioned. This is required to authorize service access across accounts.
                default: "null"
                optional: true
            version: v1.1.0
            outputs:
              - name: iam_authorization_policy_id
                description: The ID of the authorization policy ID
          - platforms: []
            dependencies:
              - id: source_resource
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#ibm-service
                optional: true
              - id: source_resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
                optional: true
              - id: target_resource
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#ibm-service
                optional: true
              - id: target_resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: source_service_name
                moduleRef:
                  id: source_resource
                  output: service
                type: string
                description: The name of the service that will be authorized to access the target service. This value is the name of the service as it appears in the service catalog.
              - name: source_resource_instance_id
                moduleRef:
                  id: source_resource
                  output: id
                optional: true
                type: string
                description: The instance id of the source service. This value is required if the authorization will be scoped to a specific service instance. If not provided the authorization will be scoped to the resource group or the account.
                default: "null"
              - name: source_resource_type
                moduleRef:
                  id: source_resource
                  output: type
                optional: true
                type: string
                description: The resource type of the source service. This value is used to define sub-types of services in the service catalog (e.g. flow-log-collector).
                default: "null"
              - name: source_resource_group_id
                moduleRef:
                  id: source_resource_group
                  output: id
                optional: true
                type: string
                description: The id of the resource group that will be used to scope which source services will be authorized to access the target service. If not provided the authorization will be scoped to the entire account. This value is superseded by the source_resource_instance_id
                default: "null"
              - name: target_service_name
                moduleRef:
                  id: target_resource
                  output: service
                type: string
                description: The name of the service to which the source service will be authorization to access. This value is the name of the service as it appears in the service catalog.
              - name: target_resource_instance_id
                moduleRef:
                  id: target_resource
                  output: id
                optional: true
                type: string
                description: The instance id of the target service. This value is required if the authorization will be scoped to a specific service instance. If not provided the authorization will be scoped to the resource group or the account.
                default: "null"
              - name: target_resource_type
                moduleRef:
                  id: target_resource
                  output: type
                optional: true
                type: string
                description: The resource type of the target service. This value is used to define sub-types of services in the service catalog (e.g. flow-log-collector).
                default: "null"
              - name: target_resource_group_id
                moduleRef:
                  id: target_resource_group
                  output: id
                optional: true
                type: string
                description: The id of the resource group that will be used to scope which services the source services will be authorized to access. If not provided the authorization will be scoped to the entire account. This value is superseded by the target_resource_instance_id
                default: "null"
              - name: roles
                type: list(string)
                description: A list of roles that should be granted on the target service (e.g. Reader, Writer).
                default: '[Reader]'
                optional: true
              - name: source_service_account
                type: string
                description: GUID of the account where the source service is provisioned. This is required to authorize service access across accounts.
                default: "null"
                optional: true
            version: v1.0.1
            outputs:
              - name: iam_authorization_policy_id
                description: The ID of the authorization policy ID
          - platforms: []
            dependencies:
              - id: source_resource
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#ibm-service
                optional: true
              - id: source_resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
                optional: true
              - id: target_resource
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#ibm-service
                optional: true
              - id: target_resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: source_service_name
                moduleRef:
                  id: source_resource
                  output: service
                type: string
                description: The name of the service that will be authorized to access the target service. This value is the name of the service as it appears in the service catalog.
              - name: source_resource_instance_id
                moduleRef:
                  id: source_resource
                  output: id
                optional: true
                type: string
                description: The instance id of the source service. This value is required if the authorization will be scoped to a specific service instance. If not provided the authorization will be scoped to the resource group or the account.
                default: "null"
              - name: source_resource_type
                moduleRef:
                  id: source_resource
                  output: type
                optional: true
                type: string
                description: The resource type of the source service. This value is used to define sub-types of services in the service catalog (e.g. flow-log-collector).
                default: "null"
              - name: source_resource_group_id
                moduleRef:
                  id: source_resource_group
                  output: id
                optional: true
                type: string
                description: The id of the resource group that will be used to scope which source services will be authorized to access the target service. If not provided the authorization will be scoped to the entire account. This value is superseded by the source_resource_instance_id
                default: "null"
              - name: target_service_name
                moduleRef:
                  id: target_resource
                  output: service
                type: string
                description: The name of the service to which the source service will be authorization to access. This value is the name of the service as it appears in the service catalog.
              - name: target_resource_instance_id
                moduleRef:
                  id: target_resource
                  output: id
                optional: true
                type: string
                description: The instance id of the target service. This value is required if the authorization will be scoped to a specific service instance. If not provided the authorization will be scoped to the resource group or the account.
                default: "null"
              - name: target_resource_type
                moduleRef:
                  id: target_resource
                  output: type
                optional: true
                type: string
                description: The resource type of the target service. This value is used to define sub-types of services in the service catalog (e.g. flow-log-collector).
                default: "null"
              - name: target_resource_group_id
                moduleRef:
                  id: target_resource_group
                  output: id
                optional: true
                type: string
                description: The id of the resource group that will be used to scope which services the source services will be authorized to access. If not provided the authorization will be scoped to the entire account. This value is superseded by the target_resource_instance_id
                default: "null"
              - name: roles
                type: list(string)
                description: A list of roles that should be granted on the target service (e.g. Reader, Writer).
                default: '[Reader]'
                optional: true
              - name: source_service_account
                type: string
                description: GUID of the account where the source service is provisioned. This is required to authorize service access across accounts.
                default: "null"
                optional: true
            version: v1.0.0
            outputs:
              - name: iam_authorization_policy_id
                description: The ID of the authorization policy ID
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
  - category: image-registry
    categoryName: Image Registry
    selection: single
    modules:
      - id: github.com/cloud-native-toolkit/terraform-ibm-container-registry
        name: ibm-container-registry
        alias: registry
        type: terraform
        description: Module to set up the IBM Container Registry, including creating a namespace and upgrading the plan
        tags:
          - tools
          - devops
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: registry_user
                scope: ignore
                type: string
                description: The username to authenticate to the IBM Container Registry
                default: iamapikey
                optional: true
              - name: registry_password
                scope: ignore
                type: string
                description: The password (API key) to authenticate to the IBM Container Registry. If not provided the value will default to `var.ibmcloud_api_key`
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The region for the image registry been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: upgrade_plan
                scope: global
                type: bool
                description: Flag indicating that the container registry plan should be upgraded from Free to Standard
                default: true
                optional: true
              - name: registry_namespace
                type: string
                description: The namespace that will be created in the IBM Cloud image registry. If not provided the value will default to the resource group
                default: ""
                optional: true
            version: v1.1.0
            outputs:
              - name: id
                description: The id of the provisioned redis instance
              - name: name
                description: The name of the container registry service
              - name: crn
                description: The crn of the contaienr registry service
              - name: location
                description: The location of the provisioned redis instance
              - name: service
                description: The name of the key provisioned for the redis instance
              - name: label
                description: The label for the container registry instance
              - name: registry_server
                description: The server for the container registry endpoint used in `docker login` command
              - name: registry_user
                description: The username for the container registry endpoint
              - name: registry_password
                description: The password for the container registry endpoint
              - name: registry_namespace
                description: The namespace for the container registry endpoint
              - name: registry_url
                description: The url of the container registry server that can be accessed by a browser to manage images in the registry
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: registry_user
                scope: ignore
                type: string
                description: The username to authenticate to the IBM Container Registry
                default: iamapikey
                optional: true
              - name: registry_password
                scope: ignore
                type: string
                description: The password (API key) to authenticate to the IBM Container Registry. If not provided the value will default to `var.ibmcloud_api_key`
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The region for the image registry been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: upgrade_plan
                scope: global
                type: bool
                description: Flag indicating that the container registry plan should be upgraded from Free to Standard
                default: true
                optional: true
              - name: registry_namespace
                type: string
                description: The namespace that will be created in the IBM Cloud image registry. If not provided the value will default to the resource group
                default: ""
                optional: true
            version: v1.0.0
            outputs:
              - name: id
                description: The id of the provisioned redis instance
              - name: name
                description: The name of the container registry service
              - name: crn
                description: The crn of the contaienr registry service
              - name: location
                description: The location of the provisioned redis instance
              - name: service
                description: The name of the key provisioned for the redis instance
              - name: label
                description: The label for the container registry instance
              - name: registry_url
                description: The url for the container registry endpoint
              - name: registry_user
                description: The username for the container registry endpoint
              - name: registry_password
                description: The password for the container registry endpoint
              - name: registry_namespace
                description: The namespace for the container registry endpoint
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-image-registry
        name: ibm-image-registry
        alias: registry
        type: terraform
        description: Module to set up a namespace in the IBM Container Registry and configure the cluster
        tags:
          - tools
          - devops
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: registry_namespace
                scope: global
                type: string
                description: The namespace that will be created in the IBM Cloud image registry. If not provided the value will default to the resource group
                default: ""
                optional: true
              - name: registry_user
                scope: ignore
                type: string
                description: The username to authenticate to the IBM Container Registry
                default: iamapikey
                optional: true
              - name: registry_password
                scope: ignore
                type: string
                description: The password (API key) to authenticate to the IBM Container Registry. If not provided the value will default to `var.ibmcloud_api_key`
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The region for the image registry been installed.
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: apply
                scope: ignore
                type: bool
                description: Flag indicating that the module should be applied
                default: true
                optional: true
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the registry url should be created with private endpoints
                default: "true"
                optional: true
            version: v2.0.3
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: registry_namespace
                scope: global
                type: string
                description: The namespace that will be created in the IBM Cloud image registry. If not provided the value will default to the resource group
                default: ""
                optional: true
              - name: registry_user
                scope: ignore
                type: string
                description: The username to authenticate to the IBM Container Registry
                default: iamapikey
                optional: true
              - name: registry_password
                scope: ignore
                type: string
                description: The password (API key) to authenticate to the IBM Container Registry. If not provided the value will default to `var.ibmcloud_api_key`
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The region for the image registry been installed.
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: apply
                scope: ignore
                type: bool
                description: Flag indicating that the module should be applied
                default: true
                optional: true
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the registry url should be created with private endpoints
                default: "true"
                optional: true
            version: v2.0.2
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: registry_namespace
                scope: global
                type: string
                description: The namespace that will be created in the IBM Cloud image registry. If not provided the value will default to the resource group
                default: ""
                optional: true
              - name: registry_user
                scope: ignore
                type: string
                description: The username to authenticate to the IBM Container Registry
                default: iamapikey
                optional: true
              - name: registry_password
                scope: ignore
                type: string
                description: The password (API key) to authenticate to the IBM Container Registry. If not provided the value will default to `var.ibmcloud_api_key`
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The region for the image registry been installed.
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: apply
                scope: ignore
                type: bool
                description: Flag indicating that the module should be applied
                default: true
                optional: true
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the registry url should be created with private endpoints
                default: "true"
                optional: true
            version: v2.0.1
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: registry_namespace
                scope: global
                type: string
                description: The namespace that will be created in the IBM Cloud image registry. If not provided the value will default to the resource group
                default: ""
                optional: true
              - name: registry_user
                scope: ignore
                type: string
                description: The username to authenticate to the IBM Container Registry
                default: iamapikey
                optional: true
              - name: registry_password
                scope: ignore
                type: string
                description: The password (API key) to authenticate to the IBM Container Registry. If not provided the value will default to `var.ibmcloud_api_key`
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: The region for the image registry been installed.
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: apply
                scope: ignore
                type: bool
                description: Flag indicating that the module should be applied
                default: true
                optional: true
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the registry url should be created with private endpoints
                default: "true"
                optional: true
            version: v2.0.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: registry_namespace
                scope: global
                type: string
                description: The namespace that will be created in the IBM Cloud image registry. If not provided the value will default to the resource group
                default: ""
                optional: true
              - name: registry_user
                scope: ignore
                type: string
                description: The username to authenticate to the IBM Container Registry
                default: iamapikey
                optional: true
              - name: registry_password
                scope: ignore
                type: string
                description: The password (API key) to authenticate to the IBM Container Registry. If not provided the value will default to `var.ibmcloud_api_key`
                default: ""
                optional: true
              - name: cluster_region
                scope: global
                alias: region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: apply
                scope: ignore
                type: bool
                description: Flag indicating that the module should be applied
                default: true
                optional: true
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the registru url should be created with private endpoints
                default: "true"
                optional: true
            version: v1.5.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: registry_namespace
                scope: global
                type: string
                description: The namespace that will be created in the IBM Cloud image registry. If not provided the value will default to the resource group
                default: ""
                optional: true
              - name: registry_user
                scope: ignore
                type: string
                description: The username to authenticate to the IBM Container Registry
                default: iamapikey
                optional: true
              - name: registry_password
                scope: ignore
                type: string
                description: The password (API key) to authenticate to the IBM Container Registry. If not provided the value will default to `var.ibmcloud_api_key`
                default: ""
                optional: true
              - name: cluster_region
                scope: global
                alias: region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: apply
                scope: ignore
                type: bool
                description: Flag indicating that the module should be applied
                default: true
                optional: true
            version: v1.4.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: registry_namespace
                scope: global
                type: string
                description: The namespace that will be created in the IBM Cloud image registry. If not provided the value will default to the resource group
              - name: registry_user
                scope: ignore
                type: string
                description: The username to authenticate to the IBM Container Registry
                default: iamapikey
                optional: true
              - name: registry_password
                scope: ignore
                type: string
                description: The password (API key) to authenticate to the IBM Container Registry. If not provided the value will default to `var.ibmcloud_api_key`
              - name: cluster_region
                scope: global
                alias: region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: apply
                scope: ignore
                type: bool
                description: Flag indicating that the module should be applied
                default: true
                optional: true
            version: v1.3.6
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: registry_namespace
                scope: global
                type: string
                description: The namespace that will be created in the IBM Cloud image registry. If not provided the value will default to the resource group
              - name: registry_user
                scope: ignore
                type: string
                description: The username to authenticate to the IBM Container Registry
                default: iamapikey
                optional: true
              - name: registry_password
                scope: ignore
                type: string
                description: The password (API key) to authenticate to the IBM Container Registry. If not provided the value will default to `var.ibmcloud_api_key`
              - name: cluster_region
                scope: global
                alias: region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: apply
                scope: ignore
                type: bool
                description: Flag indicating that the module should be applied
                default: true
                optional: true
            version: v1.3.5
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: registry_namespace
                scope: global
                type: string
                description: The namespace that will be created in the IBM Cloud image registry. If not provided the value will default to the resource group
              - name: registry_user
                scope: ignore
                type: string
                description: The username to authenticate to the IBM Container Registry
                default: iamapikey
                optional: true
              - name: registry_password
                scope: ignore
                type: string
                description: The password (API key) to authenticate to the IBM Container Registry. If not provided the value will default to `var.ibmcloud_api_key`
              - name: cluster_region
                scope: global
                alias: region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: apply
                scope: module
                type: bool
                description: Flag indicating that the module should be applied
                default: true
                optional: true
            version: v1.3.4
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: resource_group_name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: registry_namespace
                type: string
                description: The namespace that will be created in the IBM Cloud image registry. If not provided the value will default to the resource group
                optional: true
              - name: registry_user
                type: string
                description: The username to authenticate to the IBM Container Registry
                optional: true
              - name: registry_password
                type: string
                description: The password (API key) to authenticate to the IBM Container Registry. If not provided the value will default to `var.ibmcloud_api_key`
                optional: true
              - name: cluster_region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                type: string
                description: The IBM Cloud api token
              - name: gitops_dir
                type: string
                description: The directory where the gitops configuration should be stored
                optional: true
              - name: cluster_type_code
                type: string
                description: The cluster_type of the cluster
                optional: true
              - name: apply
                type: bool
                description: Flag indicating that the module should be applied
                optional: true
            version: v1.3.3
            outputs:
              - name: output "my
                description: output "my
              - name: 'output" { #  description = "Description of my'
                description: 'output" { #  description = "Description of my'
              - name: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
                description: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: resource_group_name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: registry_namespace
                type: string
                description: The namespace that will be created in the IBM Cloud image registry. If not provided the value will default to the resource group
                optional: true
              - name: registry_user
                type: string
                description: The username to authenticate to the IBM Container Registry
                optional: true
              - name: registry_password
                type: string
                description: The password (API key) to authenticate to the IBM Container Registry. If not provided the value will default to `var.ibmcloud_api_key`
                optional: true
              - name: cluster_region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                type: string
                description: The IBM Cloud api token
              - name: gitops_dir
                type: string
                description: The directory where the gitops configuration should be stored
                optional: true
              - name: cluster_type_code
                type: string
                description: The cluster_type of the cluster
                optional: true
              - name: apply
                type: bool
                description: Flag indicating that the module should be applied
                optional: true
            version: v1.3.2
            outputs:
              - name: output "my
                description: output "my
              - name: 'output" { #  description = "Description of my'
                description: 'output" { #  description = "Description of my'
              - name: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
                description: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: resource_group_name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: registry_namespace
                type: string
                description: The namespace that will be created in the IBM Cloud image registry. If not provided the value will default to the resource group
                optional: true
              - name: registry_user
                type: string
                description: The username to authenticate to the IBM Container Registry
                optional: true
              - name: registry_password
                type: string
                description: The password (API key) to authenticate to the IBM Container Registry. If not provided the value will default to `var.ibmcloud_api_key`
                optional: true
              - name: cluster_region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                type: string
                description: The IBM Cloud api token
              - name: gitops_dir
                type: string
                description: The directory where the gitops configuration should be stored
                optional: true
              - name: cluster_type_code
                type: string
                description: The cluster_type of the cluster
                optional: true
              - name: apply
                type: bool
                description: Flag indicating that the module should be applied
                optional: true
            version: v1.3.1
            outputs:
              - name: output "my
                description: output "my
              - name: 'output" { #  description = "Description of my'
                description: 'output" { #  description = "Description of my'
              - name: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
                description: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: resource_group_name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: registry_namespace
                type: string
                description: The namespace that will be created in the IBM Cloud image registry. If not provided the value will default to the resource group
                optional: true
              - name: registry_user
                type: string
                description: The username to authenticate to the IBM Container Registry
                optional: true
              - name: registry_password
                type: string
                description: The password (API key) to authenticate to the IBM Container Registry. If not provided the value will default to `var.ibmcloud_api_key`
                optional: true
              - name: cluster_region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                type: string
                description: The IBM Cloud api token
              - name: gitops_dir
                type: string
                description: The directory where the gitops configuration should be stored
                optional: true
              - name: cluster_type_code
                type: string
                description: The cluster_type of the cluster
                optional: true
              - name: apply
                type: bool
                description: Flag indicating that the module should be applied
                optional: true
            version: v1.3.0
            outputs:
              - name: output "my
                description: output "my
              - name: 'output" { #  description = "Description of my'
                description: 'output" { #  description = "Description of my'
              - name: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
                description: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: resource_group_name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: registry_namespace
                type: string
                description: The namespace that will be created in the IBM Cloud image registry. If not provided the value will default to the resource group
                optional: true
              - name: registry_user
                type: string
                description: The username to authenticate to the IBM Container Registry
                optional: true
              - name: registry_password
                type: string
                description: The password (API key) to authenticate to the IBM Container Registry. If not provided the value will default to `var.ibmcloud_api_key`
                optional: true
              - name: cluster_region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                type: string
                description: The IBM Cloud api token
              - name: gitops_dir
                type: string
                description: The directory where the gitops configuration should be stored
                optional: true
              - name: cluster_type_code
                type: string
                description: The cluster_type of the cluster
                optional: true
              - name: apply
                type: bool
                description: Flag indicating that the module should be applied
                optional: true
            version: v1.2.3
            outputs:
              - name: output "my
                description: output "my
              - name: 'output" { #  description = "Description of my'
                description: 'output" { #  description = "Description of my'
              - name: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
                description: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ocp-image-registry
        name: ocp-image-registry
        alias: registry
        type: terraform
        provider: ocp
        description: Module to set up the internal OCP Image Registry in a cluster
        tags:
          - tools
          - devops
          - ocp
          - image registry
        versions:
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: config_type_code
                moduleRef:
                  id: cluster
                  output: type_code
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
              - name: apply
                scope: ignore
                type: bool
                description: Flag indicating that the module should be applied
                default: true
                optional: true
              - name: cluster_type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
            version: v1.4.0
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: config_type_code
                moduleRef:
                  id: cluster
                  output: type_code
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
              - name: apply
                scope: ignore
                type: bool
                description: Flag indicating that the module should be applied
                default: true
                optional: true
              - name: cluster_type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
            version: v1.3.4
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: config_type_code
                moduleRef:
                  id: cluster
                  output: type_code
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
              - name: apply
                scope: ignore
                type: bool
                description: Flag indicating that the module should be applied
                default: true
                optional: true
              - name: cluster_type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
            version: v1.3.3
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: config_type_code
                moduleRef:
                  id: cluster
                  output: type_code
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
              - name: apply
                scope: ignore
                type: bool
                description: Flag indicating that the module should be applied
                default: true
                optional: true
              - name: cluster_type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
            version: v1.3.2
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: config_type_code
                moduleRef:
                  id: cluster
                  output: type_code
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
              - name: apply
                scope: global
                type: bool
                description: Flag indicating that the module should be applied
                default: true
                optional: true
              - name: cluster_type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
            version: v1.3.1
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                type: string
                description: The directory where the gitops configuration should be stored
                optional: true
              - name: cluster_type_code
                type: string
                description: The cluster_type of the cluster
                optional: true
              - name: apply
                type: bool
                description: Flag indicating that the module should be applied
                optional: true
            version: v1.3.0
            outputs:
              - name: output "my
                description: output "my
              - name: 'output" { #  description = "Description of my'
                description: 'output" { #  description = "Description of my'
              - name: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
                description: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                type: string
                description: The directory where the gitops configuration should be stored
                optional: true
              - name: cluster_type_code
                type: string
                description: The cluster_type of the cluster
                optional: true
              - name: apply
                type: bool
                description: Flag indicating that the module should be applied
                optional: true
            version: v1.2.2
            outputs:
              - name: output "my
                description: output "my
              - name: 'output" { #  description = "Description of my'
                description: 'output" { #  description = "Description of my'
              - name: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
                description: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                type: string
                description: The directory where the gitops configuration should be stored
                optional: true
              - name: cluster_type_code
                type: string
                description: The cluster_type of the cluster
                optional: true
              - name: apply
                type: bool
                description: Flag indicating that the module should be applied
                optional: true
            version: v1.2.1
            outputs:
              - name: output "my
                description: output "my
              - name: 'output" { #  description = "Description of my'
                description: 'output" { #  description = "Description of my'
              - name: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
                description: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
      - id: github.com/cloud-native-toolkit/terraform-k8s-image-registry
        name: k8s-image-registry
        alias: registry
        type: terraform
        description: Sets up an external image registry for use within the cluster
        tags:
          - tools
          - devops
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
              - name: registry_namespace
                scope: global
                type: string
                description: The namespace in the image registry where images will be stored. This value can contain slashes.
              - name: registry_host
                scope: global
                type: string
                description: The host name of the image registry
              - name: registry_url
                scope: global
                type: string
                description: The public url of the image registry
              - name: registry_user
                scope: global
                type: string
                description: The username for the image registry
              - name: registry_password
                scope: global
                type: string
                description: The password for the image registry
              - name: apply
                scope: ignore
                type: bool
                description: Flag indicating that the module should be applied
                default: true
                optional: true
            version: v1.1.7
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
              - name: registry_namespace
                scope: global
                type: string
                description: The namespace in the image registry where images will be stored. This value can contain slashes.
              - name: registry_host
                scope: global
                type: string
                description: The host name of the image registry
              - name: registry_url
                scope: global
                type: string
                description: The public url of the image registry
              - name: registry_user
                scope: global
                type: string
                description: The username for the image registry
              - name: registry_password
                scope: global
                type: string
                description: The password for the image registry
              - name: apply
                scope: ignore
                type: bool
                description: Flag indicating that the module should be applied
                default: true
                optional: true
            version: v1.1.6
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                optional: true
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                type: string
                description: The directory where the gitops configuration should be stored
                optional: true
              - name: registry_namespace
                type: string
                description: The namespace in the image registry where images will be stored. This value can contain slashes.
                optional: true
              - name: registry_host
                type: string
                description: The host name of the image registry
                optional: true
              - name: registry_url
                type: string
                description: The public url of the image registry
                optional: true
              - name: registry_user
                type: string
                description: The username for the image registry
                optional: true
              - name: registry_password
                type: string
                description: The password for the image registry
                optional: true
              - name: apply
                type: bool
                description: Flag indicating that the module should be applied
                optional: true
            version: v1.1.5
            outputs:
              - name: output "my
                description: output "my
              - name: 'output" { #  description = "Description of my'
                description: 'output" { #  description = "Description of my'
              - name: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
                description: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                type: string
                description: The directory where the gitops configuration should be stored
                optional: true
              - name: registry_namespace
                type: string
                description: The namespace in the image registry where images will be stored. This value can contain slashes.
                optional: true
              - name: registry_host
                type: string
                description: The host name of the image registry
                optional: true
              - name: registry_url
                type: string
                description: The public url of the image registry
                optional: true
              - name: registry_user
                type: string
                description: The username for the image registry
                optional: true
              - name: registry_password
                type: string
                description: The password for the image registry
                optional: true
              - name: cluster_type_code
                type: string
                description: The cluster_type of the cluster
                optional: true
              - name: apply
                type: bool
                description: Flag indicating that the module should be applied
                optional: true
            version: v1.1.4
            outputs:
              - name: output "my
                description: output "my
              - name: 'output" { #  description = "Description of my'
                description: 'output" { #  description = "Description of my'
              - name: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
                description: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
        provider: k8s
  - category: infrastructure
    categoryName: Infrastructure
    selection: indirect
    modules:
      - id: github.com/cloud-native-toolkit/terraform-k8s-namespace
        name: namespace
        description: Creates a namespace in the cluster
        platforms:
          - kubernetes
          - ocp3
          - ocp4
        tags:
          - infrastructure
          - namespace
        versions:
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-iks-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
            variables:
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: name
                scope: module
                type: string
                description: The namespace that should be created
              - name: create_operator_group
                type: bool
                description: Flag indicating that an operator group should be created in the namespace
                default: true
                optional: true
            version: v3.1.3
            outputs:
              - name: name
                description: Namespace name
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
            variables:
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: name
                scope: module
                type: string
                description: The namespace that should be created
              - name: create_operator_group
                type: bool
                description: Flag indicating that an operator group should be created in the namespace
                default: true
                optional: true
            version: v3.1.2
            outputs:
              - name: name
                description: Namespace name
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate for the cluster
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: The namespace that should be created
              - name: create_operator_group
                type: bool
                description: Flag indicating that an operator group should be created in the namespace
                default: true
                optional: true
            version: v2.8.0
            outputs:
              - name: name
                description: Namespace name
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
            variables:
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: name
                scope: module
                type: string
                description: The namespace that should be created
              - name: create_operator_group
                type: bool
                description: Flag indicating that an operator group should be created in the namespace
                default: true
                optional: true
            version: v3.1.1
            outputs:
              - name: name
                description: Namespace name
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
            variables:
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: name
                scope: module
                type: string
                description: The namespace that should be created
              - name: create_operator_group
                type: bool
                description: Flag indicating that an operator group should be created in the namespace
                default: true
                optional: true
            version: v3.1.0
            outputs:
              - name: name
                description: Namespace name
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
            variables:
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: name
                scope: module
                type: string
                description: The namespace that should be created
            version: v3.0.2
            outputs:
              - name: name
                description: Namespace name
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
            variables:
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: name
                scope: module
                type: string
                description: The namespace that should be created
            version: v3.0.1
            outputs:
              - name: name
                description: Namespace name
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
              - name: name
                scope: module
                type: string
                description: The namespace that should be created
            version: v3.0.0
            outputs:
              - name: name
                description: Namespace name
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate for the cluster
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: The namespace that should be created
            version: v2.7.3
            outputs:
              - name: name
                description: Namespace name
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate for the cluster
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: The namespace that should be created
            version: v2.7.2
            outputs:
              - name: name
                description: Namespace name
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate for the cluster
              - name: name
                scope: module
                type: string
                description: The namespace that should be created
            version: v2.7.1
            outputs:
              - name: name
                description: Namespace name
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate for the cluster
              - name: name
                scope: module
                type: string
                description: The namespace that should be created
            version: v2.7.0
            outputs:
              - name: name
                description: Namespace name
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate for the cluster
              - name: name
                scope: module
                type: string
                description: The namespace that should be created
            version: v2.6.1
            outputs:
              - name: name
                description: Namespace name
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate for the cluster
                optional: true
              - name: name
                type: string
                description: The namespace that should be created
            version: v2.6.0
            outputs:
              - name: name
                description: Namespace name
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
              - name: tls_secret_name
                moduleRef:
                  id: cluster
                  output: tls_secret_name
                type: string
                description: The name of the secret containing the tls certificate for the cluster
                optional: true
              - name: name
                type: string
                description: The namespace that should be created
            version: v2.5.2
            outputs:
              - name: name
                description: Namespace name
        provider: k8s
      - id: github.com/cloud-native-toolkit/terraform-k8s-olm
        name: olm
        type: terraform
        description: Installs Operator Lifecycle Manager in the cluster
        platforms:
          - kubernetes
          - ocp3
          - ocp4
        tags:
          - operators
        versions:
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-iks-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
            variables:
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: cluster_version
                moduleRef:
                  id: cluster
                  output: platform.version
                type: string
                description: The version of cluster
              - name: olm_version
                scope: ignore
                type: string
                description: The version of olm that will be installed
                default: 0.18.1
                optional: true
            version: v1.3.2
            outputs:
              - name: olm_namespace
                description: Namespace where OLM is running. The value will be different between OCP 4.3 and IKS/OCP 3.11
              - name: target_namespace
                description: Namespace where operatoes will be installed
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
            variables:
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: cluster_version
                moduleRef:
                  id: cluster
                  output: platform.version
                type: string
                description: The version of cluster
              - name: olm_version
                scope: ignore
                type: string
                description: The version of olm that will be installed
                default: 0.18.1
                optional: true
            version: v1.3.1
            outputs:
              - name: olm_namespace
                description: Namespace where OLM is running. The value will be different between OCP 4.3 and IKS/OCP 3.11
              - name: target_namespace
                description: Namespace where operatoes will be installed
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
            variables:
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform
                  path: type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: cluster_version
                moduleRef:
                  id: cluster
                  output: platform
                  path: version
                type: string
                description: The version of cluster
              - name: olm_version
                scope: ignore
                type: string
                description: The version of olm that will be installed
                default: 0.18.1
                optional: true
            version: v1.3.0
            outputs:
              - name: olm_namespace
                description: Namespace where OLM is running. The value will be different between OCP 4.3 and IKS/OCP 3.11
              - name: target_namespace
                description: Namespace where operatoes will be installed
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
            variables:
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform
                  path: type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: cluster_version
                moduleRef:
                  id: cluster
                  output: platform
                  path: version
                type: string
                description: The version of cluster
              - name: olm_version
                scope: ignore
                type: string
                description: The version of olm that will be installed
                default: 0.17.0
                optional: true
            version: v1.2.6
            outputs:
              - name: olm_namespace
                description: Namespace where OLM is running. The value will be different between OCP 4.3 and IKS/OCP 3.11
              - name: target_namespace
                description: Namespace where operatoes will be installed
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
            variables:
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform
                  path: type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: cluster_version
                moduleRef:
                  id: cluster
                  output: platform
                  path: version
                type: string
                description: The version of cluster
              - name: olm_version
                scope: ignore
                type: string
                description: The version of olm that will be installed
                default: 0.17.0
                optional: true
            version: v1.2.5
            outputs:
              - name: olm_namespace
                description: Namespace where OLM is running. The value will be different between OCP 4.3 and IKS/OCP 3.11
              - name: target_namespace
                description: Namespace where operatoes will be installed
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
            variables:
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: cluster_version
                moduleRef:
                  id: cluster
                  output: platform.version
                type: string
                description: The version of cluster
              - name: olm_version
                scope: ignore
                type: string
                description: The version of olm that will be installed
                default: 0.17.0
                optional: true
            version: v1.2.4
            outputs:
              - name: olm_namespace
                description: Namespace where OLM is running. The value will be different between OCP 4.3 and IKS/OCP 3.11
              - name: target_namespace
                description: Namespace where operatoes will be installed
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
            variables:
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform
                  path: type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: cluster_version
                moduleRef:
                  id: cluster
                  output: platform
                  path: version
                type: string
                description: The version of cluster
              - name: olm_version
                scope: ignore
                type: string
                description: The version of olm that will be installed
                default: 0.17.0
                optional: true
            version: v1.2.3
            outputs:
              - name: olm_namespace
                description: Namespace where OLM is running. The value will be different between OCP 4.3 and IKS/OCP 3.11
              - name: target_namespace
                description: Namespace where operatoes will be installed
          - dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
            variables:
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: platform
                  path: type_code
                type: string
                description: The type of cluster (openshift or kubernetes)
              - name: cluster_version
                moduleRef:
                  id: cluster
                  output: platform
                  path: version
                type: string
                description: The version of cluster
              - name: olm_version
                type: string
                description: The version of olm that will be installed
                optional: true
            version: v1.2.2
            outputs:
              - name: olm_namespace
                description: Namespace where OLM is running. The value will be different between OCP 4.3 and IKS/OCP 3.11
              - name: target_namespace
                description: Namespace where operatoes will be installed
        provider: k8s
      - id: github.com/cloud-native-toolkit/terraform-ibm-cp-catalog
        name: ibm-cp-catalog
        type: terraform
        description: Base install of the Cloud Pak for Integration operator catalog and pull secrets
        tags:
          - tools
          - devops
        provider: ibm
        versions:
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
                    default: true
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: release_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
                default: default
                optional: true
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: entitlement_key
                scope: module
                type: string
                description: The entitlement key used to access the CP4I images in the container registry. Visit https://myibm.ibm.com/products-services/containerlibrary to get the key
                default: ""
                optional: true
            version: v1.3.3
            outputs:
              - name: name
                description: The name of the catalog that was installed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: release_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
                default: default
                optional: true
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: entitlement_key
                scope: module
                type: string
                description: The entitlement key used to access the CP4I images in the container registry. Visit https://myibm.ibm.com/products-services/containerlibrary to get the key
                default: ""
                optional: true
            version: v1.3.2
            outputs:
              - name: name
                description: The name of the catalog that was installed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: release_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
                default: default
                optional: true
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: entitlement_key
                scope: module
                type: string
                description: The entitlement key used to access the CP4I images in the container registry. Visit https://myibm.ibm.com/products-services/containerlibrary to get the key
                default: ""
                optional: true
            version: v1.3.1
            outputs:
              - name: name
                description: The name of the catalog that was installed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: release_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
                default: default
                optional: true
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: entitlement_key
                scope: module
                type: string
                description: The entitlement key used to access the CP4I images in the container registry. Visit https://myibm.ibm.com/products-services/containerlibrary to get the key
                default: ""
                optional: true
            version: v1.3.0
            outputs:
              - name: name
                description: The name of the catalog that was installed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: release_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
                default: default
                optional: true
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: entitlement_key
                scope: module
                type: string
                description: The entitlement key used to access the CP4I images in the container registry. Visit https://myibm.ibm.com/products-services/containerlibrary to get the key
                default: ""
                optional: true
            version: v1.2.0
            outputs:
              - name: name
                description: The name of the catalog that was installed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: release_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
                default: default
                optional: true
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: entitlement_key
                scope: module
                type: string
                description: The entitlement key used to access the CP4I images in the container registry. Visit https://myibm.ibm.com/products-services/containerlibrary to get the key
                default: ""
                optional: true
            version: v1.1.0
            outputs:
              - name: name
                description: The name of the catalog that was installed
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: release_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
                optional: true
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                optional: true
              - name: entitlement_key
                scope: module
                type: string
                description: The entitlement key used to access the CP4I images in the container registry. Visit https://myibm.ibm.com/products-services/containerlibrary to get the key
                optional: true
            version: v1.0.4
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: Cluster config file for Kubernetes cluster.
              - name: release_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: Name of the existing namespace where Pact Broker will be deployed.
                optional: true
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                optional: true
              - name: entitlement_key
                scope: module
                type: string
                description: The entitlement key used to access the CP4I images in the container registry. Visit https://myibm.ibm.com/products-services/containerlibrary to get the key
                optional: true
            version: v1.0.3
      - id: github.com/cloud-native-toolkit/terraform-ibm-cp-platform-navigator
        name: ibm-cp-platform-navigator
        type: terraform
        description: Module to install the Cloud Pak Platform Navigator
        tags:
          - tools
          - devops
        provider: ibm
        versions:
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
                    default: true
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: cp-catalog
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cp-catalog
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster
                default: ocp4
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The location of the kube config
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: cloud-pak
                type: string
                description: The namespace where the platform navigator should be installed
                default: cp4i
                optional: true
              - name: catalog_name
                moduleRef:
                  id: cp-catalog
                  output: name
                type: string
                description: The name of the Cloud Pak catalog
                default: ibm-operator-catalog
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
              - name: channel
                type: string
                description: The channel from which the Platform Navigator should be installed
                default: v5.0
                optional: true
            version: v1.3.0
            outputs:
              - name: name
                description: Platform navigator instance name
              - name: namespace
                description: Platform navigator instance namespace
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
                    default: true
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: cp-catalog
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cp-catalog
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster
                default: ocp4
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The location of the kube config
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: cloud-pak
                type: string
                description: The namespace where the platform navigator should be installed
                default: cp4i
                optional: true
              - name: catalog_name
                moduleRef:
                  id: cp-catalog
                  output: name
                type: string
                description: The name of the Cloud Pak catalog
                default: ibm-operator-catalog
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
            version: v1.2.3
            outputs:
              - name: name
                description: Platform navigator instance name
              - name: namespace
                description: Platform navigator instance namespace
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: cp-catalog
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cp-catalog
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster
                default: ocp4
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The location of the kube config
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: cloud-pak
                type: string
                description: The namespace where the platform navigator should be installed
                default: cp4i
                optional: true
              - name: catalog_name
                moduleRef:
                  id: cp-catalog
                  output: name
                type: string
                description: The name of the Cloud Pak catalog
                default: ibm-operator-catalog
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
            version: v1.2.2
            outputs:
              - name: name
                description: Platform navigator instance name
              - name: namespace
                description: Platform navigator instance namespace
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: cp-catalog
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cp-catalog
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster
                default: ocp4
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The location of the kube config
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: cloud-pak
                type: string
                description: The namespace where the platform navigator should be installed
                default: cp4i
                optional: true
              - name: catalog_name
                moduleRef:
                  id: cp-catalog
                  output: name
                type: string
                description: The name of the Cloud Pak catalog
                default: ibm-operator-catalog
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
            version: v1.2.1
            outputs:
              - name: name
                description: Platform navigator instance name
              - name: namespace
                description: Platform navigator instance namespace
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: cp-catalog
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cp-catalog
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster
                default: ocp4
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The location of the kube config
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: cloud-pak
                type: string
                description: The namespace where the platform navigator should be installed
                default: cp4i
                optional: true
              - name: catalog_name
                moduleRef:
                  id: cp-catalog
                  output: name
                type: string
                description: The name of the Cloud Pak catalog
                default: ibm-operator-catalog
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
            version: v1.2.0
            outputs:
              - name: name
                description: Platform navigator instance name
              - name: namespace
                description: Platform navigator instance namespace
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: cp-catalog
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cp-catalog
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster
                default: ocp4
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The location of the kube config
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: cloud-pak
                type: string
                description: The namespace where the platform navigator should be installed
                default: cp4i
                optional: true
              - name: catalog_name
                moduleRef:
                  id: cp-catalog
                  output: name
                type: string
                description: The name of the Cloud Pak catalog
                default: ibm-operator-catalog
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
            version: v1.1.0
            outputs:
              - name: name
                description: Platform navigator instance name
              - name: namespace
                description: Platform navigator instance namespace
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: cp-catalog
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cp-catalog
                    version: '>= 1.0.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster
                default: ocp4
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The location of the kube config
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: cloud-pak
                type: string
                description: The namespace where the platform navigator should be installed
                default: cp4i
                optional: true
              - name: catalog_name
                moduleRef:
                  id: cp-catalog
                  output: name
                type: string
                description: The name of the Cloud Pak catalog
                default: ibm-operator-catalog
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
            version: v1.0.0
            outputs:
              - name: name
                description: Platform navigator instance name
              - name: namespace
                description: Platform navigator instance namespace
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
  - category: middleware
    categoryName: Middleware
    selection: multiple
    modules:
      - id: github.com/cloud-native-toolkit/terraform-ibm-appid
        name: ibm-appid
        type: terraform
        description: Provisions the IBM Cloud AppId service
        tags:
          - tools
          - devops
        versions:
          - platforms: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                scope: global
                alias: region
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                scope: module
                type: string
                description: The type of plan the service instance should run under (lite or graduated-tier)
                default: graduated-tier
                optional: true
              - name: ibmcloud_api_key
                type: string
                description: The api key for IBM Cloud access
            version: v1.3.0
          - platforms: []
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
              - name: resource_group_name
                scope: global
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                scope: global
                alias: region
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: namespaces
                scope: module
              - name: namespace_count
                scope: module
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                scope: module
                type: string
                description: The type of plan the service instance should run under (lite or graduated-tier)
                default: graduated-tier
                optional: true
            version: v1.2.0
          - platforms: []
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: Id of the cluster
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
              - name: resource_group_name
                scope: global
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                scope: global
                alias: region
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: namespaces
                scope: module
                type: list(string)
                description: Namespaces
                optional: true
              - name: namespace_count
                scope: module
                type: number
                description: The number of namespaces
                optional: true
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be applied to the service
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                optional: true
              - name: plan
                scope: module
                type: string
                description: The type of plan the service instance should run under (lite or graduated-tier)
                optional: true
            version: v1.1.1
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-kms
        name: ibm-kms
        type: terraform
        description: Module to provision Key Protect
        tags:
          - tools
          - kms
          - hpcs
          - key protect
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
              - name: number_of_crypto_units
                type: number
                description: No of crypto units that has to be attached to the instance.
                default: 2
                optional: true
              - name: service
                type: string
                description: The name of the KMS provider that should be used (keyprotect or hpcs)
                default: keyprotect
                optional: true
            version: v0.2.0
            outputs:
              - name: id
                description: The id of the provisioned instance.
              - name: guid
                description: The id of the provisioned instance.
              - name: name
                description: The name of the provisioned instance.
              - name: crn
                description: The id of the provisioned instance
              - name: location
                description: The location of the provisioned instance
              - name: service
                description: The service name of the key provisioned for the instance
              - name: label
                description: The label for the instance
              - name: type
                description: The type of the resource
              - name: public_url
                description: The public endpoint for the resource
              - name: private_url
                description: The private endpoint for the resource
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
              - name: number_of_crypto_units
                type: number
                description: No of crypto units that has to be attached to the instance.
                default: 2
                optional: true
              - name: service
                type: string
                description: The name of the KMS provider that should be used (keyprotect or hpcs)
                default: keyprotect
                optional: true
            version: v0.1.3
            outputs:
              - name: id
                description: The id of the provisioned instance.
              - name: guid
                description: The id of the provisioned instance.
              - name: name
                description: The name of the provisioned instance.
              - name: crn
                description: The id of the provisioned instance
              - name: location
                description: The location of the provisioned instance
              - name: service
                description: The service name of the key provisioned for the instance
              - name: label
                description: The label for the instance
              - name: type
                description: The type of the resource
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
              - name: number_of_crypto_units
                type: number
                description: No of crypto units that has to be attached to the instance.
                default: 2
                optional: true
              - name: service
                type: string
                description: The name of the KMS provider that should be used (keyprotect or hpcs)
                default: keyprotect
                optional: true
            version: v0.1.2
            outputs:
              - name: id
                description: The id of the provisioned instance.
              - name: guid
                description: The id of the provisioned instance.
              - name: name
                description: The name of the provisioned instance.
              - name: crn
                description: The id of the provisioned instance
              - name: location
                description: The location of the provisioned instance
              - name: service
                description: The service name of the key provisioned for the instance
              - name: label
                description: The label for the instance
              - name: type
                description: The type of the resource
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
              - name: number_of_crypto_units
                type: number
                description: No of crypto units that has to be attached to the instance.
                default: 2
                optional: true
              - name: service
                type: string
                description: The name of the KMS provider that should be used (keyprotect or hpcs)
                default: keyprotect
                optional: true
            version: v0.1.1
            outputs:
              - name: id
                description: The id of the provisioned instance.
              - name: guid
                description: The id of the provisioned instance.
              - name: name
                description: The name of the provisioned instance.
              - name: crn
                description: The id of the provisioned instance
              - name: location
                description: The location of the provisioned instance
              - name: service
                description: The service name of the key provisioned for the instance
              - name: label
                description: The label for the instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
              - name: number_of_crypto_units
                type: number
                description: No of crypto units that has to be attached to the instance.
                default: 2
                optional: true
              - name: service
                type: string
                description: The name of the KMS provider that should be used (keyprotect or hpcs)
                default: keyprotect
                optional: true
            version: v0.1.0
            outputs:
              - name: id
                description: The id of the provisioned instance.
              - name: guid
                description: The id of the provisioned instance.
              - name: name
                description: The name of the provisioned instance.
              - name: crn
                description: The id of the provisioned instance
              - name: location
                description: The location of the provisioned instance
              - name: service
                description: The service name of the key provisioned for the instance
              - name: label
                description: The label for the instance
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-key-protect
        name: key-protect
        type: terraform
        description: Module to provision Key Protect
        tags:
          - tools
          - vault
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: tiered-pricing
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
              - name: label
                type: string
                description: The label used as generate the name of the resource using the name_prefix
                default: keyprotect
                optional: true
              - name: skip
                type: bool
                description: Flag indicating that the logic should be skipped (i.e. don't do anything)
                default: false
                optional: true
            version: v2.2.1
            outputs:
              - name: id
                description: The id of the provisioned instance.
              - name: guid
                description: The id of the provisioned instance.
              - name: name
                description: The name of the provisioned instance.
              - name: crn
                description: The id of the provisioned instance
              - name: location
                description: The location of the provisioned instance
              - name: service
                description: The service name of the key provisioned for the instance
              - name: label
                description: The label for the instance
              - name: public_url
                description: The public endpoint for the resource
              - name: private_url
                description: The private endpoint for the resource
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: tiered-pricing
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
              - name: label
                type: string
                description: The label used as generate the name of the resource using the name_prefix
                default: keyprotect
                optional: true
              - name: skip
                type: bool
                description: Flag indicating that the logic should be skipped (i.e. don't do anything)
                default: false
                optional: true
            version: v2.2.0
            outputs:
              - name: id
                description: The id of the provisioned instance.
              - name: guid
                description: The id of the provisioned instance.
              - name: name
                description: The name of the provisioned instance.
              - name: crn
                description: The id of the provisioned instance
              - name: location
                description: The location of the provisioned instance
              - name: service
                description: The service name of the key provisioned for the instance
              - name: label
                description: The label for the instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: tiered-pricing
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
              - name: label
                type: string
                description: The label used as generate the name of the resource using the name_prefix
                default: keyprotect
                optional: true
            version: v2.1.1
            outputs:
              - name: id
                description: The id of the provisioned instance.
              - name: guid
                description: The id of the provisioned instance.
              - name: name
                description: The name of the provisioned instance.
              - name: crn
                description: The id of the provisioned instance
              - name: location
                description: The location of the provisioned instance
              - name: service
                description: The service name of the key provisioned for the instance
              - name: label
                description: The label for the instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: tiered-pricing
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
              - name: label
                type: string
                description: The label used as generate the name of the resource using the name_prefix
                default: keyprotect
                optional: true
            version: v2.1.0
            outputs:
              - name: id
                description: The id of the provisioned instance.
              - name: name
                description: The name of the provisioned instance.
              - name: crn
                description: The id of the provisioned instance
              - name: location
                description: The location of the provisioned instance
              - name: service
                description: The service name of the key provisioned for the instance
              - name: label
                description: The label for the instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: tiered-pricing
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
            version: v2.0.4
            outputs:
              - name: id
                description: The id of the provisioned Key Protect instance.
              - name: name
                description: The name of the provisioned Key Protect instance.
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: tiered-pricing
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
            version: v2.0.3
            outputs: []
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: tiered-pricing
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
            version: v2.0.2
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: tiered-pricing
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
            version: v2.0.1
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: tiered-pricing
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
            version: v2.0.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
                default: ""
                optional: true
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: tiered-pricing
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
            version: v1.4.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: name_prefix
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: tiered-pricing
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                type: string
                description: The api key for IBM Cloud access
                default: ""
                optional: true
            version: v1.3.2
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-hpcs
        name: hpcs
        type: terraform
        description: Module to provision Hyper Protect Crypto Service in an IBM Cloud account
        tags:
          - tools
          - vault
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: standard
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: number_of_crypto_units
                type: number
                description: No of crypto units that has to be attached to the instance.
                default: 2
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that hpcs instance should be provisioned. If 'false' then the instance is expected to already exist.
                default: false
                optional: true
              - name: label
                type: string
                description: The label that will be used to generate the name from the name_prefix.
                default: hpcs
                optional: true
              - name: skip
                type: bool
                description: Flag indicating that the logic should be skipped (i.e. don't do anything)
                default: false
                optional: true
            version: v1.4.0
            outputs:
              - name: id
                description: The id of the provisioned HPCS instance.
              - name: guid
                description: The id of the provisioned HPCS instance.
              - name: name
                description: The name of the provisioned HPCS instance.
              - name: crn
                description: The id of the provisioned HPCS instance
              - name: location
                description: The location of the provisioned HPCS instance
              - name: service
                description: The name of the key provisioned for the HPCS instance
              - name: label
                description: The label for the redis instance
              - name: public_url
                description: The public endpoint for the resource
              - name: private_url
                description: The private endpoint for the resource
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: standard
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: number_of_crypto_units
                type: number
                description: No of crypto units that has to be attached to the instance.
                default: 2
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that hpcs instance should be provisioned. If 'false' then the instance is expected to already exist.
                default: false
                optional: true
              - name: label
                type: string
                description: The label that will be used to generate the name from the name_prefix.
                default: hpcs
                optional: true
            version: v1.3.0
            outputs:
              - name: id
                description: The id of the provisioned HPCS instance.
              - name: guid
                description: The id of the provisioned HPCS instance.
              - name: name
                description: The name of the provisioned HPCS instance.
              - name: crn
                description: The id of the provisioned HPCS instance
              - name: location
                description: The location of the provisioned HPCS instance
              - name: service
                description: The name of the key provisioned for the HPCS instance
              - name: label
                description: Flag indicating that the logic should be skipped (i.e. don't do anything)
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: standard
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: number_of_crypto_units
                type: number
                description: No of crypto units that has to be attached to the instance.
                default: 2
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that hpcs instance should be provisioned. If 'false' then the instance is expected to already exist.
                default: false
                optional: true
              - name: label
                type: string
                description: The label that will be used to generate the name from the name_prefix.
                default: hpcs
                optional: true
            version: v1.2.1
            outputs:
              - name: id
                description: The id of the provisioned HPCS instance.
              - name: guid
                description: The id of the provisioned HPCS instance.
              - name: name
                description: The name of the provisioned HPCS instance.
              - name: crn
                description: The id of the provisioned HPCS instance
              - name: location
                description: The location of the provisioned HPCS instance
              - name: service
                description: The name of the key provisioned for the HPCS instance
              - name: label
                description: The label for the redis instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: standard
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: number_of_crypto_units
                type: number
                description: No of crypto units that has to be attached to the instance.
                default: 2
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that hpcs instance should be provisioned. If 'false' then the instance is expected to already exist.
                default: false
                optional: true
              - name: label
                type: string
                description: The label that will be used to generate the name from the name_prefix.
                default: hpcs
                optional: true
            version: v1.2.0
            outputs:
              - name: id
                description: The id of the provisioned HPCS instance.
              - name: name
                description: The name of the provisioned HPCS instance.
              - name: crn
                description: The id of the provisioned redis instance
              - name: location
                description: The location of the provisioned redis instance
              - name: service
                description: The name of the key provisioned for the redis instance
              - name: label
                description: The label for the redis instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: standard
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: number_of_crypto_units
                type: number
                description: No of crypto units that has to be attached to the instance.
                default: 2
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that hpcs instance should be provisioned. If 'false' then the instance is expected to already exist.
                default: false
                optional: true
            version: v1.1.5
            outputs:
              - name: id
                description: The id of the provisioned HPCS instance.
              - name: name
                description: The name of the provisioned HPCS instance.
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: standard
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: number_of_crypto_units
                type: number
                description: No of crypto units that has to be attached to the instance.
                default: 2
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that hpcs instance should be provisioned. If 'false' then the instance is expected to already exist.
                default: false
                optional: true
            version: v1.1.4
            outputs: []
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: standard
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: number_of_crypto_units
                type: number
                description: No of crypto units that has to be attached to the instance.
                default: 2
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that hpcs instance should be provisioned. If 'false' then the instance is expected to already exist.
                default: false
                optional: true
            version: v1.1.3
            outputs: []
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (tiered-pricing)
                default: standard
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: number_of_crypto_units
                type: number
                description: No of crypto units that has to be attached to the instance.
              - name: provision
                type: bool
                description: Flag indicating that hpcs instance should be provisioned. If 'false' then the instance is expected to already exist.
                default: false
                optional: true
            version: v1.1.2
            outputs: []
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-hpcs-initialization
        name: hpcs-initialization
        type: terraform
        description: Module to initialize a Hyper Protect Crypto Service instance
        tags:
          - kms
          - crypto
          - hpcs
          - initialize
        versions:
          - platforms: []
            dependencies:
              - id: hpcs
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 0.0.0'
            variables:
              - name: hpcs_instance_guid
                moduleRef:
                  id: hpcs
                  output: guid
                type: string
                description: HPCS Instance GUID
              - name: initialize
                type: bool
                description: Flag indicating that if user want to initialize the hpcs instance. If 'true' then the instance is expected to initialize.
                default: false
                optional: true
              - name: tke_files_path
                type: string
                description: Path to which tke files has to be exported
              - name: admin1_name
                type: string
                description: First admin name
              - name: admin1_password
                type: string
                description: First admin password
              - name: admin2_name
                type: string
                description: Second admin name
              - name: admin2_password
                type: string
                description: second admin password
              - name: admin_num
                type: number
                description: Number of admins to manage HPCS
                default: 2
                optional: true
              - name: threshold_value
                type: number
                description: Threshold value
                default: 2
                optional: true
              - name: rev_threshold_value
                type: number
                description: Remove / delete threshold value
                default: 2
                optional: true
            version: v1.0.4
            outputs:
              - name: hpcs_init
                description: 'output "hpcs_init" {   value = var.initialize == false ? null : format("%v", null_resource.hpcs_init.*.id) }'
          - platforms: []
            dependencies:
              - id: hpcs
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 0.0.0'
            variables:
              - name: hpcs_instance_guid
                moduleRef:
                  id: hpcs
                  output: guid
                type: string
                description: HPCS Instance GUID
              - name: initialize
                type: bool
                description: Flag indicating that if user want to initialize the hpcs instance. If 'true' then the instance is expected to initialize.
                default: false
                optional: true
              - name: tke_files_path
                type: string
                description: Path to which tke files has to be exported
              - name: admin1_name
                type: string
                description: First admin name
              - name: admin1_password
                type: string
                description: First admin password
              - name: admin2_name
                type: string
                description: Second admin name
              - name: admin2_password
                type: string
                description: second admin password
              - name: admin_num
                type: number
                description: Number of admins to manage HPCS
                default: 2
                optional: true
              - name: threshold_value
                type: number
                description: Threshold value
                default: 2
                optional: true
              - name: rev_threshold_value
                type: number
                description: Remove / delete threshold value
                default: 2
                optional: true
            version: v1.0.3
            outputs:
              - name: hpcs_init
                description: 'output "hpcs_init" {   value = var.initialize == false ? null : format("%v", null_resource.hpcs_init.*.id) }'
          - platforms: []
            dependencies:
              - id: hpcs
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 0.0.0'
            variables:
              - name: hpcs_instance_guid
                moduleRef:
                  id: hpcs
                  output: guid
                type: string
                description: HPCS Instance GUID
              - name: initialize
                type: bool
                description: Flag indicating that if user want to initialize the hpcs instance. If 'true' then the instance is expected to initialize.
                default: false
                optional: true
              - name: tke_files_path
                type: string
                description: Path to which tke files has to be exported
              - name: admin1_name
                type: string
                description: First admin name
              - name: admin1_password
                type: string
                description: First admin password
              - name: admin2_name
                type: string
                description: Second admin name
              - name: admin2_password
                type: string
                description: second admin password
              - name: admin_num
                type: number
                description: Number of admins to manage HPCS
                default: 2
                optional: true
              - name: threshold_value
                type: number
                description: Threshold value
                default: 2
                optional: true
              - name: rev_threshold_value
                type: number
                description: Remove / delete threshold value
                default: 2
                optional: true
            version: v1.0.2
            outputs:
              - name: hpcs_init
                description: 'output "hpcs_init" {   value = var.initialize == false ? null : format("%v", null_resource.hpcs_init.*.id) }'
          - version: v1.0.1
            variables:
              - name: initialize
                type: bool
                description: Flag indicating that if user want to initialize the hpcs instance. If 'true' then the instance is expected to initialize.
                default: false
                optional: true
              - name: tke_files_path
                type: string
                description: Path to which tke files has to be exported
              - name: hpcs_instance_guid
                type: string
                description: HPCS Instance GUID
              - name: admin1_name
                type: string
                description: First admin name
              - name: admin1_password
                type: string
                description: First admin password
              - name: admin2_name
                type: string
                description: Second admin name
              - name: admin2_password
                type: string
                description: second admin password
              - name: admin_num
                type: number
                description: Number of admins to manage HPCS
                default: 2
                optional: true
              - name: threshold_value
                type: number
                description: Threshold value
                default: 2
                optional: true
              - name: rev_threshold_value
                type: number
                description: Remove / delete threshold value
                default: 2
                optional: true
            outputs:
              - name: hpcs_init
                description: 'output "hpcs_init" {   value = var.initialize == false ? null : format("%v", null_resource.hpcs_init.*.id) }'
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-kms-key
        name: ibm-kms-key
        alias: kms-key
        type: terraform
        description: Module to lookup or create a KMS key
        tags:
          - kms
          - key
        versions:
          - platforms: []
            dependencies:
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms
                    version: '>= 0.0.0'
            variables:
              - name: kms_id
                moduleRef:
                  id: kms
                  output: guid
                type: string
                description: The id of the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: kms_public_url
                moduleRef:
                  id: kms
                  output: public_url
                type: string
                description: The public url of the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: kms_private_url
                moduleRef:
                  id: kms
                  output: private_url
                type: string
                description: The private url of the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: region
                moduleRef:
                  id: kms
                  output: location
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name_prefix used to build the name if one is not provided. If used the name will be `{name_prefix}-{label}`
                default: base
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the key should be provisioned. If false then an existing key will be looked up
                default: false
                optional: true
              - name: name
                type: string
                description: The name of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: label
                type: string
                description: The label used to build the name if one is not provided. If used the name will be `{name_prefix}-{label}`
                default: key
                optional: true
              - name: rotation_interval
                type: number
                description: The interval in months that a root key needs to be rotated.
                default: 3
                optional: true
              - name: dual_auth_delete
                type: bool
                description: Flag indicating that the key requires dual authorization to be deleted.
                default: false
                optional: true
              - name: force_delete
                type: bool
                description: Flag indicating that 'force' should be applied to key on delete
                default: true
                optional: true
            version: v1.4.0
            outputs:
              - name: id
                description: The id of the key
              - name: name
                description: The crn of the key
              - name: crn
                description: The crn of the key
              - name: kms_id
                description: The id of the kms instance
              - name: kms_public_url
                description: The public url of the kms instance
              - name: kms_private_url
                description: The private url of the kms instance
          - platforms: []
            dependencies:
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms
                    version: '>= 0.0.0'
            variables:
              - name: kms_id
                moduleRef:
                  id: kms
                  output: guid
                type: string
                description: The id of the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: region
                moduleRef:
                  id: kms
                  output: location
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name_prefix used to build the name if one is not provided. If used the name will be `{name_prefix}-{label}`
                default: base
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the key should be provisioned. If false then an existing key will be looked up
                default: false
                optional: true
              - name: name
                type: string
                description: The name of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: label
                type: string
                description: The label used to build the name if one is not provided. If used the name will be `{name_prefix}-{label}`
                default: key
                optional: true
              - name: rotation_interval
                type: number
                description: The interval in months that a root key needs to be rotated.
                default: 3
                optional: true
              - name: dual_auth_delete
                type: bool
                description: Flag indicating that the key requires dual authorization to be deleted.
                default: false
                optional: true
              - name: force_delete
                type: bool
                description: Flag indicating that 'force' should be applied to key on delete
                default: true
                optional: true
            version: v1.3.0
            outputs:
              - name: id
                description: The id of the key
              - name: name
                description: The crn of the key
              - name: crn
                description: The crn of the key
              - name: kms_id
                description: The id of the kms instance
          - platforms: []
            dependencies:
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms
                    version: '>= 0.0.0'
            variables:
              - name: kms_id
                moduleRef:
                  id: kms
                  output: guid
                type: string
                description: The id of the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: region
                moduleRef:
                  id: kms
                  output: location
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name_prefix used to build the name if one is not provided. If used the name will be `{name_prefix}-{label}`
                default: base
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the key should be provisioned. If false then an existing key will be looked up
                default: false
                optional: true
              - name: name
                type: string
                description: The name of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: label
                type: string
                description: The label used to build the name if one is not provided. If used the name will be `{name_prefix}-{label}`
                default: key
                optional: true
              - name: rotation_interval
                type: number
                description: The interval in months that a root key needs to be rotated.
                default: 3
                optional: true
              - name: dual_auth_delete
                type: bool
                description: Flag indicating that the key requires dual authorization to be deleted.
                default: false
                optional: true
            version: v1.2.1
            outputs:
              - name: id
                description: The id of the key
              - name: name
                description: The crn of the key
              - name: crn
                description: The crn of the key
              - name: kms_id
                description: The id of the kms instance
          - platforms: []
            dependencies:
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 1.0.0'
            variables:
              - name: kms_id
                moduleRef:
                  id: kms
                  output: guid
                type: string
                description: The id of the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: region
                moduleRef:
                  id: kms
                  output: location
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name_prefix used to build the name if one is not provided. If used the name will be `{name_prefix}-{label}`
                default: base
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the key should be provisioned. If false then an existing key will be looked up
                default: false
                optional: true
              - name: name
                type: string
                description: The name of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: label
                type: string
                description: The label used to build the name if one is not provided. If used the name will be `{name_prefix}-{label}`
                default: key
                optional: true
              - name: rotation_interval
                type: number
                description: The interval in months that a root key needs to be rotated.
                default: 3
                optional: true
              - name: dual_auth_delete
                type: bool
                description: Flag indicating that the key requires dual authorization to be deleted.
                default: false
                optional: true
            version: v1.2.0
            outputs:
              - name: id
                description: The id of the key
              - name: name
                description: The crn of the key
              - name: crn
                description: The crn of the key
              - name: kms_id
                description: The id of the kms instance
          - platforms: []
            dependencies:
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 1.0.0'
            variables:
              - name: kms_id
                moduleRef:
                  id: kms
                  output: guid
                type: string
                description: The id of the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: region
                moduleRef:
                  id: kms
                  output: location
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name_prefix used to build the name if one is not provided. If used the name will be `{name_prefix}-{label}`
                default: base
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the key should be provisioned. If false then an existing key will be looked up
                default: false
                optional: true
              - name: name
                type: string
                description: The name of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: label
                type: string
                description: The label used to build the name if one is not provided. If used the name will be `{name_prefix}-{label}`
                default: key
                optional: true
            version: v1.1.0
            outputs:
              - name: id
                description: The id of the key
              - name: name
                description: The crn of the key
              - name: crn
                description: The crn of the key
              - name: kms_id
                description: The id of the kms instance
          - platforms: []
            dependencies:
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 1.0.0'
            variables:
              - name: kms_id
                moduleRef:
                  id: kms
                  output: guid
                type: string
                description: The id of the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: region
                moduleRef:
                  id: kms
                  output: location
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the key should be provisioned. If false then an existing key will be looked up
                default: false
                optional: true
              - name: name
                type: string
                description: The name of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
            version: v1.0.4
            outputs:
              - name: id
                description: The id of the key
              - name: name
                description: The crn of the key
              - name: crn
                description: The crn of the key
              - name: kms_id
                description: The id of the kms instance
          - platforms: []
            dependencies:
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 1.0.0'
            variables:
              - name: kms_id
                moduleRef:
                  id: kms
                  output: guid
                type: string
                description: The id of the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: region
                moduleRef:
                  id: kms
                  output: location
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the key should be provisioned. If false then an existing key will be looked up
                default: false
                optional: true
              - name: name
                type: string
                description: The name of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
            version: v1.0.3
            outputs:
              - name: id
                description: The id of the key
              - name: name
                description: The crn of the key
              - name: crn
                description: The crn of the key
              - name: kms_id
                description: The id of the kms instance
          - platforms: []
            dependencies:
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcs
                    version: '>= 1.0.0'
            variables:
              - name: key_id
                moduleRef:
                  id: kms
                  output: guid
              - name: region
                moduleRef:
                  id: kms
                  output: location
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the key should be provisioned. If false then an existing key will be looked up
                default: false
                optional: true
              - name: kms_id
                type: string
                description: The id of the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: name
                type: string
                description: The name of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
            version: v1.0.2
            outputs:
              - name: id
                description: The id of the key
              - name: name
                description: The crn of the key
              - name: crn
                description: The crn of the key
              - name: kms_id
                description: The id of the kms instance
          - platforms: []
            dependencies:
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcsr
                    version: '>= 1.0.0'
            variables:
              - name: key_id
                moduleRef:
                  id: kms
                  output: guid
              - name: region
                moduleRef:
                  id: kms
                  output: location
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the key should be provisioned. If false then an existing key will be looked up
                default: false
                optional: true
              - name: kms_id
                type: string
                description: The id of the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: name
                type: string
                description: The name of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
            version: v1.0.1
            outputs:
              - name: id
                description: The id of the key
              - name: name
                description: The crn of the key
              - name: crn
                description: The crn of the key
              - name: kms_id
                description: The id of the kms instance
          - platforms: []
            dependencies:
              - id: kms
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-key-protect
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-hpcsr
                    version: '>= 1.0.0'
            variables:
              - name: key_id
                moduleRef:
                  id: kms
                  output: guid
              - name: region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the key should be provisioned. If false then an existing key will be looked up
                default: false
                optional: true
              - name: kms_id
                type: string
                description: The id of the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: name
                type: string
                description: The name of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
            version: v1.0.0
            outputs:
              - name: id
                description: The id of the key
              - name: name
                description: The crn of the key
              - name: crn
                description: The crn of the key
              - name: kms_id
                description: The id of the kms instance
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-mongodb
        name: ibm-mongodb
        type: terraform
        description: Module to provision Databases for MongoDB instance
        tags:
          - tools
          - infrastructure
          - mongodb
          - saas
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            version: v1.1.1
            variables:
              - name: resource_group_name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: name_prefix
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (standard)
                default: standard
                optional: true
              - name: role
                type: string
                description: The role of the generated credential (Viewer, Administrator, Operator, Editor)
                default: Editor
                optional: true
              - name: key-protect-region
                type: string
                description: The region where the Key Protect instance has been provisioned. If not provided defaults to the same region as the MongoDB instance
                default: ""
                optional: true
              - name: key-protect-resource-group
                type: string
                description: The resource group where the Key Protect instance has been provisioned. If not provided defaults to the same resource group as the MongoDB instance
                default: ""
                optional: true
              - name: key-protect-name
                type: string
                description: The name of the Key Protect instance
                default: ""
                optional: true
              - name: key-protect-key
                type: string
                description: The name of the key in the Key Protect instance
                default: ""
                optional: true
              - name: authorize-kms
                type: bool
                description: Flag indicating that the authorization for MongoDB to read keys in the KMS should be created
                default: false
                optional: true
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            version: v1.1.0
            variables:
              - name: resource_group_name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                optional: true
              - name: name_prefix
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (standard)
                optional: true
              - name: role
                type: string
                description: The role of the generated credential (Viewer, Administrator, Operator, Editor)
                optional: true
              - name: key-protect-region
                type: string
                description: The region where the Key Protect instance has been provisioned. If not provided defaults to the same region as the MongoDB instance
                optional: true
              - name: key-protect-resource-group
                type: string
                description: The resource group where the Key Protect instance has been provisioned. If not provided defaults to the same resource group as the MongoDB instance
                optional: true
              - name: key-protect-name
                type: string
                description: The name of the Key Protect instance
                optional: true
              - name: key-protect-key
                type: string
                description: The name of the key in the Key Protect instance
                optional: true
              - name: authorize-kms
                type: bool
                description: Flag indicating that the authorization for MongoDB to read keys in the KMS should be created
                optional: true
            outputs:
              - name: output "my
                description: output "my
              - name: 'output" { #  description = "Description of my'
                description: 'output" { #  description = "Description of my'
              - name: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
                description: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-object-storage
        name: ibm-object-storage
        alias: cos
        type: terraform
        description: |
          Module to work with an IBM Cloud Object Storage instance. If the `provision` flag is true then an new instance
          of IBM Cloud Object Storage is provisioned. Otherwise, the module will find an existing instance with the
          provided name and create a credential. The name and id of the Object Storage instance as well as the name and id
          of the credential instance are exported from the module for use by other modules.
        tags:
          - tools
          - infrastructure
          - object storage
          - saas
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
                default: global
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite or standard)
                default: standard
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that cos instance should be provisioned
                default: true
                optional: true
              - name: label
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: cos
                optional: true
            version: v3.4.0
            outputs:
              - name: id
                description: The Object Storage instance id
              - name: name
                description: The Object Storage instance name
              - name: crn
                description: The crn of the Object Storage instance
              - name: location
                description: The Object Storage instance location
              - name: key_name
                description: The name of the credential provisioned for the Object Storage instance
              - name: key_id
                description: The name of the credential provisioned for the Object Storage instance
              - name: service
                description: The name of the key provisioned for the Object Storage instance
              - name: label
                description: The label used for the Object Storage instance
              - name: type
                description: The type of the resource
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
                default: global
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite or standard)
                default: standard
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that cos instance should be provisioned
                default: true
                optional: true
              - name: label
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: cos
                optional: true
            version: v3.3.3
            outputs:
              - name: id
                description: The Object Storage instance id
              - name: name
                description: The Object Storage instance name
              - name: crn
                description: The crn of the Object Storage instance
              - name: location
                description: The Object Storage instance location
              - name: key_name
                description: The name of the credential provisioned for the Object Storage instance
              - name: key_id
                description: The name of the credential provisioned for the Object Storage instance
              - name: service
                description: The name of the key provisioned for the Object Storage instance
              - name: label
                description: The label used for the Object Storage instance
              - name: type
                description: The type of the resource
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
                default: global
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite or standard)
                default: standard
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that cos instance should be provisioned
                default: true
                optional: true
              - name: label
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: cos
                optional: true
            version: v3.3.2
            outputs:
              - name: id
                description: The Object Storage instance id
              - name: name
                description: The Object Storage instance name
              - name: crn
                description: The crn of the Object Storage instance
              - name: location
                description: The Object Storage instance location
              - name: key_name
                description: The name of the credential provisioned for the Object Storage instance
              - name: key_id
                description: The name of the credential provisioned for the Object Storage instance
              - name: service
                description: The name of the key provisioned for the Object Storage instance
              - name: label
                description: The label used for the Object Storage instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
                default: global
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite or standard)
                default: standard
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
              - name: label
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: cos
                optional: true
            version: v3.3.0
            outputs:
              - name: id
                description: The Object Storage instance id
              - name: name
                description: The Object Storage instance name
              - name: crn
                description: The crn of the Object Storage instance
              - name: location
                description: The Object Storage instance location
              - name: key_name
                description: The name of the credential provisioned for the Object Storage instance
              - name: key_id
                description: The name of the credential provisioned for the Object Storage instance
              - name: service
                description: The name of the key provisioned for the Object Storage instance
              - name: label
                description: The label used for the Object Storage instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
                default: global
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite or standard)
                default: standard
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
              - name: label
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: cos
                optional: true
            version: v3.2.0
            outputs:
              - name: id
                description: The Object Storage instance id
              - name: name
                description: The Object Storage instance name
              - name: crn
                description: The crn of the Object Storage instance
              - name: location
                description: The Object Storage instance location
              - name: key_name
                description: The name of the credential provisioned for the Object Storage instance
              - name: key_id
                description: The name of the credential provisioned for the Object Storage instance
              - name: service
                description: The name of the key provisioned for the Object Storage instance
              - name: label
                description: The label used for the Object Storage instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
                default: global
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite or standard)
                default: standard
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
            version: v3.1.2
            outputs:
              - name: id
                description: The Object Storage instance id
              - name: name
                description: The Object Storage instance name
              - name: crn
                description: The crn of the Object Storage instance
              - name: location
                description: The Object Storage instance location
              - name: key_name
                description: The name of the credential provisioned for the Object Storage instance
              - name: key_id
                description: The name of the credential provisioned for the Object Storage instance
              - name: service
                description: The name of the key provisioned for the redis instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
                default: global
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite or standard)
                default: standard
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
            version: v3.1.1
            outputs:
              - name: name
                description: The Object Storage instance name
              - name: id
                description: The Object Storage instance id
              - name: crn
                description: The crn of the Object Storage instance
              - name: location
                description: The Object Storage instance location
              - name: key_name
                description: The name of the credential provisioned for the Object Storage instance
              - name: key_id
                description: The name of the credential provisioned for the Object Storage instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
                default: global
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite or standard)
                default: standard
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
            version: v3.1.0
            outputs:
              - name: name
                description: The Object Storage instance name
              - name: id
                description: The Object Storage instance id
              - name: crn
                description: The crn of the Object Storage instance id
              - name: location
                description: The Object Storage instance location
              - name: key_name
                description: The name of the credential provisioned for the Object Storage instance
              - name: key_id
                description: The name of the credential provisioned for the Object Storage instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
                default: global
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite or standard)
                default: standard
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
            version: v3.0.4
            outputs:
              - name: name
                description: The Object Storage instance name
              - name: id
                description: The Object Storage instance id
              - name: location
                description: The Object Storage instance location
              - name: key_name
                description: The name of the credential provisioned for the Object Storage instance
              - name: key_id
                description: The name of the credential provisioned for the Object Storage instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
              - name: name_prefix
                scope: global
                type: string
              - name: name
                scope: ignore
                type: string
              - name: resource_location
                type: string
                default: global
              - name: tags
                type: list(string)
                default: ""
              - name: plan
                type: string
                default: standard
              - name: provision
                type: string
                default: "true"
            version: v3.0.3
            outputs:
              - name: name
                description: The Object Storage instance name
              - name: id
                description: The Object Storage instance id
              - name: location
                description: The Object Storage instance location
              - name: key_name
                description: The name of the credential provisioned for the Object Storage instance
              - name: key_id
                description: The name of the credential provisioned for the Object Storage instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
                default: global
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite or standard)
                default: standard
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
            version: v3.0.2
            outputs:
              - name: name
                description: The Object Storage instance name
              - name: id
                description: The Object Storage instance id
              - name: location
                description: The Object Storage instance location
              - name: key_name
                description: The name of the credential provisioned for the Object Storage instance
              - name: key_id
                description: The name of the credential provisioned for the Object Storage instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
                default: global
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite or standard)
                default: standard
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
            version: v3.0.1
            outputs:
              - name: name
                description: The Object Storage instance name
              - name: id
                description: The Object Storage instance id
              - name: location
                description: The Object Storage instance location
              - name: key_name
                description: The name of the credential provisioned for the Object Storage instance
              - name: key_id
                description: The name of the credential provisioned for the Object Storage instance
          - platforms: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
                default: global
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite or standard)
                default: standard
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
            version: v3.0.0
            outputs:
              - name: name
                description: The Object Storage instance name
              - name: id
                description: The Object Storage instance id
              - name: location
                description: The Object Storage instance location
              - name: key_name
                description: The name of the credential provisioned for the Object Storage instance
              - name: key_id
                description: The name of the credential provisioned for the Object Storage instance
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
                default: global
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite or standard)
                default: standard
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
            version: v2.1.0
            outputs:
              - name: name
                description: The Object Storage instance name
              - name: id
                description: The Object Storage instance id
              - name: location
                description: The Object Storage instance location
              - name: key_name
                description: The name of the credential provisioned for the Object Storage instance
              - name: key_id
                description: The name of the credential provisioned for the Object Storage instance
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            version: v2.0.2
            variables:
              - name: resource_group_name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
                default: global
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: name_prefix
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite or standard)
                default: standard
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
        name: ibm-object-storage-bucket
        alias: cos-bucket
        type: terraform
        description: Module to provision a Cloud Object Storage bucket
        tags:
          - object storage
          - bucket
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
              - id: activity_tracker
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-activity-tracker
                    version: '>= 1.0.0'
                optional: true
              - id: metrics_monitoring
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig
                    version: '>= 1.0.0'
                optional: true
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.11.1'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: cos_instance_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: id of the COS instance
              - name: cos_key_id
                moduleRef:
                  id: cos
                  output: key_id
                type: string
                description: The id of the key provisioned for the COS instance
                default: ""
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                type: string
                description: The crn of the root key in the KMS
                default: "null"
                optional: true
              - name: activity_tracker_crn
                moduleRef:
                  id: activity_tracker
                  output: crn
                optional: true
                type: string
                description: The crn of the Activity Tracking instance
                default: "null"
              - name: metrics_monitoring_crn
                moduleRef:
                  id: metrics_monitoring
                  output: crn
                optional: true
                type: string
                description: The crn of the Metrics Monitoring instance
                default: "null"
              - name: vpc_ip_addresses
                moduleRef:
                  id: vpc
                  output: addresses
                optional: true
                type: list(string)
                description: The list of ip addresses in the VPC that should be allowed to access the bucket.
                default: null
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: Bucket region
              - name: name_prefix
                scope: global
                type: string
                description: The name of the cos resource
                default: ""
                optional: true
              - namd: suffix
                scrop: global
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: name
                type: string
                description: Name of the bucket
                default: ""
                optional: true
              - name: label
                type: string
                description: Label used to build the bucket name of not provided.
                default: bucket
                optional: true
              - name: cross_region_location
                type: string
                description: The cross-region location of the bucket. This value is optional. Valid values are (us, eu, and ap). This value takes precedence over others if provided.
                default: validation { condition = contains([, us, eu, ap], var.cross_region_location) error_message = The cross_region location must be either 'us', 'eu', or 'ap'. }
                optional: true
              - name: storage_class
                type: string
                description: Storage class of the bucket. Supported values are standard, vault, cold, flex, smart.
                default: standard
                optional: true
              - name: allowed_ip
                type: list(string)
                description: A list of IPv4 or IPv6 addresses in CIDR notation that you want to allow access to your IBM Cloud Object Storage bucket.
                default: null
                optional: true
              - name: suffix
                type: string
                description: Value added to the generated name to ensure it is unique
                default: ""
                optional: true
            version: v0.8.0
            outputs:
              - name: bucket_name
                description: The name of the COS bucket instance
              - name: id
                description: The ID of the COS bucket instance
              - name: crn
                description: The CRN of the COS bucket instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
              - id: activity_tracker
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-activity-tracker
                    version: '>= 1.0.0'
                optional: true
              - id: metrics_monitoring
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig
                    version: '>= 1.0.0'
                optional: true
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.11.1'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: cos_instance_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: id of the COS instance
              - name: cos_key_id
                moduleRef:
                  id: cos
                  output: key_id
                type: string
                description: The id of the key provisioned for the COS instance
                default: ""
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                type: string
                description: The crn of the root key in the KMS
                default: "null"
                optional: true
              - name: activity_tracker_crn
                moduleRef:
                  id: activity_tracker
                  output: crn
                optional: true
                type: string
                description: The crn of the Activity Tracking instance
                default: "null"
              - name: metrics_monitoring_crn
                moduleRef:
                  id: metrics_monitoring
                  output: crn
                optional: true
                type: string
                description: The crn of the Metrics Monitoring instance
                default: "null"
              - name: vpc_ip_addresses
                moduleRef:
                  id: vpc
                  output: addresses
                optional: true
                type: list(string)
                description: The list of ip addresses in the VPC that should be allowed to access the bucket.
                default: null
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: Bucket region
              - name: name_prefix
                scope: global
                type: string
                description: The name of the cos resource
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: name
                type: string
                description: Name of the bucket
                default: ""
                optional: true
              - name: label
                type: string
                description: Label used to build the bucket name of not provided.
                default: bucket
                optional: true
              - name: cross_region_location
                type: string
                description: The cross-region location of the bucket. This value is optional. Valid values are (us, eu, and ap). This value takes precedence over others if provided.
                default: ""
                optional: true
              - name: storage_class
                type: string
                description: Storage class of the bucket. Supported values are standard, vault, cold, flex, smart.
                default: standard
                optional: true
              - name: allowed_ip
                type: list(string)
                description: A list of IPv4 or IPv6 addresses in CIDR notation that you want to allow access to your IBM Cloud Object Storage bucket.
                default: null
                optional: true
            version: v0.7.0
            outputs:
              - name: bucket_name
                description: The name of the COS bucket instance
              - name: id
                description: The ID of the COS bucket instance
              - name: crn
                description: The CRN of the COS bucket instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
              - id: activity_tracker
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-activity-tracker
                    version: '>= 1.0.0'
                optional: true
              - id: metrics_monitoring
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig
                    version: '>= 1.0.0'
                optional: true
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.11.1'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: cos_instance_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: id of the COS instance
              - name: cos_key_id
                moduleRef:
                  id: cos
                  output: key_id
                type: string
                description: The id of the key provisioned for the COS instance
                default: ""
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                type: string
                description: The crn of the root key in the KMS
                default: "null"
                optional: true
              - name: activity_tracker_crn
                moduleRef:
                  id: activity_tracker
                  output: crn
                optional: true
                type: string
                description: The crn of the Activity Tracking instance
                default: "null"
              - name: metrics_monitoring_crn
                moduleRef:
                  id: metrics_monitoring
                  output: crn
                optional: true
                type: string
                description: The crn of the Metrics Monitoring instance
                default: "null"
              - name: vpc_ip_addresses
                moduleRef:
                  id: vpc
                  output: addresses
                optional: true
                type: list(string)
                description: The list of ip addresses in the VPC that should be allowed to access the bucket.
                default: null
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: Bucket region
              - name: name_prefix
                scope: global
                type: string
                description: The name of the cos resource
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: name
                type: string
                description: Name of the bucket
                default: ""
                optional: true
              - name: label
                type: string
                description: Label used to build the bucket name of not provided.
                default: bucket
                optional: true
              - name: cross_region_location
                type: string
                description: The cross-region location of the bucket. This value is optional. Valid values are (us, eu, and ap). This value takes precedence over others if provided.
                default: validation { condition = contains([, us, eu, ap], var.cross_region_location) error_message = The cross_region location must be either 'us', 'eu', or 'ap'. }
                optional: true
              - name: storage_class
                type: string
                description: Storage class of the bucket. Supported values are standard, vault, cold, flex, smart.
                default: standard
                optional: true
              - name: allowed_ip
                type: list(string)
                description: A list of IPv4 or IPv6 addresses in CIDR notation that you want to allow access to your IBM Cloud Object Storage bucket.
                default: null
                optional: true
            version: v0.6.0
            outputs:
              - name: bucket_name
                description: The name of the COS bucket instance
              - name: id
                description: The ID of the COS bucket instance
              - name: crn
                description: The CRN of the COS bucket instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
              - id: activity_tracker
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-activity-tracker
                    version: '>= 1.0.0'
                optional: true
              - id: metrics_monitoring
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig
                    version: '>= 1.0.0'
                optional: true
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.11.1'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: cos_instance_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: id of the COS instance
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                type: string
                description: The crn of the root key in the KMS
                default: "null"
                optional: true
              - name: activity_tracker_crn
                moduleRef:
                  id: activity_tracker
                  output: crn
                optional: true
                type: string
                description: The crn of the Activity Tracking instance
                default: "null"
              - name: metrics_monitoring_crn
                moduleRef:
                  id: metrics_monitoring
                  output: crn
                optional: true
                type: string
                description: The crn of the Metrics Monitoring instance
                default: "null"
              - name: vpc_ip_addresses
                moduleRef:
                  id: vpc
                  output: addresses
                optional: true
                type: list(string)
                description: The list of ip addresses in the VPC that should be allowed to access the bucket.
                default: null
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: Bucket region
              - name: name_prefix
                scope: global
                type: string
                description: The name of the cos resource
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: name
                type: string
                description: Name of the bucket
                default: ""
                optional: true
              - name: label
                type: string
                description: Label used to build the bucket name of not provided.
                default: bucket
                optional: true
              - name: cross_region_location
                type: string
                description: The cross-region location of the bucket. This value is optional. Valid values are (us, eu, and ap). This value takes precedence over others if provided.
                default: ""
                optional: true
              - name: storage_class
                type: string
                description: Storage class of the bucket. Supported values are standard, vault, cold, flex, smart.
                default: standard
                optional: true
              - name: allowed_ip
                type: list(string)
                description: A list of IPv4 or IPv6 addresses in CIDR notation that you want to allow access to your IBM Cloud Object Storage bucket.
                default: null
                optional: true
            version: v0.5.0
            outputs:
              - name: bucket_name
                description: The name of the COS bucket instance
              - name: id
                description: The ID of the COS bucket instance
              - name: crn
                description: The CRN of the COS bucket instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
              - id: activity_tracker
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-activity-tracker
                    version: '>= 1.0.0'
                optional: true
              - id: metrics_monitoring
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: cos_instance_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: id of the COS instance
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                type: string
                description: The crn of the root key in the KMS
                default: "null"
                optional: true
              - name: activity_tracker_crn
                moduleRef:
                  id: activity_tracker
                  output: crn
                optional: true
                type: string
                description: The crn of the Activity Tracking instance
                default: "null"
              - name: metrics_monitoring_crn
                moduleRef:
                  id: metrics_monitoring
                  output: crn
                optional: true
                type: string
                description: The crn of the Metrics Monitoring instance
                default: "null"
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: Bucket region
              - name: name_prefix
                scope: global
                type: string
                description: The name of the cos resource
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: name
                type: string
                description: Name of the bucket
                default: ""
                optional: true
              - name: label
                type: string
                description: Label used to build the bucket name of not provided.
                default: bucket
                optional: true
              - name: cross_region_location
                type: string
                description: The cross-region location of the bucket. This value is optional. Valid values are (us, eu, and ap). This value takes precedence over others if provided.
                default: ""
                optional: true
              - name: storage_class
                type: string
                description: Storage class of the bucket. Supported values are standard, vault, cold, flex, smart.
                default: standard
                optional: true
            version: v0.4.0
            outputs:
              - name: bucket_name
                description: The name of the COS bucket instance
              - name: id
                description: The ID of the COS bucket instance
              - name: crn
                description: The CRN of the COS bucket instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
              - id: activity_tracker
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-activity-tracker
                    version: '>= 1.0.0'
                optional: true
              - id: metrics_monitoring
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: cos_instance_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: id of the COS instance
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                type: string
                description: The crn of the root key in the KMS
                default: "null"
                optional: true
              - name: activity_tracker_crn
                moduleRef:
                  id: activity_tracker
                  output: crn
                optional: true
                type: string
                description: The crn of the Activity Tracking instance
                default: "null"
              - name: metrics_monitoring_crn
                moduleRef:
                  id: metrics_monitoring
                  output: crn
                optional: true
                type: string
                description: The crn of the Metrics Monitoring instance
                default: "null"
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: Bucket region
              - name: name_prefix
                scope: global
                type: string
                description: The name of the cos resource
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: name
                type: string
                description: Name of the bucket
                default: ""
                optional: true
              - name: label
                type: string
                description: Label used to build the bucket name of not provided.
                default: bucket
                optional: true
              - name: storage_class
                type: string
                description: Storage class of the bucket. Supported values are standard, vault, cold, flex, smart.
                default: standard
                optional: true
            version: v0.3.0
            outputs:
              - name: bucket_name
                description: The name of the COS bucket instance
              - name: id
                description: The ID of the COS bucket instance
              - name: crn
                description: The CRN of the COS bucket instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: cos_instance_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: id of the COS instance
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                type: string
                description: The crn of the root key in the KMS
                default: "null"
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: Bucket region
              - name: name_prefix
                scope: global
                type: string
                description: The name of the cos resource
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: name
                type: string
                description: Name of the bucket
                default: ""
                optional: true
              - name: label
                type: string
                description: Label used to build the bucket name of not provided.
                default: bucket
                optional: true
              - name: storage_class
                type: string
                description: Storage class of the bucket. Supported values are standard, vault, cold, flex, smart.
                default: standard
                optional: true
            version: v0.2.2
            outputs:
              - name: bucket_name
                description: The name of the COS bucket instance
              - name: id
                description: The ID of the COS bucket instance
              - name: crn
                description: The CRN of the COS bucket instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: cos_instance_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: id of the COS instance
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                type: string
                description: The crn of the root key in the KMS
                default: "null"
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: Bucket region
              - name: name_prefix
                scope: global
                type: string
                description: The name of the cos resource
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: name
                type: string
                description: Name of the bucket
                default: ""
                optional: true
              - name: label
                type: string
                description: Label used to build the bucket name of not provided.
                default: bucket
                optional: true
              - name: storage_class
                type: string
                description: Storage class of the bucket. Supported values are standard, vault, cold, flex, smart.
                default: standard
                optional: true
            version: v0.2.1
            outputs:
              - name: bucket_name
                description: The name of the COS bucket instance
              - name: id
                description: The ID of the COS bucket instance
              - name: crn
                description: The CRN of the COS bucket instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: cos_instance_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: id of the COS instance
                default: ""
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                type: string
                description: The crn of the root key in the KMS
                default: "null"
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: Bucket region
              - name: name_prefix
                scope: global
                type: string
                description: The name of the cos resource
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: name
                type: string
                description: Name of the bucket
                default: ""
                optional: true
              - name: label
                type: string
                description: Label used to build the bucket name of not provided.
                default: bucket
                optional: true
              - name: storage_class
                type: string
                description: Storage class of the bucket. Supported values are standard, vault, cold, flex, smart.
                default: standard
                optional: true
            version: v0.2.0
            outputs:
              - name: bucket_name
                description: The name of the COS bucket instance
              - name: id
                description: The ID of the COS bucket instance
              - name: crn
                description: The CRN of the COS bucket instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: cos_instance_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: id of the COS instance
                default: ""
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                type: string
                description: The crn of the root key in the KMS
                default: "null"
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: Bucket region
              - name: name_prefix
                scope: global
                type: string
                description: The name of the cos resource
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: name
                type: string
                description: Name of the bucket
                default: ""
                optional: true
              - name: storage_class
                type: string
                description: Storage class of the bucket. Supported values are standard, vault, cold, flex, smart.
                default: standard
                optional: true
            version: v0.1.5
            outputs:
              - name: bucket_name
                description: The name of the COS bucket instance
              - name: id
                description: The ID of the COS bucket instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: cos_instance_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: id of the COS instance
                default: ""
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                type: string
                description: The crn of the root key in the KMS
                default: "null"
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: Bucket region
              - name: name_prefix
                scope: global
                type: string
                description: The name of the cos resource
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: name
                type: string
                description: Name of the bucket
                default: ""
                optional: true
              - name: storage_class
                type: string
                description: Storage class of the bucket. Supported values are standard, vault, cold, flex, smart.
                default: standard
                optional: true
            version: v0.1.4
            outputs:
              - name: bucket_name
                description: The name of the COS bucket instance
              - name: id
                description: The ID of the COS bucket instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: cos
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: cos_instance_id
                moduleRef:
                  id: cos
                  output: id
                type: string
                description: id of the COS instance
                default: ""
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                type: string
                description: The crn of the root key in the KMS
                default: "null"
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: Bucket region
              - name: name_prefix
                scope: global
                type: string
                description: The name of the cos resource
                default: ""
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: name
                type: string
                description: Name of the bucket
                default: ""
                optional: true
              - name: storage_class
                type: string
                description: Storage class of the bucket. Supported values are standard, vault, cold, flex, smart.
                default: standard
                optional: true
            version: v0.1.3
            outputs:
              - name: bucket_name
                description: The name of the COS bucket instance
              - name: id
                description: The ID of the COS bucket instance
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-redis
        name: ibm-redis
        type: terraform
        description: Module to provision a managed Redis instance in an IBM Cloud account
        tags:
          - service
          - data
          - cache
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                alias: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false, then the instance is expected to exist already.
                default: true
                optional: true
              - name: private_endpoints
                type: bool
                description: Flag indicating that private endpoints should be enabled. Otherwise public-and-private endpoints will be provisioned.
                default: true
                optional: true
              - name: name
                type: string
                description: The name of the resource. If not provided, the value will default to {name_prefix}-{label}
                default: ""
                optional: true
              - name: label
                type: string
                description: The label of the resource used to build the name along with the name_prefix.
                default: redis
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, standard)
                default: standard
                optional: true
            version: v2.1.1
            outputs:
              - name: id
                description: The id of the provisioned redis instance
              - name: name
                description: The name of the provisioned redis instance
              - name: crn
                description: The id of the provisioned redis instance
              - name: location
                description: The location of the provisioned redis instance
              - name: key_name
                description: The name of the key provisioned for the redis instance
              - name: key_id
                description: The id of the key provisioned for the redis instance
              - name: service
                description: The name of the key provisioned for the redis instance
              - name: label
                description: The label for the redis instance
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-cp-app-connect
        name: cp-app-connect
        type: terraform
        description: Module to install App Connect in the cluster
        tags:
          - tools
          - devops
        provider: ibm
        versions:
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
                    default: true
              - id: cp-catalog
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cp-catalog
                    version: '>= 1.0.0'
              - id: platform-navigator
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cp-platform-navigator
                    version: '>= 1.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster
                default: ocp4
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The location of the kube config
              - name: catalog_name
                moduleRef:
                  id: cp-catalog
                  output: name
                type: string
                description: The name of the Cloud Pak catalog
                default: ibm-operator-catalog
                optional: true
              - name: platform-navigator-name
                moduleRef:
                  id: platform-navigator
                  output: name
                type: string
                description: The name of the platform navigator instance
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: app-connect
                type: string
                description: The namespace where the platform navigator should be installed
                default: cp4i
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
              - name: storage_class
                scope: global
                type: string
                description: The storage class that should be used for the dashboard and designer
                default: ""
                optional: true
              - name: dashboard
                type: bool
                description: Flag to install the dashboard
                default: true
                optional: true
              - name: channel
                type: string
                description: The channel from which the App Connect instance will be deployed
                default: v1.5
                optional: true
              - name: license
                type: string
                description: The license key that should be applied
                default: L-KSBM-BZWEAT
                optional: true
            version: v1.1.0
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ocp-login
                    version: '>= 1.0.0'
                    default: true
              - id: cp-catalog
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cp-catalog
                    version: '>= 1.0.0'
              - id: platform-navigator
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cp-platform-navigator
                    version: '>= 1.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster
                default: ocp4
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The location of the kube config
              - name: catalog_name
                moduleRef:
                  id: cp-catalog
                  output: name
                type: string
                description: The name of the Cloud Pak catalog
                default: ibm-operator-catalog
                optional: true
              - name: platform-navigator-name
                moduleRef:
                  id: platform-navigator
                  output: name
                type: string
                description: The name of the platform navigator instance
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: app-connect
                type: string
                description: The namespace where the platform navigator should be installed
                default: cp4i
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
              - name: storage_class
                scope: global
                type: string
                description: The storage class that should be used for the dashboard and designer
                default: ""
                optional: true
              - name: dashboard
                type: bool
                description: Flag to install the dashboard
                default: true
                optional: true
              - name: channel
                type: string
                description: The channel from which the App Connect instance will be deployed
                default: v1.5
                optional: true
            version: v1.0.2
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: cp-catalog
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cp-catalog
                    version: '>= 1.0.0'
              - id: platform-navigator
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cp-platform-navigator
                    version: '>= 1.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster
                default: ocp4
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The location of the kube config
              - name: catalog_name
                moduleRef:
                  id: cp-catalog
                  output: name
                type: string
                description: The name of the Cloud Pak catalog
                default: ibm-operator-catalog
                optional: true
              - name: platform-navigator-name
                moduleRef:
                  id: platform-navigator
                  output: name
                type: string
                description: The name of the platform navigator instance
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: app-connect
                type: string
                description: The namespace where the platform navigator should be installed
                default: cp4i
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
              - name: storage_class
                scope: global
                type: string
                description: The storage class that should be used for the dashboard and designer
                default: ""
                optional: true
              - name: dashboard
                type: bool
                description: Flag to install the dashboard
                default: true
                optional: true
            version: v1.0.1
          - platforms:
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: cp-catalog
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cp-catalog
                    version: '>= 1.7.0'
              - id: platform-navigator
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cp-platform-navigator
                    version: '>= 1.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster
                default: ocp4
                optional: true
              - name: cluster_config_file
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The location of the kube config
              - name: catalog_name
                moduleRef:
                  id: cp-catalog
                  output: name
                type: string
                description: The name of the Cloud Pak catalog
                default: ibm-operator-catalog
                optional: true
              - name: platform-navigator-name
                moduleRef:
                  id: platform-navigator
                  output: name
                type: string
                description: The name of the platform navigator instance
                default: ""
                optional: true
              - name: namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: app-connect
                type: string
                description: The namespace where the platform navigator should be installed
                default: cp4i
                optional: true
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
              - name: storage_class
                scope: global
                type: string
                description: The storage class that should be used for the dashboard and designer
                default: ""
                optional: true
              - name: dashboard
                type: bool
                description: Flag to install the dashboard
                default: true
                optional: true
            version: v1.0.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
      - id: github.com/cloud-native-toolkit/terraform-ibm-hpdbaas-postgresql
        name: ibm-hbdbaas-postgresql
        type: terraform
        description: Module to provision Hyper Protect DBaaS for PostgreSQL instance
        tags:
          - tools
          - infrastructure
          - postgresql
          - hyper protect
          - saas
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then it assumed that an instance already exists.
                default: true
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: label
                type: string
                description: The label used to build the database name, along with the name_prefix
                default: hpdbaas-postrgesql
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (postgresql-free, postgresql-flexible)
                default: postgresql-free
                optional: true
              - name: private_endpoint
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: role
                type: string
                description: The role of the generated credential (Viewer, Administrator, Operator, Editor)
                default: Editor
                optional: true
              - name: hpcs_instance_id
                type: string
                description: The id of the hpcs instance
                default: ""
                optional: true
              - name: hpcs_key
                type: string
                description: The id of the key in the hpcs instance
                default: ""
                optional: true
              - name: cluster_name
                type: string
                description: The name of the database cluster
              - name: admin_name
                type: string
                description: The name of the database admin
              - name: password
                type: string
                description: The password of database admin(15 characters minimum, at least one uppercase character, one lowercase character and one number)
              - name: storage
                type: string
                description: The name of the database admin
                default: 5GiB
                optional: true
              - name: memory
                type: string
                description: The name of the database admin
                default: 3GiB
                optional: true
              - name: cpu
                type: string
                description: The name of the database admin
                default: "1"
                optional: true
              - name: db_version
                type: string
                description: The version of postgresql database to provision
                default: "10"
                optional: true
            version: v1.1.0
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then it assumed that an instance already exists.
                default: true
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: label
                type: string
                description: The label used to build the database name, along with the name_prefix
                default: hpdbaas-mongodb
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (postgresql-free, postgresql-flexible)
                default: postgresql-free
                optional: true
              - name: private_endpoint
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: role
                type: string
                description: The role of the generated credential (Viewer, Administrator, Operator, Editor)
                default: Editor
                optional: true
              - name: hpcs_instance_id
                type: string
                description: The id of the hpcs instance
                default: ""
                optional: true
              - name: hpcs_key
                type: string
                description: The id of the key in the hpcs instance
                default: ""
                optional: true
              - name: cluster_name
                type: string
                description: The name of the database cluster
              - name: admin_name
                type: string
                description: The name of the database admin
              - name: password
                type: string
                description: The password of database admin(15 characters minimum, at least one uppercase character, one lowercase character and one number)
              - name: storage
                type: string
                description: The name of the database admin
                default: 5GiB
                optional: true
              - name: memory
                type: string
                description: The name of the database admin
                default: 3GiB
                optional: true
              - name: cpu
                type: string
                description: The name of the database admin
                default: "1"
                optional: true
              - name: db_version
                type: string
                description: The version of postgresql database to provision
                default: "10"
                optional: true
            version: v1.0.0
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then it assumed that an instance already exists.
                default: true
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: label
                type: string
                description: The label used to build the database name, along with the name_prefix
                default: hpdbaas-mongodb
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (mongodb-free, mongodb-flexible)
                default: mongodb-free
                optional: true
              - name: private_endpoint
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: role
                type: string
                description: The role of the generated credential (Viewer, Administrator, Operator, Editor)
                default: Editor
                optional: true
              - name: hpcs_instance_id
                type: string
                description: The id of the hpcs instance
                default: ""
                optional: true
              - name: hpcs_key
                type: string
                description: The id of the key in the hpcs instance
                default: ""
                optional: true
              - name: cluster_name
                type: string
                description: The name of the database cluster
              - name: admin_name
                type: string
                description: The name of the database admin
              - name: password
                type: string
                description: The password of database admin(15 characters minimum, at least one uppercase character, one lowercase character and one number)
              - name: storage
                type: string
                description: The name of the database admin
                default: 5GiB
                optional: true
              - name: memory
                type: string
                description: The name of the database admin
                default: 3GiB
                optional: true
              - name: cpu
                type: string
                description: The name of the database admin
                default: "1"
                optional: true
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-hpdbaas-mongodb
        name: ibm-hpdbaas-mongodb
        type: terraform
        description: Module to provision Hyper Protect DBaaS for MongoDB instance
        tags:
          - tools
          - infrastructure
          - mongodb
          - saas
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: hpcs_instance_id
                moduleRef:
                  id: kms_key
                  output: kms_id
              - name: hpcs_key
                moduleRef:
                  id: kms_key
                  output: id
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: region
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then it assumed that an instance already exists.
                default: true
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: label
                type: string
                description: The label used to build the database name, along with the name_prefix
                default: hpdbaas-mongodb
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (mongodb-free, mongodb-flexible)
                default: mongodb-free
                optional: true
              - name: private_endpoint
                type: string
                description: Flag indicating that the service should be created with private endpoints
                default: "true"
                optional: true
              - name: role
                type: string
                description: The role of the generated credential (Viewer, Administrator, Operator, Editor)
                default: Editor
                optional: true
              - name: hpcs_instance_id
                type: string
                description: The id of the hpcs instance
                default: ""
                optional: true
              - name: hpcs_key
                type: string
                description: The id of the key in the hpcs instance
                default: ""
                optional: true
              - name: cluster_name
                type: string
                description: The name of the database cluster
              - name: admin_name
                type: string
                description: The name of the database admin
              - name: password
                type: string
                description: The password of database admin(15 characters minimum, at least one uppercase character, one lowercase character and one number)
              - name: storage
                type: string
                description: The name of the database admin
                default: 5GiB
                optional: true
              - name: memory
                type: string
                description: The name of the database admin
                default: 3GiB
                optional: true
              - name: cpu
                type: string
                description: The name of the database admin
                default: "1"
                optional: true
            version: v1.0.0
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            version: v0.0.0
            variables:
              - name: resource_group_name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: name_prefix
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (standard)
                default: standard
                optional: true
              - name: role
                type: string
                description: The role of the generated credential (Viewer, Administrator, Operator, Editor)
                default: Editor
                optional: true
              - name: key-protect-region
                type: string
                description: The region where the Key Protect instance has been provisioned. If not provided defaults to the same region as the MongoDB instance
                default: ""
                optional: true
              - name: key-protect-resource-group
                type: string
                description: The resource group where the Key Protect instance has been provisioned. If not provided defaults to the same resource group as the MongoDB instance
                default: ""
                optional: true
              - name: key-protect-name
                type: string
                description: The name of the Key Protect instance
                default: ""
                optional: true
              - name: key-protect-key
                type: string
                description: The name of the key in the Key Protect instance
                default: ""
                optional: true
              - name: authorize-kms
                type: bool
                description: Flag indicating that the authorization for MongoDB to read keys in the KMS should be created
                default: false
                optional: true
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-event-streams
        name: ibm-event-streams
        alias: event-streams
        type: terraform
        description: |
          Module to work with an IBM Cloud Event Streams instance. If the `provision` flag is true then an new instance
          of IBM Cloud Event Streams is provisioned. Otherwise, the module will find an existing instance with the
          provided name and create a credential. The name and id of the Event Streams instance as well as the name and id
          of the credential instance are exported from the module for use by other modules.
        tags:
          - tools
          - infrastructure
          - event streams
          - saas
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, standard, or enterprise)
                default: standard
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
              - name: label
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: event-streams
                optional: true
              - name: private_endpoints
                type: bool
                description: 'Flag indicating that the service should only use private endpoints. (Note: this option is only available for the enterprise plan)'
                default: true
                optional: true
              - name: private_ip_allowlist
                type: list(string)
                description: 'The list of ip address ranges that are allowed to access the service. (Note: this option is only available for the enterprise plan. See https://cloud.ibm.com/docs/EventStreams?topic=EventStreams-restrict_access for more details)'
                default: null
                optional: true
              - name: throughput
                type: string
                description: 'For enterprise instance only. Options are: ''150'', ''300'', ''450''. Default is ''150'''
                default: "null"
                optional: true
              - name: storage_size
                type: string
                description: 'for enterprise instance only. Options are: ''2048'', ''4096'', ''6144'', ''8192'', ''10240'', ''12288''. Default is ''2048''.'
                default: "null"
                optional: true
            version: v1.1.0
            outputs:
              - name: id
                description: The Event Streams instance id
              - name: name
                description: The Event Streams instance name
              - name: crn
                description: The crn of the Event Streams instance
              - name: location
                description: The Event Streams instance location
              - name: key_name
                description: The name of the credential provisioned for the Event Streams instance
              - name: key_id
                description: The name of the credential provisioned for the Event Streams instance
              - name: service
                description: The name of the key provisioned for the Event Streams instance
              - name: label
                description: The label used for the Event Streams instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name
                scope: ignore
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, standard, or enterprise)
                default: standard
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that key-protect instance should be provisioned
                default: true
                optional: true
              - name: label
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: event-streams
                optional: true
            version: v1.0.0
            outputs:
              - name: id
                description: The Event Streams instance id
              - name: name
                description: The Event Streams instance name
              - name: crn
                description: The crn of the Event Streams instance
              - name: location
                description: The Event Streams instance location
              - name: key_name
                description: The name of the credential provisioned for the Event Streams instance
              - name: key_id
                description: The name of the credential provisioned for the Event Streams instance
              - name: service
                description: The name of the key provisioned for the Event Streams instance
              - name: label
                description: The label used for the Event Streams instance
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-event-streams-topic
        name: ibm-event-streams-topic
        alias: topic
        type: terraform
        description: Module to provision a topic in an existing managed IBM Cloud Event Streams instance
        tags:
          - tools
          - kafka
          - event streams
          - topic
        versions:
          - platforms: []
            dependencies:
              - id: event_streams
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-event-streams
                    version: '>= 1.0.0'
            variables:
              - name: event_streams_id
                moduleRef:
                  id: event_streams
                  output: id
                type: string
                description: The id of the event streams instance where the topic will be created
              - name: region
                moduleRef:
                  id: event_streams
                  output: location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: name
                type: string
                description: The name of the topic
              - name: partitions
                type: number
                description: The number of partitions of the topic. Default value is 1.
                default: 1
                optional: true
              - name: cleanup_policy
                type: string
                description: The cleanup policy for the topic
                default: "null"
                optional: true
              - name: retention_ms
                type: string
                default: "null"
                optional: true
              - name: retention_bytes
                type: string
                default: "null"
                optional: true
              - name: segment_bytes
                type: string
                default: "null"
                optional: true
              - name: segment_ms
                type: string
                default: "null"
                optional: true
              - name: segment_index_bytes
                type: string
                default: "null"
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the topic should be provisioned. If not then an existing topic will be looked up
                default: true
                optional: true
            version: v1.0.0
            outputs:
              - name: id
                description: output "id" {   value = data.ibm_event_streams_topic.topic.id }
              - name: kafka_http_url
                description: output "kafka_http_url" {   value = data.ibm_event_streams_topic.topic.kafka_http_url }
              - name: kafka_brokers_sasl
                description: output "kafka_brokers_sasl" {   value = data.ibm_event_streams_topic.topic.kafka_brokers_sasl }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-cert-manager
        name: ibm-cert-manager
        type: terraform
        description: Module to provision an IBM Cloud Certificate Manager instance.
        tags:
          - ibm cloud
          - certificate
          - cert manager
        versions:
          - platforms: []
            providers:
              - name: ibm
                source: ibm-cloud/ibm
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.0'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the Certificate Manager instance will be/has been provisioned.
              - name: kms_id
                moduleRef:
                  id: kms_key
                  output: kms_id
                type: string
                description: The crn of the KMS instance that will be used to encrypt the instance.
                default: "null"
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                type: string
                description: The crn of the root key in the KMS
                default: "null"
                optional: true
              - name: kms_private_url
                moduleRef:
                  id: kms_key
                  output: kms_private_url
                type: string
                description: The private url of the KMS instance that will be used to encrypt the instance.
                default: "null"
                optional: true
              - name: kms_public_url
                moduleRef:
                  id: kms_key
                  output: kms_public_url
                type: string
                description: The public url of the KMS instance that will be used to encrypt the instance.
                default: "null"
                optional: true
              - name: region
                scope: global
                type: string
                description: The region where the Certificate Manager will be/has been provisioned.
              - name: name_prefix
                scope: global
                type: string
                description: The name prefix for the Certificate Manager resource. If not provided will default to resource group name.
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that kms encryption should be enabled for this instance
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating the KMS private endpoint should be used
                default: true
                optional: true
              - name: name
                type: string
                description: Name of the Certificate Manager. If not provided will be generated as $name_prefix-$label
                default: ""
                optional: true
              - name: label
                type: string
                description: Label used to build the Certificate Manager name if not provided.
                default: cm
                optional: true
              - name: private_endpoint
                type: bool
                description: Flag indicating that the service should be access using private endpoints
                default: true
                optional: true
            version: v1.0.2
            outputs:
              - name: id
                description: The Object Storage instance id
              - name: name
                description: The Object Storage instance name
              - name: crn
                description: The crn of the Object Storage instance
              - name: location
                description: The Object Storage instance location
              - name: service
                description: The name of the key provisioned for the Object Storage instance
              - name: label
                description: The label used for the Object Storage instance
              - name: type
                description: The type of the resource
          - platforms: []
            providers:
              - name: ibm
                source: ibm-cloud/ibm
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.0'
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the Certificate Manager instance will be/has been provisioned.
              - name: kms_id
                moduleRef:
                  id: kms_key
                  output: kms_id
                type: string
                description: The crn of the KMS instance that will be used to encrypt the instance.
                default: "null"
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                type: string
                description: The crn of the root key in the KMS
                default: "null"
                optional: true
              - name: kms_private_url
                moduleRef:
                  id: kms_key
                  output: kms_private_url
                type: string
                description: The private url of the KMS instance that will be used to encrypt the instance.
                default: "null"
                optional: true
              - name: kms_public_url
                moduleRef:
                  id: kms_key
                  output: kms_public_url
                type: string
                description: The public url of the KMS instance that will be used to encrypt the instance.
                default: "null"
                optional: true
              - name: region
                scope: global
                type: string
                description: The region where the Certificate Manager will be/has been provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that kms encryption should be enabled for this instance
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating the KMS private endpoint should be used
                default: true
                optional: true
              - name: name_prefix
                type: string
                description: The name prefix for the Certificate Manager resource. If not provided will default to resource group name.
                default: ""
                optional: true
              - name: name
                type: string
                description: Name of the Certificate Manager. If not provided will be generated as $name_prefix-$label
                default: ""
                optional: true
              - name: label
                type: string
                description: Label used to build the Certificate Manager name if not provided.
                default: cm
                optional: true
              - name: private_endpoint
                type: bool
                description: Flag indicating that the service should be access using private endpoints
                default: true
                optional: true
            version: v1.0.1
            outputs:
              - name: id
                description: The Object Storage instance id
              - name: name
                description: The Object Storage instance name
              - name: crn
                description: The crn of the Object Storage instance
              - name: location
                description: The Object Storage instance location
              - name: service
                description: The name of the key provisioned for the Object Storage instance
              - name: label
                description: The label used for the Object Storage instance
              - name: type
                description: The type of the resource
          - platforms: []
            providers:
              - name: ibm
                source: ibm-cloud/ibm
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the Certificate Manager instance will be/has been provisioned.
              - name: kms_id
                moduleRef:
                  id: kms_key
                  output: kms_id
                type: string
                description: The crn of the KMS instance that will be used to encrypt the instance.
                default: "null"
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                type: string
                description: The crn of the root key in the KMS
                default: "null"
                optional: true
              - name: kms_private_url
                moduleRef:
                  id: kms_key
                  output: kms_private_url
                type: string
                description: The private url of the KMS instance that will be used to encrypt the instance.
                default: "null"
                optional: true
              - name: kms_public_url
                moduleRef:
                  id: kms_key
                  output: kms_public_url
                type: string
                description: The public url of the KMS instance that will be used to encrypt the instance.
                default: "null"
                optional: true
              - name: region
                scope: global
                type: string
                description: The region where the Certificate Manager will be/has been provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that kms encryption should be enabled for this instance
                default: false
                optional: true
              - name: kms_private_endpoint
                type: bool
                description: Flag indicating the KMS private endpoint should be used
                default: true
                optional: true
              - name: name_prefix
                type: string
                description: The name prefix for the Certificate Manager resource. If not provided will default to resource group name.
                default: ""
                optional: true
              - name: name
                type: string
                description: Name of the Certificate Manager. If not provided will be generated as $name_prefix-$label
                default: ""
                optional: true
              - name: label
                type: string
                description: Label used to build the Certificate Manager name if not provided.
                default: cm
                optional: true
              - name: private_endpoint
                type: bool
                description: Flag indicating that the service should be access using private endpoints
                default: true
                optional: true
            version: v1.0.0
            outputs:
              - name: id
                description: The Object Storage instance id
              - name: name
                description: The Object Storage instance name
              - name: crn
                description: The crn of the Object Storage instance
              - name: location
                description: The Object Storage instance location
              - name: service
                description: The name of the key provisioned for the Object Storage instance
              - name: label
                description: The label used for the Object Storage instance
              - name: type
                description: The type of the resource
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-cert-manager-cert
        name: ibm-cert-manager-cert
        type: terraform
        description: Module to upload and/or retrieve a certificate and private key from IBM Certificate Manager
        tags:
          - ibm
          - certificate manager
          - certificate
        versions:
          - platforms: []
            providers:
              - name: ibm
                source: ibm-cloud/ibm
            dependencies:
              - id: cert_manager
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cert-manager
                    version: '>= 1.0.0'
              - id: cert
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-util-sealed-secret-cert
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: cert_manager_id
                moduleRef:
                  id: cert_manager
                  output: id
                type: string
                description: The id of the certificate manager instance
              - name: cert
                moduleRef:
                  id: cert
                  output: cert
                type: string
                description: The value for the certificate that will be imported
                default: ""
                optional: true
              - name: private_key
                moduleRef:
                  id: cert
                  output: private_key
                type: string
                description: The private key for the certificate that will be imported
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name
                type: string
                description: The name of the certificate
              - name: provision
                type: bool
                description: Flag indicating that the certificate should be provisioned. If false the certificate will be looked up
                default: true
                optional: true
            version: v1.0.4
            outputs:
              - name: private_key
                description: output "private_key" {   value = data.ibm_certificate_manager_certificate.cert.certificate_details[0].data.priv_key   sensitive = true }
              - name: cert
                description: output "cert" {   value = data.ibm_certificate_manager_certificate.cert.certificate_details[0].data.content }
          - platforms: []
            providers:
              - name: ibm
                source: ibm-cloud/ibm
            dependencies:
              - id: cert_manager
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-cert-manager
                    version: '>= 1.0.0'
              - id: cert
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-util-sealed-secret-cert
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: cert_manager_id
                moduleRef:
                  id: cert_manager
                  output: id
                type: string
                description: The id of the certificate manager instance
              - name: cert
                moduleRef:
                  id: cert
                  output: cert
                type: string
                description: The value for the certificate that will be imported
                default: ""
                optional: true
              - name: cert
                moduleRef:
                  id: cert
                  output: private_key
                type: string
                description: The value for the certificate that will be imported
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name
                type: string
                description: The name of the certificate
              - name: provision
                type: bool
                description: Flag indicating that the certificate should be provisioned. If false the certificate will be looked up
                default: true
                optional: true
              - name: private_key
                type: string
                description: The private key for the certificate that will be imported
                default: ""
                optional: true
            version: v1.0.3
            outputs:
              - name: private_key
                description: output "private_key" {   value = data.ibm_certificate_manager_certificate.cert.certificate_details[0].data.priv_key   sensitive = true }
              - name: cert
                description: output "cert" {   value = data.ibm_certificate_manager_certificate.cert.certificate_details[0].data.content }
        provider: ibm
  - category: network
    categoryName: Network
    selection: multiple
    modules:
      - id: github.com/cloud-native-toolkit/terraform-ibm-vpc
        name: ibm-vpc
        type: terraform
        description: Provisions the IBM Cloud VPC instance with network acls
        tags:
          - infrastructure
          - networking
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: base_security_group_name
                type: string
                description: The name of the base security group. If not provided the name will be based on the vpc name
                default: ""
                optional: true
            version: v1.11.7
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
              - name: count
                description: The number of VPCs created by this module. Always set to 1
              - name: names
                description: The name of the vpc instance
              - name: ids
                description: The id of the vpc instance
              - name: base_security_group
                description: The id of the base security group to be shared by other resources. The base group is different from the default security group.
              - name: addresses
                description: The ip address ranges for the VPC
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
            version: v1.11.6
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
              - name: count
                description: The number of VPCs created by this module. Always set to 1
              - name: names
                description: The name of the vpc instance
              - name: ids
                description: The id of the vpc instance
              - name: base_security_group
                description: The id of the base security group to be shared by other resources. The base group is different from the default security group.
              - name: addresses
                description: The ip address ranges for the VPC
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
            version: v1.11.5
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
              - name: count
                description: The number of VPCs created by this module. Always set to 1
              - name: names
                description: The name of the vpc instance
              - name: ids
                description: The id of the vpc instance
              - name: base_security_group
                description: The id of the base security group to be shared by other resources. The base group is different from the default security group.
              - name: addresses
                description: The ip address ranges for the VPC
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
            version: v1.11.4
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
              - name: count
                description: The number of VPCs created by this module. Always set to 1
              - name: names
                description: The name of the vpc instance
              - name: ids
                description: The id of the vpc instance
              - name: base_security_group
                description: The id of the base security group to be shared by other resources. The base group is different from the default security group.
              - name: addresses
                description: The ip address ranges for the VPC
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
            version: v1.11.3
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
              - name: count
                description: The number of VPCs created by this module. Always set to 1
              - name: names
                description: The name of the vpc instance
              - name: ids
                description: The id of the vpc instance
              - name: base_security_group
                description: The id of the base security group to be shared by other resources. The base group is different from the default security group.
              - name: addresses
                description: The ip address ranges for the VPC
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
            version: v1.11.2
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
              - name: count
                description: The number of VPCs created by this module. Always set to 1
              - name: names
                description: The name of the vpc instance
              - name: ids
                description: The id of the vpc instance
              - name: base_security_group
                description: The id of the base security group to be shared by other resources. The base group is different from the default security group.
              - name: addresses
                description: The ip address ranges for the VPC
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
            version: v1.11.1
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
              - name: count
                description: The number of VPCs created by this module. Always set to 1
              - name: names
                description: The name of the vpc instance
              - name: ids
                description: The id of the vpc instance
              - name: base_security_group
                description: The id of the base security group to be shared by other resources. The base group is different from the default security group.
              - name: addresses
                description: The ip address ranges for the VPC
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
            version: v1.11.0
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
              - name: count
                description: The number of VPCs created by this module. Always set to 1
              - name: names
                description: The name of the vpc instance
              - name: ids
                description: The id of the vpc instance
              - name: base_security_group
                description: The id of the base security group to be shared by other resources. The base group is different from the default security group.
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
            version: v1.10.3
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
              - name: count
                description: The number of VPCs created by this module. Always set to 1
              - name: names
                description: The name of the vpc instance
              - name: ids
                description: The id of the vpc instance
              - name: base_security_group
                description: The id of the base security group to be shared by other resources. The base group is different from the default security group.
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
            version: v1.10.2
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
              - name: count
                description: The number of VPCs created by this module. Always set to 1
              - name: names
                description: The name of the vpc instance
              - name: ids
                description: The id of the vpc instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
            version: v1.10.1
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
              - name: count
                description: The number of VPCs created by this module. Always set to 1
              - name: names
                description: The name of the vpc instance
              - name: ids
                description: The id of the vpc instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
            version: v1.10.0
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
              - name: count
                description: The number of VPCs created by this module. Always set to 1
              - name: names
                description: The name of the vpc instance
              - name: ids
                description: The id of the vpc instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: auth
                refs: []
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: auth_id
                moduleRef:
                  id: auth
                  output: id
                optional: true
                type: string
                description: The id of the authorization policy that allows the Flow Log to access the Object Storage bucket. This is optional and provided to sequence the authorization before the flow log creation.
                default: ""
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
            version: v1.9.4
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
              - name: count
                description: The number of VPCs created by this module. Always set to 1
              - name: names
                description: The name of the vpc instance
              - name: ids
                description: The id of the vpc instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: auth
                refs: []
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: auth_id
                moduleRef:
                  id: auth
                  output: id
                optional: true
                type: string
                description: The id of the authorization policy that allows the Flow Log to access the Object Storage bucket. This is optional and provided to sequence the authorization before the flow log creation.
                default: ""
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
            version: v1.9.3
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
              - name: count
                description: The number of VPCs created by this module. Always set to 1
              - name: names
                description: The name of the vpc instance
              - name: ids
                description: The id of the vpc instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: auth
                refs: []
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: auth_id
                moduleRef:
                  id: auth
                  output: id
                optional: true
                type: string
                description: The id of the authorization policy that allows the Flow Log to access the Object Storage bucket. This is optional and provided to sequence the authorization before the flow log creation.
                default: ""
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
            version: v1.9.2
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: auth
                refs: []
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: auth_id
                moduleRef:
                  id: auth
                  output: id
                optional: true
                type: string
                description: The id of the authorization policy that allows the Flow Log to access the Object Storage bucket. This is optional and provided to sequence the authorization before the flow log creation.
                default: ""
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
            version: v1.9.1
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: auth
                refs: []
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: auth_id
                moduleRef:
                  id: auth
                  output: id
                optional: true
                type: string
                description: The id of the authorization policy that allows the Flow Log to access the Object Storage bucket. This is optional and provided to sequence the authorization before the flow log creation.
                default: ""
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: address_prefix_count
                type: number
                description: The number of ipv4_cidr_blocks
                default: 0
                optional: true
              - name: address_prefixes
                type: list(string)
                description: List of ipv4 cidr blocks for the address prefixes (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
            version: v1.9.0
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
            version: v1.8.3
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
              - name: flow-log-cos-bucket-name
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
                optional: true
            version: v1.8.2
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
            version: v1.8.1
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned. If false then an existing instance will be looked up
                default: true
                optional: true
            version: v1.8.0
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
            version: v1.7.4
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
            version: v1.7.3
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
            version: v1.7.2
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
              - name: crn
                description: The CRN for the vpc instance
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC instance will be created.
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC instance will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: module
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
            version: v1.7.1
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
              - name: region
                scope: global
                type: string
              - name: name
                scope: ignore
                type: string
              - name: name_prefix
                scope: global
                type: string
              - name: ibmcloud_api_key
                scope: global
                type: string
            version: v1.7.0
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: acl_id
                description: The id of the network acl
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
              - name: region
                scope: global
                type: string
              - name: name
                scope: ignore
                type: string
              - name: name_prefix
                scope: global
                type: string
              - name: ibmcloud_api_key
                scope: global
                type: string
              - name: subnet_count
                scope: ignore
                type: string
              - name: subnets
                scope: module
                type: string
              - name: public_gateway
                scope: module
                type: string
            version: v1.6.0
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: subnet_count
                description: The total number of subnets for the vpc
              - name: subnet_label_counts
                description: The number of subnets for each label. e.g. [{label = 'default', count = 2}, {label = 'test', count = 1}]
              - name: zone_names
                description: The list of zone names that into which subnets were created
              - name: subnet_ids
                description: The list of subnet ids
              - name: subnets
                description: List of subnet objects that contain the subnet id and label, e.g. [{label='', id=''}]
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: ignore
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: subnet_count
                scope: ignore
                type: number
                description: (Deprecated) Number of subnets to create
                default: 0
                optional: true
              - name: subnets
                scope: module
                type: list(object({label = string}))
                description: The labeled subnets that should be created. Each entry in the list represents a different subnet
                default: []
                optional: true
              - name: public_gateway
                scope: module
                type: bool
                description: Flag indicating that a public gateway should be created
                default: true
                optional: true
            version: v1.5.2
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: subnet_count
                description: The total number of subnets for the vpc
              - name: subnet_label_counts
                description: The number of subnets for each label. e.g. [{label = 'default', count = 2}, {label = 'test', count = 1}]
              - name: zone_names
                description: The list of zone names that into which subnets were created
              - name: subnet_ids
                description: The list of subnet ids
              - name: subnets
                description: List of subnet objects that contain the subnet id and label, e.g. [{label='', id=''}]
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: ignore
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: subnet_count
                scope: ignore
                type: number
                description: (Deprecated) Number of subnets to create
                default: 0
                optional: true
              - name: subnets
                scope: module
                type: list(object({
                description: The labeled subnets that should be created. Each entry in the list represents a different subnet
                default: []
                optional: true
              - name: public_gateway
                scope: module
                type: bool
                description: Flag indicating that a public gateway should be created
                default: true
                optional: true
            version: v1.5.1
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: subnet_count
                description: The total number of subnets for the vpc
              - name: subnet_label_counts
                description: The number of subnets for each label. e.g. [{label = 'default', count = 2}, {label = 'test', count = 1}]
              - name: zone_names
                description: The list of zone names that into which subnets were created
              - name: subnet_ids
                description: The list of subnet ids
              - name: subnets
                description: List of subnet objects that contain the subnet id and label, e.g. [{label='', id=''}]
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: ignore
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: subnet_count
                scope: ignore
                type: number
                description: (Deprecated) Number of subnets to create
                default: 0
                optional: true
              - name: subnets
                scope: module
                type: list(object({
                description: The labeled subnets that should be created. Each entry in the list represents a different subnet
                default: []
                optional: true
              - name: public_gateway
                scope: module
                type: bool
                description: Flag indicating that a public gateway should be created
                default: true
                optional: true
            version: v1.5.0
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: subnet_count
                description: The total number of subnets for the vpc
              - name: subnet_label_counts
                description: The number of subnets for each label. e.g. [{label = 'default', count = 2}, {label = 'test', count = 1}]
              - name: zone_names
                description: The list of zone names that into which subnets were created
              - name: subnet_ids
                description: The list of subnet ids
              - name: subnets
                description: List of subnet objects that contain the subnet id and label, e.g. [{label='', id=''}]
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: ignore
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: subnet_count
                scope: module
                type: number
                description: Number of subnets for region
                default: 1
                optional: true
              - name: public_gateway
                scope: module
                type: bool
                description: Flag indicating that a public gateway should be created
                default: true
                optional: true
            version: v1.4.1
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: subnet_count
                description: The number of subnets for the vpc
              - name: zone_names
                description: The list of zone names that into which subnets were created
              - name: subnet_ids
                description: The list of subnet ids
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: ignore
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: subnet_count
                scope: module
                type: number
                description: Number of subnets for region
                default: 1
                optional: true
              - name: public_gateway
                scope: module
                type: bool
                description: Flag indicating that a public gateway should be created
                default: true
                optional: true
            version: v1.4.0
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: subnet_count
                description: The number of subnets for the vpc
              - name: zone_names
                description: The list of zone names that into which subnets were created
              - name: subnet_ids
                description: The list of subnet ids
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: ignore
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: subnet_count
                scope: module
                type: number
                description: Number of subnets for region
                default: 1
                optional: true
              - name: public_gateway
                scope: module
                type: bool
                description: Flag indicating that a public gateway should be created
                default: true
                optional: true
            version: v1.3.2
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: subnet_count
                description: The number of subnets for the vpc
              - name: zone_names
                description: The list of zone names that into which subnets were created
              - name: subnet_ids
                description: The list of subnet ids
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: ignore
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: subnet_count
                scope: module
                type: number
                description: Number of subnets for region
                default: 1
                optional: true
              - name: public_gateway
                scope: module
                type: bool
                description: Flag indicating that a public gateway should be created
                default: true
                optional: true
            version: v1.3.1
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: subnet_count
                description: The number of subnets for the vpc
              - name: zone_names
                description: The list of zone names that into which subnets were created
              - name: subnet_ids
                description: The list of subnet ids
          - platforms: []
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: ignore
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: subnet_count
                scope: module
                type: number
                description: Number of subnets for region
                default: 1
                optional: true
              - name: public_gateway
                scope: module
                type: bool
                description: Flag indicating that a public gateway should be created
                default: true
                optional: true
            version: v1.3.0
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: subnet_count
                description: The number of subnets for the vpc
              - name: zone_names
                description: The list of zone names that into which subnets were created
              - name: subnet_ids
                description: The list of subnet ids
          - platforms: []
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: ignore
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: subnet_count
                scope: module
                type: number
                description: Number of subnets for region
                default: 1
                optional: true
              - name: public_gateway
                scope: module
                type: bool
                description: Flag indicating that a public gateway should be created
                default: true
                optional: true
            version: v1.2.0
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: subnet_count
                description: The number of subnets for the vpc
              - name: zone_names
                description: The list of zone names that into which subnets were created
              - name: subnet_ids
                description: The list of subnet ids
          - platforms: []
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: ignore
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: subnet_count
                scope: module
                type: number
                description: Number of subnets for region
                default: 1
                optional: true
              - name: public_gateway
                scope: module
                type: bool
                description: Flag indicating that a public gateway should be created
                default: true
                optional: true
            version: v1.1.1
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: zone_names
                description: The list of zone names that into which subnets were created
              - name: subnet_ids
                description: The list of subnet ids
          - platforms: []
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name
                scope: ignore
                type: string
                description: The name of the vpc instance
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: subnet_count
                scope: module
                type: number
                description: Number of subnets for region
                default: 1
                optional: true
              - name: public_gateway
                scope: module
                type: bool
                description: Flag indicating that a public gateway should be created
                default: true
                optional: true
            version: v1.1.0
            outputs:
              - name: name
                description: The name of the vpc instance
              - name: id
                description: The id of the vpc instance
              - name: zone_names
                description: The list of zone names that into which subnets were created
              - name: subnet_ids
                description: The list of subnet ids
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
        name: ibm-vpc-gateways
        type: terraform
        description: Terraform module to provision public gateways for an existing VPC instance
        tags:
          - network
          - vpc
          - public gateway
        versions:
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC gateways will be created.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: subnet_count
                scope: ignore
                type: number
                description: The total number of subnets that will be provisioned in the VPC instance. This value will be used to determine how many gateways to create. At most, three gateways can be created (one for each zone) so the default should suffice in most cases. However, it might create more gateways than needed for small deployments in which case a number less than three can be used.
                default: 3
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the gateway must be provisioned
                default: true
                optional: true
            version: v1.5.1
            outputs:
              - name: count
                description: The number of gateways created
              - name: gateway_ids
                description: List of ids of the gateways created
              - name: gateways
                description: List of ids and zones of gateways created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC gateways will be created.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: subnet_count
                scope: ignore
                type: number
                description: The total number of subnets that will be provisioned in the VPC instance. This value will be used to determine how many gateways to create. At most, three gateways can be created (one for each zone) so the default should suffice in most cases. However, it might create more gateways than needed for small deployments in which case a number less than three can be used.
                default: 3
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the gateway must be provisioned
                default: true
                optional: true
            version: v1.5.0
            outputs:
              - name: count
                description: The number of gateways created
              - name: gateway_ids
                description: List of ids of the gateways created
              - name: gateways
                description: List of ids and zones of gateways created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC gateways will be created.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: subnet_count
                scope: ignore
                type: number
                description: The total number of subnets that will be provisioned in the VPC instance. This value will be used to determine how many gateways to create. At most, three gateways can be created (one for each zone) so the default should suffice in most cases. However, it might create more gateways than needed for small deployments in which case a number less than three can be used.
                default: 3
                optional: true
            version: v1.4.0
            outputs:
              - name: count
                description: The number of gateways created
              - name: gateway_ids
                description: List of ids of the gateways created
              - name: gateways
                description: List of ids and zones of gateways created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC gateways will be created.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_id
                moduleRef:
                  id: vpc
                  output: id
                type: string
                description: The id of the vpc instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: subnet_count
                scope: ignore
                type: number
                description: The total number of subnets that will be provisioned in the VPC instance. This value will be used to determine how many gateways to create. At most, three gateways can be created (one for each zone) so the default should suffice in most cases. However, it might create more gateways than needed for small deployments in which case a number less than three can be used.
                default: 3
                optional: true
            version: v1.3.0
            outputs:
              - name: count
                description: The number of gateways created
              - name: gateway_ids
                description: List of ids of the gateways created
              - name: gateways
                description: List of ids and zones of gateways created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC gateways will be created.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: subnet_count
                scope: ignore
                type: number
                description: The total number of subnets that will be provisioned in the VPC instance. This value will be used to determine how many gateways to create. At most, three gateways can be created (one for each zone) so the default should suffice in most cases. However, it might create more gateways than needed for small deployments in which case a number less than three can be used.
                default: 3
                optional: true
            version: v1.2.2
            outputs:
              - name: count
                description: The number of gateways created
              - name: gateway_ids
                description: List of ids of the gateways created
              - name: gateways
                description: List of ids and zones of gateways created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
              - name: region
                scope: global
                type: string
              - name: ibmcloud_api_key
                scope: global
                type: string
              - name: subnet_count
                scope: ignore
                type: string
            version: v1.2.1
            outputs:
              - name: count
                description: The number of gateways created
              - name: gateway_ids
                description: List of ids of the gateways created
              - name: gateways
                description: List of ids and zones of gateways created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - soure: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
              - name: region
                scope: global
                type: string
              - name: ibmcloud_api_key
                scope: global
                type: string
              - name: subnet_count
                scope: ignore
                type: string
            version: v1.2.0
            outputs:
              - name: count
                description: The number of gateways created
              - name: gateway_ids
                description: List of ids of the gateways created
              - name: gateways
                description: List of ids and zones of gateways created
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables:
              - name: resource_group_id
                type: string
              - name: region
                type: string
              - name: ibmcloud_api_key
                type: string
              - name: vpc_name
                type: string
              - name: subnet_count
                type: string
            version: v1.1.0
            outputs:
              - name: count
                description: The number of gateways created
              - name: ids
                description: List of ids of gateways created
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables:
              - name: resource_group_id
                type: string
              - name: region
                type: string
              - name: ibmcloud_api_key
                type: string
              - name: vpc_name
                type: string
              - name: subnet_count
                type: string
            version: v1.0.0
            outputs:
              - name: gateway_count
                description: The number of gateways created
              - name: gateway_ids
                description: List of ids of gateways created
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
        name: ibm-vpc-subnets
        type: terraform
        description: Module to provision a collection of subnets for an existing VPC
        tags:
          - network
          - subnets
          - vpc
        versions:
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs: []
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                important: true
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: zone_offset
                type: number
                description: The offset for the zone where the subnet should be created. The default offset is 0 which means the first subnet should be created in zone xxx-1
                default: 0
                optional: true
              - name: ipv4_cidr_blocks
                type: list(string)
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
              - name: acl_rules
                type: list(object({}))
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
            version: v1.8.2
            outputs:
              - name: count
                description: The number of subnets created
              - name: ids
                description: The ids of the created subnets
              - name: output[*].id }
                description: output[*].id }
              - name: names
                description: The ids of the created subnets
              - name: output[*].name }
                description: output[*].name }
              - name: subnets
                description: The subnets that were created
              - name: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
                description: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
              - name: acl_id
                description: The id of the network acl for the subnets
              - name: vpc_name
                description: The name of the VPC where the subnets were provisioned
              - name: vpc_id
                description: The id of the VPC where the subnets were provisioned
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs: []
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: zone_offset
                type: number
                description: The offset for the zone where the subnet should be created. The default offset is 0 which means the first subnet should be created in zone xxx-1
                default: 0
                optional: true
              - name: ipv4_cidr_blocks
                type: list(string)
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
              - name: acl_rules
                type: list(object({}))
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
            version: v1.8.1
            outputs:
              - name: count
                description: The number of subnets created
              - name: ids
                description: The ids of the created subnets
              - name: output[*].id }
                description: output[*].id }
              - name: names
                description: The ids of the created subnets
              - name: output[*].name }
                description: output[*].name }
              - name: subnets
                description: The subnets that were created
              - name: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
                description: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
              - name: acl_id
                description: The id of the network acl for the subnets
              - name: vpc_name
                description: The name of the VPC where the subnets were provisioned
              - name: vpc_id
                description: The id of the VPC where the subnets were provisioned
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs: []
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: zone_offset
                type: number
                description: The offset for the zone where the subnet should be created. The default offset is 0 which means the first subnet should be created in zone xxx-1
                default: 0
                optional: true
              - name: ipv4_cidr_blocks
                type: list(string)
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
              - name: acl_rules
                type: list(object({}))
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
            version: v1.8.0
            outputs:
              - name: count
                description: The number of subnets created
              - name: ids
                description: The ids of the created subnets
              - name: output[*].id }
                description: output[*].id }
              - name: names
                description: The ids of the created subnets
              - name: output[*].name }
                description: output[*].name }
              - name: subnets
                description: The subnets that were created
              - name: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
                description: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
              - name: acl_id
                description: The id of the network acl for the subnets
              - name: vpc_name
                description: The name of the VPC where the subnets were provisioned
              - name: vpc_id
                description: The id of the VPC where the subnets were provisioned
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs: []
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: zone_offset
                type: number
                description: The offset for the zone where the subnet should be created. The default offset is 0 which means the first subnet should be created in zone xxx-1
                default: 0
                optional: true
              - name: ipv4_cidr_blocks
                type: list(string)
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
              - name: acl_rules
                type: list(object({}))
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
            version: v1.7.0
            outputs:
              - name: count
                description: The number of subnets created
              - name: ids
                description: The ids of the created subnets
              - name: output[*].id }
                description: output[*].id }
              - name: names
                description: The ids of the created subnets
              - name: output[*].name }
                description: output[*].name }
              - name: subnets
                description: The subnets that were created
              - name: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
                description: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
              - name: acl_id
                description: The id of the network acl for the subnets
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs: []
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: zone_offset
                type: number
                description: The offset for the zone where the subnet should be created. The default offset is 0 which means the first subnet should be created in zone xxx-1
                default: 0
                optional: true
              - name: ipv4_cidr_blocks
                type: list(string)
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
              - name: acl_rules
                type: list(object({}))
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
            version: v1.6.2
            outputs:
              - name: count
                description: The number of subnets created
              - name: ids
                description: The ids of the created subnets
              - name: output[*].id }
                description: output[*].id }
              - name: names
                description: The ids of the created subnets
              - name: output[*].name }
                description: output[*].name }
              - name: subnets
                description: The subnets that were created
              - name: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
                description: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
              - name: acl_id
                description: The id of the network acl for the subnets
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs: []
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: zone_offset
                type: number
                description: The offset for the zone where the subnet should be created. The default offset is 0 which means the first subnet should be created in zone xxx-1
                default: 0
                optional: true
              - name: ipv4_cidr_blocks
                type: list(string)
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
              - name: acl_rules
                type: list(object({}))
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
            version: v1.6.1
            outputs:
              - name: count
                description: The number of subnets created
              - name: ids
                description: The ids of the created subnets
              - name: output[*].id }
                description: output[*].id }
              - name: names
                description: The ids of the created subnets
              - name: output[*].name }
                description: output[*].name }
              - name: subnets
                description: The subnets that were created
              - name: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
                description: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
              - name: acl_id
                description: The id of the network acl for the subnets
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: zone_offset
                type: number
                description: The offset for the zone where the subnet should be created. The default offset is 0 which means the first subnet should be created in zone xxx-1
                default: 0
                optional: true
              - name: ipv4_cidr_blocks
                type: list(string)
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
              - name: acl_rules
                type: list(object({}))
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
            version: v1.6.0
            outputs:
              - name: count
                description: The number of subnets created
              - name: ids
                description: The ids of the created subnets
              - name: output[*].id }
                description: output[*].id }
              - name: names
                description: The ids of the created subnets
              - name: output[*].name }
                description: output[*].name }
              - name: subnets
                description: The subnets that were created
              - name: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
                description: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
              - name: acl_id
                description: The id of the network acl for the subnets
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_id
                moduleRef:
                  id: vpc
                  output: id
                type: string
                description: The id of the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: zone_offset
                type: number
                description: The offset for the zone where the subnet should be created. The default offset is 0 which means the first subnet should be created in zone xxx-1
                default: 0
                optional: true
              - name: ipv4_cidr_blocks
                type: list(object({cidr = string}))
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
              - name: acl_rules
                type: list(object({}))
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
            version: v1.5.1
            outputs:
              - name: count
                description: The number of subnets created
              - name: ids
                description: The ids of the created subnets
              - name: output[*].id }
                description: output[*].id }
              - name: names
                description: The ids of the created subnets
              - name: output[*].name }
                description: output[*].name }
              - name: subnets
                description: The subnets that were created
              - name: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
                description: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
              - name: acl_id
                description: The id of the network acl for the subnets
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_id
                moduleRef:
                  id: vpc
                  output: id
                type: string
                description: The id of the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: zone_offset
                type: number
                description: The offset for the zone where the subnet should be created. The default offset is 0 which means the first subnet should be created in zone xxx-1
                default: 0
                optional: true
              - name: ipv4_cidr_blocks
                type: list(object({cidr = string}))
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
              - name: acl_rules
                type: string
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
            version: v1.5.0
            outputs:
              - name: count
                description: The number of subnets created
              - name: ids
                description: The ids of the created subnets
              - name: output[*].id }
                description: output[*].id }
              - name: names
                description: The ids of the created subnets
              - name: output[*].name }
                description: output[*].name }
              - name: subnets
                description: The subnets that were created
              - name: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
                description: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
              - name: acl_id
                description: The id of the network acl for the subnets
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_id
                moduleRef:
                  id: vpc
                  output: id
                type: string
                description: The id of the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: zone_offset
                type: number
                description: The offset for the zone where the subnet should be created. The default offset is 0 which means the first subnet should be created in zone xxx-1
                default: 0
                optional: true
              - name: ipv4_cidr_blocks
                type: list(object({cidr = string}))
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
            version: v1.4.0
            outputs:
              - name: count
                description: The number of subnets created
              - name: ids
                description: The ids of the created subnets
              - name: output[*].id }
                description: output[*].id }
              - name: names
                description: The ids of the created subnets
              - name: output[*].name }
                description: output[*].name }
              - name: subnets
                description: The subnets that were created
              - name: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
                description: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
              - name: acl_id
                description: The id of the network acl for the subnets
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_id
                moduleRef:
                  id: vpc
                  output: id
                type: string
                description: The id of the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: zone_offset
                type: number
                description: The offset for the zone where the subnet should be created. The default offset is 0 which means the first subnet should be created in zone xxx-1
                default: 0
                optional: true
              - name: ipv4_cidr_blocks
                type: list(object({cidr = string}))
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
              - name: auth_id
                type: string
                description: The id of the authorization policy that allows the Flow Log to access the Object Storage bucket. This is optional and provided to sequence the authorization before the flow log creation.
                default: ""
                optional: true
            version: v1.3.1
            outputs:
              - name: count
                description: The number of subnets created
              - name: ids
                description: The ids of the created subnets
              - name: output[*].id }
                description: output[*].id }
              - name: names
                description: The ids of the created subnets
              - name: output[*].name }
                description: output[*].name }
              - name: subnets
                description: The subnets that were created
              - name: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
                description: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
              - name: acl_id
                description: The id of the network acl for the subnets
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_id
                moduleRef:
                  id: vpc
                  output: id
                type: string
                description: The id of the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: zone_offset
                type: number
                description: The offset for the zone where the subnet should be created. The default offset is 0 which means the first subnet should be created in zone xxx-1
                default: 0
                optional: true
              - name: ipv4_cidr_blocks
                type: list(object({cidr = string}))
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
              - name: auth_id
                type: string
                description: The id of the authorization policy that allows the Flow Log to access the Object Storage bucket. This is optional and provided to sequence the authorization before the flow log creation.
                default: ""
                optional: true
            version: v1.3.0
            outputs:
              - name: count
                description: The number of subnets created
              - name: ids
                description: The ids of the created subnets
              - name: output[*].id }
                description: output[*].id }
              - name: subnets
                description: The subnets that were created
              - name: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
                description: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
              - name: acl_id
                description: The id of the network acl for the subnets
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: acl_id
                moduleRef:
                  id: vpc
                  output: acl_id
                type: string
                description: The id of the network acl for the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: ipv4_cidr_blocks
                type: list(string)
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
            version: v1.2.6
            outputs:
              - name: count
                description: The number of subnets created
              - name: subnets
                description: The subnets that were created
              - name: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
                description: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: acl_id
                moduleRef:
                  id: vpc
                  output: acl_id
                type: string
                description: The id of the network acl for the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: ipv4_cidr_blocks
                type: list(string)
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
              - name: flow_log_cos_bucket_name
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
                optional: true
            version: v1.2.5
            outputs:
              - name: count
                description: The number of subnets created
              - name: subnets
                description: The subnets that were created
              - name: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
                description: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: acl_id
                moduleRef:
                  id: vpc
                  output: acl_id
                type: string
                description: The id of the network acl for the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: ipv4_cidr_blocks
                type: list(string)
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
            version: v1.2.4
            outputs:
              - name: count
                description: The number of subnets created
              - name: subnets
                description: The subnets that were created
              - name: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
                description: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: acl_id
                moduleRef:
                  id: vpc
                  output: acl_id
                type: string
                description: The id of the network acl for the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: ipv4_cidr_blocks
                type: list(string)
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
            version: v1.2.3
            outputs:
              - name: count
                description: The number of subnets created
              - name: subnets
                description: The subnets that were created
              - name: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
                description: 'output: {id = subnet.id, zone = subnet.zone, label = var.label} ] }'
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: acl_id
                moduleRef:
                  id: vpc
                  output: acl_id
                type: string
                description: The id of the network acl for the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: ipv4_cidr_blocks
                type: list(string)
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
            version: v1.2.2
            outputs:
              - name: count
                description: The number of subnets created
              - name: subnets
                description: The subnets that were created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: acl_id
                moduleRef:
                  id: vpc
                  output: acl_id
                type: string
                description: The id of the network acl for the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: ipv4_cidr_blocks
                type: list(string)
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ['10.10.10.0/24']). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
            version: v1.2.1
            outputs:
              - name: count
                description: The number of subnets created
              - name: subnets
                description: The subnets that were created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: acl_id
                moduleRef:
                  id: vpc
                  output: acl_id
                type: string
                description: The id of the network acl for the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: ipv4_cidr_blocks
                type: list(string)
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ["10.10.10.0/24"]). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
            version: v1.2.0
            outputs:
              - name: count
                description: The number of subnets created
              - name: subnets
                description: The subnets that were created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: acl_id
                moduleRef:
                  id: vpc
                  output: acl_id
                type: string
                description: The id of the network acl for the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: ipv4_cidr_blocks
                type: list(string)
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ["10.10.10.0/24"]). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
            version: v1.1.1
            outputs:
              - name: count
                description: The number of subnets created
              - name: subnets
                description: The subnets that were created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: acl_id
                moduleRef:
                  id: vpc
                  output: acl_id
                type: string
                description: The id of the network acl for the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
              - name: ipv4_cidr_blocks
                type: list(string)
                description: List of ipv4 cidr blocks for the subnets that will be created (e.g. ["10.10.10.0/24"]). If you are providing cidr blocks then a value must be provided for each of the subnets. If you don't provide cidr blocks for each of the subnets then values will be generated using the {ipv4_address_count} value.
                default: []
                optional: true
              - name: ipv4_address_count
                type: number
                description: The size of the ipv4 cidr block that should be allocated to the subnet. If {ipv4_cidr_blocks} are provided then this value is ignored.
                default: 256
                optional: true
            version: v1.1.0
            outputs:
              - name: count
                description: The number of subnets created
              - name: subnets
                description: The subnets that were created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: acl_id
                moduleRef:
                  id: vpc
                  output: acl_id
                type: string
                description: The id of the network acl for the vpc instance
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: list(object({id = string, zone = string}))
                description: List of gateway ids and zones
                default: []
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: _count
                scope: module
                type: number
                description: The number of subnets that should be provisioned
                default: 3
                optional: true
              - name: label
                scope: module
                type: string
                description: Label for the subnets created
                default: default
                optional: true
            version: v1.0.3
            outputs:
              - name: count
                description: The number of subnets created
              - name: subnets
                description: The subnets that were created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
              - name: acl_id
                moduleRef:
                  id: vpc
                  output: acl_id
                type: string
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: string
              - name: region
                scope: global
                type: string
              - name: ibmcloud_api_key
                scope: global
                type: string
              - name: _count
                scope: module
                type: string
              - name: label
                scope: module
                type: string
            version: v1.0.2
            outputs:
              - name: count
                description: The number of subnets created
              - name: subnets
                description: The subnets that were created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
              - name: vpc_id
                moduleRef:
                  id: vpc
                  output: id
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
              - name: acl_id
                moduleRef:
                  id: vpc
                  output: acl_id
                type: string
              - name: gateways
                moduleRef:
                  id: gateways
                  output: gateways
                optional: true
                type: string
              - name: region
                scope: global
                type: string
              - name: ibmcloud_api_key
                scope: global
                type: string
              - name: _count
                scope: module
                type: string
              - name: label
                scope: module
                type: string
            version: v1.0.1
            outputs:
              - name: count
                description: The number of subnets created
              - name: subnets
                description: The subnets that were created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: gateways
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-gateways
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource-group
                  output: id
                type: string
              - name: vpc_id
                moduleRef:
                  id: vpc
                  output: id
              - name: acl_id
                moduleRef:
                  id: vpc
                  output: acl_id
                type: string
              - name: gateway_ids
                moduleRef:
                  id: gateways
                  output: ids
                optional: true
              - name: region
                scope: global
                type: string
              - name: ibmcloud_api_key
                scope: global
                type: string
              - name: _count
                scope: module
                type: string
              - name: label
                scope: module
                type: string
              - name: vpc_name
                type: string
              - name: gateways
                type: string
            version: v1.0.0
            outputs:
              - name: count
                description: The number of subnets created
              - name: subnets
                description: The subnets that were created
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
        name: ibm-vpc-ssh
        alias: ssh
        type: terraform
        description: Module to register an ssh key into the IBM Cloud infrastructure for use in securely accessing VPC resources
        tags:
          - vpc
          - ssh
          - infrastructure
          - security
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: 'Name of resource group in which to create the ssh key instance. '
              - name: region
                scope: global
                type: string
                description: Region
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: name_prefix
                scope: global
                type: string
                description: (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                default: ""
                optional: true
              - name: label
                type: string
                description: (Optional) Label used for the instance. It will be added to the name_prefix to create the name if the name is not provided.
                default: sshkey
                optional: true
              - name: public_key
                type: string
                description: The public key provided for the ssh key. If empty string is provided then a new key will be generated.
              - name: private_key
                type: string
                description: The private key provided for the ssh key. If empty string is provided then a new key will be generated.
                default: ""
                optional: true
              - name: public_key_file
                type: string
                description: The name of the file containing the public key provided for the ssh key. If empty string is provided then a new key will be generated.
                default: ""
                optional: true
              - name: private_key_file
                type: string
                description: The name of the file containing the private key provided for the ssh key. If empty string is provided then a new key will be generated.
                default: ""
                optional: true
              - name: rsa_bits
                type: number
                description: The number of bits for the rsa key, if it will be generated
                default: 3072
                optional: true
            version: v1.6.0
            outputs:
              - name: id
                description: The id of the ssh key
              - name: public_key
                description: The public key value in openssh format
              - name: private_key
                description: The private key value
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: 'Name of resource group in which to create the ssh key instance. '
              - name: region
                scope: global
                type: string
                description: Region
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: name_prefix
                scope: global
                type: string
                description: (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                default: ""
                optional: true
              - name: label
                type: string
                description: (Optional) Label used for the instance. It will be added to the name_prefix to create the name if the name is not provided.
                default: sshkey
                optional: true
              - name: public_key
                type: string
                description: The public key provided for the ssh key. If empty string is provided then a new key will be generated.
              - name: private_key
                type: string
                description: The private key provided for the ssh key. If empty string is provided then a new key will be generated.
              - name: public_key_file
                type: string
                description: The name of the file containing the public key provided for the ssh key. If empty string is provided then a new key will be generated.
                default: ""
                optional: true
              - name: private_key_file
                type: string
                description: The name of the file containing the private key provided for the ssh key. If empty string is provided then a new key will be generated.
                default: ""
                optional: true
              - name: rsa_bits
                type: number
                description: The number of bits for the rsa key, if it will be generated
                default: 3072
                optional: true
            version: v1.5.1
            outputs:
              - name: id
                description: The id of the ssh key
              - name: public_key
                description: The public key value in openssh format
              - name: private_key
                description: The private key value
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: 'Name of resource group in which to create the ssh key instance. '
              - name: region
                scope: global
                type: string
                description: Region
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: name_prefix
                scope: global
                type: string
                description: (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                default: ""
                optional: true
              - name: label
                type: string
                description: (Optional) Label used for the instance. It will be added to the name_prefix to create the name if the name is not provided.
                default: sshkey
                optional: true
              - name: public_key
                type: string
                description: The public key provided for the ssh key. If empty string is provided then a new key will be generated.
              - name: private_key
                type: string
                description: The private key provided for the ssh key. If empty string is provided then a new key will be generated.
              - name: public_key_file
                type: string
                description: The name of the file containing the public key provided for the ssh key. If empty string is provided then a new key will be generated.
                default: ""
                optional: true
              - name: private_key_file
                type: string
                description: The name of the file containing the private key provided for the ssh key. If empty string is provided then a new key will be generated.
                default: ""
                optional: true
              - name: rsa_bits
                type: number
                description: The number of bits for the rsa key, if it will be generated
                default: 3072
                optional: true
            version: v1.5.0
            outputs:
              - name: id
                description: The id of the ssh key
              - name: public_key
                description: The public key value in openssh format
              - name: private_key
                description: The private key value
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: 'Name of resource group in which to create the ssh key instance. '
              - name: region
                scope: global
                type: string
                description: Region
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: name_prefix
                scope: global
                type: string
                description: (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                default: ""
                optional: true
              - name: label
                type: string
                description: (Optional) Label used for the instance. It will be added to the name_prefix to create the name if the name is not provided.
                default: sshkey
                optional: true
              - name: public_key
                type: string
                description: The public key provided for the ssh key. If empty string is provided then a new key will be generated.
              - name: private_key
                type: string
                description: The private key provided for the ssh key. If empty string is provided then a new key will be generated.
              - name: rsa_bits
                type: number
                description: The number of bits for the rsa key, if it will be generated
                default: 3072
                optional: true
            version: v1.4.0
            outputs:
              - name: id
                description: The id of the ssh key
              - name: public_key
                description: The public key value in openssh format
              - name: private_key
                description: The private key value
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: 'Name of resource group in which to create the ssh key instance. '
              - name: region
                scope: global
                type: string
                description: Region
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: name_prefix
                scope: global
                type: string
                description: (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                default: ""
                optional: true
              - name: label
                type: string
                description: (Optional) Label used for the instance. It will be added to the name_prefix to create the name if the name is not provided.
                default: sshkey
                optional: true
              - name: public_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: ""
                optional: true
              - name: private_key
                type: string
                description: (Optional) The private key provided for the ssh key. If not provided it will be generated
                default: ""
                optional: true
              - name: rsa_bits
                type: number
                description: The number of bits for the rsa key, if it will be generated
                default: 3072
                optional: true
              - name: public_key_file
                type: string
                description: (Optional) The name of the file containing the public key provided for the ssh key. If not provided it will be generated
                default: ""
                optional: true
              - name: private_key_file
                type: string
                description: (Optional) The name of the file containing the private key provided for the ssh key. If not provided it will be generated
                default: ""
                optional: true
            version: v1.3.0
            outputs:
              - name: id
                description: The id of the ssh key
              - name: public_key
                description: The public key value in openssh format
              - name: private_key
                description: The private key value
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: 'Name of resource group in which to create the ssh key instance. '
              - name: region
                scope: global
                type: string
                description: Region
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: name_prefix
                scope: global
                type: string
                description: (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                default: ""
                optional: true
              - name: label
                type: string
                description: (Optional) Label used for the instance. It will be added to the name_prefix to create the name if the name is not provided.
                default: sshkey
                optional: true
              - name: public_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: ""
                optional: true
              - name: private_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: ""
                optional: true
              - name: rsa_bits
                type: number
                description: The number of bits for the generated rsa key
                default: 3072
                optional: true
            version: v1.2.0
            outputs:
              - name: id
                description: The id of the ssh key
              - name: public_key
                description: The public key value in openssh format
              - name: public_key_pem
                description: The public key value in pem format
              - name: private_key
                description: The private key value
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: 'Name of resource group in which to create the ssh key instance. '
              - name: region
                scope: global
                type: string
                description: Region
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: name_prefix
                scope: global
                type: string
                description: (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                default: ""
                optional: true
              - name: label
                type: string
                description: (Optional) Label used for the instance. It will be added to the name_prefix to create the name if the name is not provided.
                default: sshkey
                optional: true
              - name: public_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: ""
                optional: true
              - name: private_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: ""
                optional: true
            version: v1.1.1
            outputs:
              - name: id
                description: The id of the ssh key
              - name: public_key
                description: The public key value in openssh format
              - name: public_key_pem
                description: The public key value in pem format
              - name: private_key
                description: The private key value
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: 'Name of resource group in which to create the ssh key instance. '
              - name: region
                scope: global
                type: string
                description: Region
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: name_prefix
                scope: global
                type: string
                description: (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                default: ""
                optional: true
              - name: label
                type: string
                description: (Optional) Label used for the instance. It will be added to the name_prefix to create the name if the name is not provided.
                default: sshkey
                optional: true
              - name: public_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: ""
                optional: true
              - name: private_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: ""
                optional: true
            version: v1.1.0
            outputs:
              - name: id
                description: The id of the ssh key
              - name: public_key
                description: The public key value
              - name: private_key
                description: The private key value
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: 'Name of resource group in which to create the ssh key instance. '
              - name: region
                scope: global
                type: string
                description: Region
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: name_prefix
                scope: global
                type: string
                description: (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                default: ""
                optional: true
              - name: name
                scope: module
                type: string
                description: (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                default: ""
                optional: true
              - name: public_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: ""
                optional: true
              - name: private_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: ""
                optional: true
            version: v1.0.5
            outputs:
              - name: id
                description: The id of the ssh key
              - name: public_key
                description: The public key value
              - name: private_key
                description: The private key value
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: 'Name of resource group in which to create the ssh key instance. '
              - name: region
                scope: global
                type: string
                description: Region
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: name_prefix
                scope: global
                type: string
                description: (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                default: ""
                optional: true
              - name: name
                scope: ignore
                type: string
                description: (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                default: ""
                optional: true
              - name: public_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: ""
                optional: true
              - name: private_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: ""
                optional: true
            version: v1.0.4
            outputs:
              - name: id
                description: The id of the ssh key
              - name: public_key
                description: The public key value
              - name: private_key
                description: The private key value
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: 'Name of resource group in which to create the ssh key instance. '
              - name: region
                scope: global
                type: string
                description: Region
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: name_prefix
                scope: global
                type: string
                description: (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                default: description = (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                optional: true
              - name: name
                scope: ignore
                type: string
                description: (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                default: description = (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                optional: true
              - name: public_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: description = (Optional) The public key provided for the ssh key. If not provided it will be generated
                optional: true
              - name: private_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: description = (Optional) The public key provided for the ssh key. If not provided it will be generated
                optional: true
            version: v1.0.3
            outputs:
              - name: id
                description: The id of the ssh key
              - name: public_key
                description: The public key value
              - name: private_key
                description: The private key value
          - platforms: []
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: 'Name of resource group in which to create the ssh key instance. '
              - name: region
                scope: global
                type: string
                description: Region
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: name_prefix
                scope: global
                type: string
                description: (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                default: description = (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                optional: true
              - name: name
                scope: ignore
                type: string
                description: (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                default: description = (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                optional: true
              - name: public_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: description = (Optional) The public key provided for the ssh key. If not provided it will be generated
                optional: true
              - name: private_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: description = (Optional) The public key provided for the ssh key. If not provided it will be generated
                optional: true
            version: v1.0.2
            outputs:
              - name: id
                description: The id of the ssh key
              - name: public_key
                description: The public key value
              - name: private_key
                description: The private key value
          - platforms: []
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: 'Name of resource group in which to create the ssh key instance. '
              - name: region
                scope: global
                type: string
                description: Region
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: name_prefix
                scope: global
                type: string
                description: (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                default: description = (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                optional: true
              - name: name
                scope: ignore
                type: string
                description: (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                default: description = (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                optional: true
              - name: public_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: description = (Optional) The public key provided for the ssh key. If not provided it will be generated
                optional: true
              - name: private_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: description = (Optional) The public key provided for the ssh key. If not provided it will be generated
                optional: true
            version: v1.0.1
            outputs:
              - name: id
                description: The id of the ssh key
              - name: public_key
                description: The public key value
              - name: private_key
                description: The private key value
          - platforms: []
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: 'Name of resource group in which to create the ssh key instance. '
              - name: region
                scope: global
                type: string
                description: Region
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: name_prefix
                scope: global
                type: string
                description: (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                default: description = (Optional) Prefix used to name all resources. If not provided then resource_group_name is used.
                optional: true
              - name: name
                scope: ignore
                type: string
                description: (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                default: description = (Optional) Name given to the ssh key instance. If not provided it will be generated using prefix_name
                optional: true
              - name: public_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: description = (Optional) The public key provided for the ssh key. If not provided it will be generated
                optional: true
              - name: private_key
                type: string
                description: (Optional) The public key provided for the ssh key. If not provided it will be generated
                default: description = (Optional) The public key provided for the ssh key. If not provided it will be generated
                optional: true
            version: v1.0.0
            outputs:
              - name: id
                description: The id of the ssh key
              - name: public_key
                description: The public key value
              - name: private_key
                description: The private key value
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-vpe-gateway
        name: ibm-vpe-gateway
        alias: vpe
        type: terraform
        description: Provisions a Virtual Private Gateway for a provided resource, connecting that resource to the provided subnet
        tags:
          - infrastructure
          - network
          - virtual private gateway
          - fscloud
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.8.0'
              - id: resource
                refs: []
                interface: github.com/cloud-native-toolkit/automation-modules#ibm-service
                optional: true
              - id: sync
                refs: []
                interface: github.com/cloud-native-toolkit/automation-modules#sync
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC gateways will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: vpc_id
                moduleRef:
                  id: subnets
                  output: vpc_id
                type: string
                description: The id of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: resource_crn
                moduleRef:
                  id: resource
                  output: crn
                type: string
                description: The crn of the resource to which the vpe will be connected.
              - name: resource_service
                moduleRef:
                  id: resource
                  output: service
                type: string
                description: The endpoint gateway target resource type. Values can be provider_cloud_service, provider_infrastructure_service, ?.
              - name: resource_label
                moduleRef:
                  id: resource
                  output: label
                type: string
                description: The label for the resource to which the vpe will be connected. Used as a tag and as part of the vpe name.
              - name: sync
                moduleRef:
                  id: sync
                  output: sync
                type: string
                description: Value used to synchronize dependencies between modules
                default: ""
                optional: true
            version: v1.5.1
            outputs:
              - name: id
                description: The id of the created VPE gateway
              - name: sync
                description: Value used to synchronize downstream modules
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.8.0'
              - id: resource
                refs: []
                interface: github.com/cloud-native-toolkit/automation-modules#ibm-service
                optional: true
              - id: sync
                refs: []
                interface: github.com/cloud-native-toolkit/automation-modules#sync
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC gateways will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: vpc_id
                moduleRef:
                  id: subnets
                  output: vpc_id
                type: string
                description: The id of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: resource_crn
                moduleRef:
                  id: resource
                  output: crn
                type: string
                description: The crn of the resource to which the vpe will be connected.
              - name: resource_service
                moduleRef:
                  id: resource
                  output: service
                type: string
                description: The endpoint gateway target resource type. Values can be provider_cloud_service, provider_infrastructure_service, ?.
              - name: resource_label
                moduleRef:
                  id: resource
                  output: label
                type: string
                description: The label for the resource to which the vpe will be connected. Used as a tag and as part of the vpe name.
              - name: sync
                moduleRef:
                  id: sync
                  output: sync
                type: string
                description: Value used to synchronize dependencies between modules
                default: ""
                optional: true
            version: v1.5.0
            outputs:
              - name: id
                description: The id of the created VPE gateway
              - name: sync
                description: Value used to synchronize downstream modules
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.8.0'
              - id: resource
                refs: []
                interface: github.com/cloud-native-toolkit/automation-modules#ibm-service
                optional: true
              - id: sync
                refs: []
                interface: github.com/cloud-native-toolkit/automation-modules#sync
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC gateways will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: vpc_id
                moduleRef:
                  id: subnets
                  output: vpc_id
                type: string
                description: The id of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: resource_crn
                moduleRef:
                  id: resource
                  output: crn
                type: string
                description: The crn of the resource to which the vpe will be connected.
              - name: resource_service
                moduleRef:
                  id: resource
                  output: service
                type: string
                description: The endpoint gateway target resource type. Values can be provider_cloud_service, provider_infrastructure_service, ?.
              - name: resource_label
                moduleRef:
                  id: resource
                  output: label
                type: string
                description: The label for the resource to which the vpe will be connected. Used as a tag and as part of the vpe name.
              - name: sync
                moduleRef:
                  id: sync
                  output: sync
                type: string
                description: Value used to synchronize dependencies between modules
                default: ""
                optional: true
            version: v1.4.0
            outputs:
              - name: id
                description: The id of the created VPE gateway
              - name: sync
                description: Value used to synchronize downstream modules
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.8.0'
              - id: resource
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#ibm-service
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC gateways will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: vpc_id
                moduleRef:
                  id: subnets
                  output: vpc_id
                type: string
                description: The id of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: resource_crn
                moduleRef:
                  id: resource
                  output: crn
                type: string
                description: The crn of the resource to which the vpe will be connected.
              - name: resource_service
                moduleRef:
                  id: resource
                  output: service
                type: string
                description: The endpoint gateway target resource type. Values can be provider_cloud_service, provider_infrastructure_service, ?.
              - name: resource_label
                moduleRef:
                  id: resource
                  output: label
                type: string
                description: The label for the resource to which the vpe will be connected. Used as a tag and as part of the vpe name.
            version: v1.3.1
            outputs:
              - name: id
                description: The id of the created VPE gateway
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.8.0'
              - id: resource
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#ibm-service
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC gateways will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: vpc_id
                moduleRef:
                  id: subnets
                  output: vpc_id
                type: string
                description: The id of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: resource_crn
                moduleRef:
                  id: resource
                  output: crn
                type: string
                description: The crn of the resource to which the vpe will be connected.
              - name: resource_service
                moduleRef:
                  id: resource
                  output: service
                type: string
                description: The endpoint gateway target resource type. Values can be provider_cloud_service, provider_infrastructure_service, ?.
              - name: resource_label
                moduleRef:
                  id: resource
                  output: label
                type: string
                description: The label for the resource to which the vpe will be connected. Used as a tag and as part of the vpe name.
            version: v1.3.0
            outputs:
              - name: id
                description: The id of the created VPE gateway
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: resource
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#ibm-service
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC gateways will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: vpc_id
                moduleRef:
                  id: vpc
                  output: id
                type: string
                description: The id of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: resource_crn
                moduleRef:
                  id: resource
                  output: crn
                type: string
                description: The crn of the resource to which the vpe will be connected.
              - name: resource_service
                moduleRef:
                  id: resource
                  output: service
                type: string
                description: The endpoint gateway target resource type. Values can be provider_cloud_service, provider_infrastructure_service, ?.
              - name: resource_label
                moduleRef:
                  id: resource
                  output: label
                type: string
                description: The label for the resource to which the vpe will be connected. Used as a tag and as part of the vpe name.
            version: v1.2.3
            outputs:
              - name: id
                description: The id of the created VPE gateway
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: resource
                refs: []
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC gateways will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: vpc_id
                moduleRef:
                  id: vpc
                  output: id
                type: string
                description: The id of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: resource_crn
                moduleRef:
                  id: resource
                  output: crn
                type: string
                description: The crn of the resource to which the vpe will be connected.
              - name: resource_service
                moduleRef:
                  id: resource
                  output: service
                type: string
                description: The endpoint gateway target resource type. Values can be provider_cloud_service, provider_infrastructure_service, ?.
              - name: resource_label
                moduleRef:
                  id: resource
                  output: label
                type: string
                description: The label for the resource to which the vpe will be connected. Used as a tag and as part of the vpe name.
            version: v1.2.2
            outputs:
              - name: id
                description: The id of the created VPE gateway
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: resource
                refs: []
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC gateways will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: vpc_id
                moduleRef:
                  id: vpc
                  output: id
                type: string
                description: The id of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: resource_crn
                moduleRef:
                  id: resource
                  output: crn
                type: string
                description: The crn of the resource to which the vpe will be connected.
              - name: resource_service
                moduleRef:
                  id: resource
                  output: service
                type: string
                description: The endpoint gateway target resource type. Values can be provider_cloud_service, provider_infrastructure_service, ?.
              - name: resource_label
                moduleRef:
                  id: resource
                  output: label
                type: string
                description: The label for the resource to which the vpe will be connected. Used as a tag and as part of the vpe name.
            version: v1.2.1
            outputs:
              - name: id
                description: The id of the created VPE gateway
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: resource
                refs: []
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC gateways will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: vpc_id
                moduleRef:
                  id: vpc
                  output: id
                type: string
                description: The id of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: resource_crn
                moduleRef:
                  id: resource
                  output: crn
                type: string
                description: The crn of the resource to which the vpe will be connected.
              - name: resource_service
                moduleRef:
                  id: resource
                  output: service
                type: string
                description: The endpoint gateway target resource type. Values can be provider_cloud_service, provider_infrastructure_service, ?.
              - name: resource_label
                moduleRef:
                  id: resource
                  output: label
                type: string
                description: The label for the resource to which the vpe will be connected. Used as a tag and as part of the vpe name.
            version: v1.2.0
            outputs:
              - name: id
                description: The id of the created VPE gateway
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: resource
                refs: []
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC gateways will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: vpc_id
                moduleRef:
                  id: vpc
                  output: id
                type: string
                description: The id of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: resource_crn
                moduleRef:
                  id: resource
                  output: crn
                type: string
                description: The crn of the resource to which the vpe will be connected.
              - name: resource_service
                moduleRef:
                  id: resource
                  output: service
                type: string
                description: The endpoint gateway target resource type. Values can be provider_cloud_service, provider_infrastructure_service, ?.
              - name: resource_label
                scope: module
                type: string
                description: The label for the resource to which the vpe will be connected. Used as a tag and as part of the vpe name.
            version: v1.1.1
            outputs:
              - name: id
                description: The id of the created VPE gateway
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: resource
                refs: []
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC gateways will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: vpc_id
                moduleRef:
                  id: vpc
                  output: id
                type: string
                description: The id of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: resource_crn
                moduleRef:
                  id: resource
                  output: crn
                type: string
                description: The crn of the resource to which the vpe will be connected.
              - name: resource_label
                scope: module
                type: string
                description: The label for the resource to which the vpe will be connected. Used as a tag and as part of the vpe name.
              - name: resource_service
                type: string
                description: The endpoint gateway target resource type. Values can be provider_cloud_service, provider_infrastructure_service, ?.
                default: provider_cloud_service
                optional: true
            version: v1.1.0
            outputs:
              - name: id
                description: The id of the created VPE gateway
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: resource
                refs: []
                optional: true
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the VPC gateways will be created.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: vpc_id
                moduleRef:
                  id: vpc
                  output: id
                type: string
                description: The id of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: resource_crn
                moduleRef:
                  id: resource
                  output: crn
                type: string
                description: The crn of the resource to which the vpe will be connected.
              - name: resource_label
                scope: module
                type: string
                description: The label for the resource to which the vpe will be connected. Used as a tag and as part of the vpe name.
              - name: resource_type
                type: string
                description: The endpoint gateway target resource type. Values can be provider_cloud_service, provider_infrastructure_service, ?.
                default: provider_cloud_service
                optional: true
            version: v1.0.0
            outputs:
              - name: id
                description: The id of the created VPE gateway
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-vsi-bastion
        name: vsi-bastion
        type: terraform
        description: Module to provision Basion in a vsi image
        tags:
          - network
          - vpc
          - bastion
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: security_group_rules
                scope: ignore
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = private-network direction = outbound remote = 10.0.0.0/8 }, { name = service-endpoints direction = outbound remote = 161.26.0.0/16 }, { name = iaas-endpoints direction = outbound remote = 166.8.0.0/14 } ]'
                optional: true
              - name: allow_deprecated_image
                scope: ignore
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-5-minimal-amd64-1
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: acl_rules
                type: string
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
              - name: target_network_range
                type: string
                description: The ip address range that should be used for the network acl rules generated from the security groups
                default: 0.0.0.0/0
                optional: true
            version: v1.8.0
            outputs:
              - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
                description: The instance ids
              - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
                description: The instance names
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output count {   value = var.vpc_subnet_count }
                description: output count {   value = var.vpc_subnet_count }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was used
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: security_group_rules
                scope: ignore
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = private-network direction = outbound remote = 10.0.0.0/8 }, { name = service-endpoints direction = outbound remote = 161.26.0.0/16 }, { name = iaas-endpoints direction = outbound remote = 166.8.0.0/14 } ]'
                optional: true
              - name: allow_deprecated_image
                scope: ignore
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: acl_rules
                type: string
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
            version: v1.7.1
            outputs:
              - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
                description: The instance ids
              - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
                description: The instance names
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output count {   value = var.vpc_subnet_count }
                description: output count {   value = var.vpc_subnet_count }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was used
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: security_group_rules
                scope: ignore
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = private-network direction = outbound remote = 10.0.0.0/8 }, { name = service-endpoints direction = outbound remote = 161.26.0.0/16 }, { name = iaas-endpoints direction = outbound remote = 166.8.0.0/14 } ]'
                optional: true
              - name: allow_deprecated_image
                scope: ignore
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: acl_rules
                type: string
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
            version: v1.7.0
            outputs:
              - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
                description: The instance ids
              - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
                description: The instance names
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output count {   value = var.vpc_subnet_count }
                description: output count {   value = var.vpc_subnet_count }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was used
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: security_group_rules
                scope: ignore
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = private-network direction = outbound remote = 10.0.0.0/8 }, { name = service-endpoints direction = outbound remote = 161.26.0.0/16 }, { name = iaas-endpoints direction = outbound remote = 166.8.0.0/14 } ]'
                optional: true
              - name: allow_deprecated_image
                scope: ignore
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
            version: v1.6.0
            outputs:
              - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
                description: The instance ids
              - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
                description: The instance names
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output count {   value = var.vpc_subnet_count }
                description: output count {   value = var.vpc_subnet_count }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was used
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: security_group_rules
                scope: ignore
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = private-network direction = outbound remote = 10.0.0.0/8 }, { name = service-endpoints direction = outbound remote = 161.26.0.0/16 }, { name = iaas-endpoints direction = outbound remote = 166.8.0.0/14 } ]'
                optional: true
              - name: allow_deprecated_image
                scope: ignore
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
            version: v1.5.1
            outputs:
              - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
                description: The instance ids
              - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
                description: The instance names
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output count {   value = var.vpc_subnet_count }
                description: output count {   value = var.vpc_subnet_count }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: security_group_rules
                scope: ignore
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = private-network direction = outbound remote = 10.0.0.0/8 }, { name = service-endpoints direction = outbound remote = 161.26.0.0/16 }, { name = iaas-endpoints direction = outbound remote = 166.8.0.0/14 } ]'
                optional: true
              - name: allow_deprecated_image
                scope: ignore
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
            version: v1.5.0
            outputs:
              - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
                description: The instance ids
              - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
                description: The instance names
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output count {   value = var.vpc_subnet_count }
                description: output count {   value = var.vpc_subnet_count }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: security_group_rules
                scope: ignore
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } } ]'
                optional: true
              - name: allow_deprecated_image
                scope: ignore
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
            version: v1.4.1
            outputs:
              - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
                description: The instance ids
              - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
                description: The instance names
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output count {   value = var.vpc_subnet_count }
                description: output count {   value = var.vpc_subnet_count }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: security_group_rules
                scope: ignore
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } } ]'
                optional: true
              - name: allow_deprecated_image
                scope: ignore
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
            version: v1.4.0
            outputs:
              - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
                description: The instance ids
              - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
                description: The instance names
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output count {   value = var.vpc_subnet_count }
                description: output count {   value = var.vpc_subnet_count }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: security_group_rules
                scope: ignore
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } } ]'
                optional: true
              - name: allow_deprecated_image
                scope: ignore
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
            version: v1.3.8
            outputs:
              - name: output ids {   description = "The instance ids"   value       = module.vsi-instance.ids }
                description: The instance ids
              - name: output names {   description = "The instance names"   value       = module.vsi-instance.names }
                description: The instance names
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output count {   value = var.vpc_subnet_count }
                description: output count {   value = var.vpc_subnet_count }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: security_group_rules
                scope: ignore
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } } ]'
                optional: true
              - name: allow_deprecated_image
                scope: ignore
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
            version: v1.3.7
            outputs:
              - name: ids
                description: The instance ids
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: list(object({}))
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } } ]'
                optional: true
            version: v1.3.6
            outputs:
              - name: ids
                description: The instance ids
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name_prefix
                scope: global
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: list(object({}))
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } }, { name = icmp_outbound direction = outbound remote = 0.0.0.0/0 icmp = {'
                optional: true
            version: v1.3.5
            outputs:
              - name: ids
                description: The instance ids
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name_prefix
                scope: global
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: vpc_subnet_count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: |-
                  8
                        }
                      }
                    ]
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } }, { name = icmp_outbound direction = outbound remote = 0.0.0.0/0 icmp = {'
                optional: true
            version: v1.3.4
            outputs:
              - name: ids
                description: The instance ids
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name_prefix
                scope: global
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: resource_group_id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: vpc_subnet_count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: |-
                  8
                        }
                      }
                    ]
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } }, { name = icmp_outbound direction = outbound remote = 0.0.0.0/0 icmp = {'
                optional: true
            version: v1.3.3
            outputs:
              - name: ids
                description: The instance ids
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name_prefix
                scope: global
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: resource_group_id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: vpc_subnet_count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: flow_log_cos_bucket_name
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: kms_key_crn
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: |-
                  8
                        }
                      }
                    ]
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } }, { name = icmp_outbound direction = outbound remote = 0.0.0.0/0 icmp = {'
                optional: true
            version: v1.3.2
            outputs:
              - name: ids
                description: The instance ids
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name_prefix
                scope: global
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: resource_group_id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: vpc_subnet_count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: flow_log_cos_bucket_name
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: kms_key_crn
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: |-
                  8
                        }
                      }
                    ]
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } }, { name = icmp_outbound direction = outbound remote = 0.0.0.0/0 icmp = {'
                optional: true
            version: v1.3.1
            outputs:
              - name: ids
                description: The instance ids
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name_prefix
                scope: global
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: resource_group_id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: vpc_subnet_count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: 10.0.0.0/8
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: flow_log_cos_bucket_name
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: kms_key_crn
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: |-
                  8
                        }
                      }
                    ]
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: '[ { name = http_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 80 port_max = 80 } }, { name = https_outbound direction = outbound remote = 0.0.0.0/0 tcp = { port_min = 443 port_max = 443 } }, { name = dns_outbound direction = outbound remote = 0.0.0.0/0 udp = { port_min = 53 port_max = 53 } }, { name = icmp_outbound direction = outbound remote = 0.0.0.0/0 icmp = {'
                optional: true
            version: v1.3.0
            outputs:
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output instance_count {   value = var.vpc_subnet_count }
                description: output instance_count {   value = var.vpc_subnet_count }
              - name: output public_ips {   value = module.vsi-instance.public_ips }
                description: output public_ips {   value = module.vsi-instance.public_ips }
              - name: output private_ips {   value = module.vsi-instance.private_ips }
                description: output private_ips {   value = module.vsi-instance.private_ips }
              - name: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
                description: output network_interface_ids {   value = module.vsi-instance.network_interface_ids }
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where bastion servers will be provisioned
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: The name of the IBM Cloud resource group where the Bastion instance will be created.
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: List of tags
                default: []
                optional: true
              - name: create_public_ip
                type: bool
                description: Flag to create a public ip address on the bastion instance
                default: false
                optional: true
            version: v1.2.0
            outputs:
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output instance_count {   value = var.subnet_count }
                description: output instance_count {   value = var.subnet_count }
              - name: output public_ips {   value = module.bastion[*].bastion_public_ip }
                description: output public_ips {   value = module.bastion[*].bastion_public_ip }
              - name: output private_ips {   value = module.bastion[*].bastion_private_ip }
                description: output private_ips {   value = module.bastion[*].bastion_private_ip }
              - name: output network_interface_ids {   value = module.bastion[*].bastion_network_interface_ids[0] }
                description: output network_interface_ids {   value = module.bastion[*].bastion_network_interface_ids[0] }
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: string
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: string
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
              - name: region
                scope: global
                type: string
              - name: name_prefix
                scope: global
                type: string
              - name: ibmcloud_api_key
                scope: global
                type: string
              - name: tags
                scope: module
                type: list(string)
                default: ""
            version: v1.1.1
            outputs:
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output bastion_ips {   value = module.bastion[*].bastion_public_ip }
                description: output bastion_ips {   value = module.bastion[*].bastion_public_ip }
              - name: output bastion_private_ips {   value = module.bastion[*].bastion_private_ip }
                description: output bastion_private_ips {   value = module.bastion[*].bastion_private_ip }
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: string
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: string
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
              - name: region
                scope: global
                type: string
              - name: name_prefix
                scope: global
                type: string
              - name: ibmcloud_api_key
                scope: global
                type: string
              - name: tags
                scope: module
                type: list(string)
            version: v1.1.0
            outputs:
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output bastion_ips {   value = module.bastion[*].bastion_public_ip }
                description: output bastion_ips {   value = module.bastion[*].bastion_public_ip }
              - name: output bastion_private_ips {   value = module.bastion[*].bastion_private_ip }
                description: output bastion_private_ips {   value = module.bastion[*].bastion_private_ip }
          - platforms: []
            dependencies:
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: subnet_count
                moduleRef:
                  id: vpc
                  output: subnet_count
                type: number
                description: The number of subnets on the vpc instance
              - name: resource_group_name
                scope: global
                type: string
                description: The name of the IBM Cloud resource group where the cluster will be created/can be found.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: name_prefix
                scope: global
                type: string
                description: The name of the vpc resource
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: List of tags
                default: []
                optional: true
              - name: openvpn_server_network
                scope: ignore
                type: string
                default: 10.66.0.0
                optional: true
            version: v1.0.0
            outputs:
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output bastion_ip {   value = module.bastion.bastion_public_ip }
                description: output bastion_ip {   value = module.bastion.bastion_public_ip }
              - name: output bastion_private_ip {   value = module.bastion.bastion_private_ip }
                description: output bastion_private_ip {   value = module.bastion.bastion_private_ip }
              - name: 'output instance_ips {   value = [     for instance in local.instances : instance.primary_network_interface.0.primary_ipv4_address   ] }'
                description: 'output instance_ips {   value = [     for instance in local.instances : instance.primary_network_interface.0.primary_ipv4_address   ] }'
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: vsi
      - id: github.com/cloud-native-toolkit/terraform-vsi-vpn
        name: vsi-vpn
        type: terraform
        description: Module to provision OpenVPN into a Virtual Private Cloud Virtual Server Instance
        tags:
          - infrastructure
          - network
          - vpc
          - vpn
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-ubuntu-20-04-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: bx2-2x8
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.7.0
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: names
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-ubuntu-20-04-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: bx2-2x8
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.6.5
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: names
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-ubuntu-20-04-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: bx2-2x8
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.6.4
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: names
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-ubuntu-20-04-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: bx2-2x8
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.6.3
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: names
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-ubuntu-20-04-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: bx2-2x8
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.6.2
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: names
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-ubuntu-20-04-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: bx2-2x8
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.6.1
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: names
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-ubuntu-20-04-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: bx2-2x8
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.6.0
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: names
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-3
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.5.0
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: names
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-3
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.4.1
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: names
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-3
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
            version: v1.4.0
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: names
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-3
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.3.1
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: names
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-3
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.3.0
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: names
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-3
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.2.4
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: names
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-3
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.2.3
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-3
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
            version: v1.2.2
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
            version: v1.2.1
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: flow_log_cos_bucket_name
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: kms_key_crn
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
            version: v1.2.0
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: maintenance_security_group_id
                description: The id of the security group that was created
              - name: maintenance_security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
            version: v1.1.0
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_ids
                description: ID of the security group assigned to the OpenVPN interface
              - name: maintenance_security_group_ids
                description: ID of the security group used to allow connection from OpenVPN to your bastion instances
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
            version: v1.0.7
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_ids
                description: ID of the security group assigned to the OpenVPN interface
              - name: maintenance_security_group_ids
                description: ID of the security group used to allow connection from OpenVPN to your bastion instances
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: subnet_count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: instance_network_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
            version: v1.0.6
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_ids
                description: ID of the security group assigned to the OpenVPN interface
              - name: maintenance_security_group_ids
                description: ID of the security group used to allow connection from OpenVPN to your bastion instances
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: subnet_count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: instance_network_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
            version: v1.0.5
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_ids
                description: ID of the security group assigned to the OpenVPN interface
              - name: maintenance_security_group_ids
                description: ID of the security group used to allow connection from OpenVPN to your bastion instances
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: subnet_count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: instance_network_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
            version: v1.0.4
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_ids
                description: ID of the security group assigned to the OpenVPN interface
              - name: maintenance_security_group_ids
                description: ID of the security group used to allow connection from OpenVPN to your bastion instances
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: subnet_count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: instance_network_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
            version: v1.0.3
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_ids
                description: ID of the security group assigned to the OpenVPN interface
              - name: maintenance_security_group_ids
                description: ID of the security group used to allow connection from OpenVPN to your bastion instances
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: network_interface_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
            version: v1.0.2
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_ids
                description: ID of the security group assigned to the OpenVPN interface
              - name: maintenance_security_group_ids
                description: ID of the security group used to allow connection from OpenVPN to your bastion instances
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 1.0.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: bastion
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-vsi-bastion
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: subnets
                  output: subnet_count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: instance_count
                moduleRef:
                  id: bastion
                  output: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                moduleRef:
                  id: bastion
                  output: instance_network_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: image_name
                scope: ignore
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-2
                optional: true
              - name: profile_name
                scope: ignore
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                scope: ignore
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                scope: ignore
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
            version: v1.0.1
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_ids
                description: ID of the security group assigned to the OpenVPN interface
              - name: maintenance_security_group_ids
                description: ID of the security group used to allow connection from OpenVPN to your bastion instances
          - platforms: []
            dependencies:
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the existing VPC instance where the OpenVPN instance(s) will be provisioned.
              - name: subnet_count
                moduleRef:
                  id: vpc
                  output: subnet_count
                type: number
                description: The number of subnets on the vpc instance that will be used for the OpenVPN instance(s)
              - name: resource_group_name
                scope: global
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the resources will be provisioned.
              - name: name_prefix
                scope: global
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: tags
                scope: module
                type: list(string)
                description: The list of tags that will be applied to the OpenVPN vsi instances.
                default: []
                optional: true
              - name: openvpn_server_network
                scope: ignore
              - name: resource_group_id
                type: string
                description: The id of the IBM Cloud resource group where the resources will be provisioned.
              - name: subnets
                type: list(object({id = string, zone = string, label = string}))
                description: The list of subnet objects where OpenVPN servers will be provisioned
              - name: ssh_key_id
                type: string
                description: The id of a key registered with the VPC
              - name: ssh_private_key
                type: string
                description: The private key that is paired with ssh_key_id
              - name: image_name
                type: string
                description: Name of the image to use for the OpenVPN instance
                default: ibm-centos-7-9-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Virtual Server Instance profile to use for the OpenVPN instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the OpenVPN instance
                default: 0.0.0.0/0
                optional: true
              - name: security_group_rules
                type: |-
                  list(object({
                  //    name=string,
                  //    direction=string,
                  //    remote=optional(string),
                  //    ip_version=optional(string),
                  //    tcp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    udp=optional(object({
                  //      port_min=number,
                  //      port_max=number
                  //    })),
                  //    icmp=optional(object({
                  //
                description: List of security group rules to set on the OpenVPN security group in addition to inbound SSH and VPC and outbound DNS, ICMP, and HTTP(s) rules
                default: []
                optional: true
              - name: instance_count
                type: number
                description: The number of Bastion/jump box instances routable by the OpenVPN server.
              - name: instance_network_ids
                type: list(string)
                description: The list of network interface ids for the Bastion/jump box servers.
            version: v1.0.0
            outputs:
              - name: ids
                description: ID of the OpenVPN virtual server instance
              - name: count
                description: ID of the OpenVPN virtual server instance
              - name: private_ips
                description: Private IP address of the OpenVPN virtual server instance
              - name: public_ips
                description: Public IP address of the OpenVPN virtual server instance
              - name: security_group_ids
                description: ID of the security group assigned to the OpenVPN interface
              - name: maintenance_security_group_ids
                description: ID of the security group used to allow connection from OpenVPN to your bastion instances
          - platforms: []
            dependencies:
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
            variables:
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
              - name: subnet_count
                moduleRef:
                  id: vpc
                  output: subnet_count
                type: string
              - name: resource_group_name
                scope: global
                type: string
              - name: region
                scope: global
                type: string
              - name: name_prefix
                scope: global
                type: string
              - name: ibmcloud_api_key
                scope: global
                type: string
              - name: tags
                scope: module
                type: string
              - name: openvpn_server_network
                scope: ignore
                type: string
            version: v0.0.1
            outputs:
              - name: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
                description: output vpc_name {   value = data.ibm_is_vpc.vpc.name }
              - name: output bastion_ip {   value = module.bastion.bastion_public_ip }
                description: output bastion_ip {   value = module.bastion.bastion_public_ip }
              - name: output bastion_private_ip {   value = module.bastion.bastion_private_ip }
                description: output bastion_private_ip {   value = module.bastion.bastion_private_ip }
              - name: 'output instance_ips {   value = [     for instance in local.instances : instance.primary_network_interface.0.primary_ipv4_address   ] }'
                description: 'output instance_ips {   value = [     for instance in local.instances : instance.primary_network_interface.0.primary_ipv4_address   ] }'
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: vsi
      - id: github.com/cloud-native-toolkit/terraform-ibm-vpc-vsi
        name: ibm-vpc-vsi
        type: terraform
        description: Module to provision virtual server instance
        tags:
          - tools
          - infrastructure
          - virtual server
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.11.3'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-5-minimal-amd64-1
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: list(object({}))
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: acl_rules
                type: list(object({}))
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
              - name: target_network_range
                type: string
                description: The ip address range that should be used for the network acl rules generated from the security groups
                default: 0.0.0.0/0
                optional: true
            version: v1.10.0
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
                description: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
              - name: output count {   value       = var.vpc_subnet_count   description = "The number of vsi instances created. Should be the same as length(names)" }
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.11.3'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-5-minimal-amd64-1
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: list(object({}))
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: acl_rules
                type: list(object({}))
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
              - name: target_network_range
                type: string
                description: The ip address range that should be used for the network acl rules generated from the security groups
                default: 0.0.0.0/0
                optional: true
            version: v1.9.1
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
                description: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
              - name: output count {   value       = var.vpc_subnet_count   description = "The number of vsi instances created. Should be the same as length(names)" }
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.11.3'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-5-minimal-amd64-1
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: list(object({}))
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: acl_rules
                type: list(object({}))
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
              - name: target_network_range
                type: string
                description: The ip address range that should be used for the network acl rules generated from the security groups
                default: 0.0.0.0/0
                optional: true
            version: v1.9.0
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
                description: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
              - name: output count {   value       = var.vpc_subnet_count   description = "The number of vsi instances created. Should be the same as length(names)" }
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.11.3'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: list(object({}))
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: acl_rules
                type: list(object({}))
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
            version: v1.8.1
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
                description: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
              - name: output count {   value       = var.vpc_subnet_count   description = "The number of vsi instances created. Should be the same as length(names)" }
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.11.3'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: list(object({}))
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: acl_rules
                type: list(object({}))
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
            version: v1.8.0
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
                description: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
              - name: output count {   value       = var.vpc_subnet_count   description = "The number of vsi instances created. Should be the same as length(names)" }
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.11.3'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: list(object({}))
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: acl_rules
                type: list(object({}))
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
            version: v1.7.1
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
                description: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
              - name: output count {   value       = var.vpc_subnet_count   description = "The number of vsi instances created. Should be the same as length(names)" }
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.11.3'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
              - name: acl_rules
                type: string
                description: List of rules to set on the subnet access control list
                default: []
                optional: true
            version: v1.7.0
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
                description: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
              - name: output count {   value       = var.vpc_subnet_count   description = "The number of vsi instances created. Should be the same as length(names)" }
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.11.3'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.6.0
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
                description: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
              - name: output count {   value       = var.vpc_subnet_count   description = "The number of vsi instances created. Should be the same as length(names)" }
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.5.2
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
                description: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
              - name: output count {   value       = var.vpc_subnet_count   description = "The number of vsi instances created. Should be the same as length(names)" }
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.5.1
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
                description: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
              - name: output count {   value       = var.vpc_subnet_count   description = "The number of vsi instances created. Should be the same as length(names)" }
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.5.0
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
                description: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
              - name: output count {   value       = var.vpc_subnet_count   description = "The number of vsi instances created. Should be the same as length(names)" }
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.4.1
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
                description: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
              - name: output count {   value       = var.vpc_subnet_count   description = "The number of vsi instances created. Should be the same as length(names)" }
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
              - name: allow_deprecated_image
                type: bool
                description: Flag indicating that deprecated images should be allowed for use in the Virtual Server instance. If the value is `false` and the image is deprecated then the module will fail to provision
                default: true
                optional: true
            version: v1.4.0
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
                description: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
            version: v1.3.2
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
                description: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
            version: v1.3.1
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
                description: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: flow_log_cos_bucket_name
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: kms_key_crn
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
            version: v1.3.0
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
              - name: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
                description: output network_interface_ids {   value = ibm_is_instance.vsi[*].primary_network_interface[0].id }
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: flow_log_cos_bucket_name
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: kms_key_crn
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
              - name: security_group_rules
                type: string
                description: List of security group rules to set on the bastion security group in addition to the SSH rules
                default: []
                optional: true
            version: v1.2.2
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: flow_log_cos_bucket_name
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: kms_key_crn
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
            version: v1.2.1
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: SSH key ID to inject into the virtual server instance
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: flow_log_cos_bucket_name
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: kms_key_crn
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: ""
                optional: true
              - name: auto_delete_volume
                type: bool
                description: Flag indicating that any attached volumes should be deleted when the instance is deleted
                default: true
                optional: true
            version: v1.2.0
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
              - name: security_group_id
                description: The id of the security group that was created
              - name: security_group
                description: The security group that was created
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: ssh_key_ids
                type: list(string)
                description: List of SSH key IDs to inject into the virtual server instance
                default: []
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
              - name: flow_log_cos_bucket_name
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
                optional: true
            version: v1.1.0
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: label
                type: string
                description: The label for the server instance
                default: server
                optional: true
              - name: image_name
                type: string
                description: The name of the image to use for the virtual server
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: profile_name
                type: string
                description: Instance profile to use for the bastion instance
                default: cx2-2x4
                optional: true
              - name: ssh_key_ids
                type: list(string)
                description: List of SSH key IDs to inject into the virtual server instance
                default: []
                optional: true
              - name: allow_ssh_from
                type: string
                description: An IP address, a CIDR block, or a single security group identifier to allow incoming SSH connection to the virtual server
                default: ""
                optional: true
              - name: create_public_ip
                type: bool
                description: Set whether to allocate a public IP address for the virtual server instance
                default: false
                optional: true
              - name: init_script
                type: string
                description: Script to run during the instance initialization. Defaults to an Ubuntu specific script when set to empty
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be added to the instance
                default: []
                optional: true
            version: v1.0.0
            outputs:
              - name: ids
                description: The instance id
              - name: names
                description: The instance name
              - name: crns
                description: The crn of the instance
              - name: public_ips
                description: The public ips of the instances
              - name: private_ips
                description: The private ips of the instances
              - name: location
                description: The instance location
              - name: service
                description: The name of the service for the instance
              - name: type
                description: The type of the service for the instance
              - name: label
                description: The label used for the instance
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            version: v0.0.0
            variables:
              - name: ibmcloud_api_key
                type: string
                description: The api key for IBM Cloud access
              - name: resource_group_name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
                default: dal10
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: name_prefix
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under
                default: entry
                optional: true
              - name: sshPublicKey
                type: string
                description: sshPublicKey that should be applied to the service
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-transit-gateway
        name: ibm-transit-gateway
        type: terraform
        description: Provisions the IBM Cloud Transit Gateway with connections to VPC instances
        tags:
          - infrastructure
          - networking
        versions:
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
                discriminator: '*'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: connections
                moduleRef:
                  id: vpc
                  output: crn
                mapper: collect
                type: list(string)
                description: The list of vpc instance resource_crn to add network connections for.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name
                scope: module
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
            version: v0.1.0
            outputs: []
          - platforms: []
            dependencies:
              - id: resource-group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource-group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: connections
                moduleRef:
                  id: vpc
                  output: crn
                type: list(string)
                description: The list of vpc instance resource_crn to add network connections for.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name
                scope: module
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The api key for IBM Cloud access
            version: v0.0.1
            outputs: []
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-flow-log
        name: ibm-flow-logs
        type: terraform
        description: Module to create Flow Logs for a provided resource
        tags:
          - audit
          - flow log
          - vpc
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: target
                refs: []
                interface: github.com/cloud-native-toolkit/garage-terraform-modules#ibm-vpc-resource
              - id: auth
                refs: []
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the resource group where the flow logs will be provisioned
              - name: cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                type: string
                description: Cloud Object Storage bucket name for flow logs
              - name: target_count
                moduleRef:
                  id: target
                  output: count
                type: number
                description: The number of resources for which flow logs will be created
                default: 0
                optional: true
              - name: target_ids
                moduleRef:
                  id: target
                  output: ids
                type: list(string)
                description: The ids of the target resources for the flow log
              - name: target_names
                moduleRef:
                  id: target
                  output: names
                type: list(string)
                description: The names of the target resources for the flow logs
              - name: auth_id
                moduleRef:
                  id: auth
                  output: id
                optional: true
                type: string
                description: The id of the service authorization that allows the flow log to write to the cos bucket
                default: ""
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: provision
                type: bool
                description: Flag indicating that the subnet should be provisioned. If 'false' then the subnet will be looked up.
                default: true
                optional: true
            version: v1.0.0
            outputs:
              - name: count
                description: The number of flow logs created
              - name: ids
                description: The ids of the generated flow logs
              - name: names
                description: The names of the generated flow logs
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-vpn-gateway
        name: ibm-vpc-vpn-gateway
        type: terraform
        description: Module to provision a VPN Gateway within a Virtual Private Cloud instance
        tags:
          - infrastructure
          - networking
          - vpn
          - vpc
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.8.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: subnets
                  output: vpc_name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: label
                type: string
                description: The label for the server instance
                default: vpn
                optional: true
              - name: mode
                type: string
                description: The optional mode of operation for the VPN gateway. Valid values are route or policy
                default: "null"
                optional: true
              - name: tags
                type: list(string)
                description: List of tags for the resource
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the resource should be provisioned. If false the resource will be looked up.
                default: true
                optional: true
            version: v1.1.0
            outputs:
              - name: ids
                description: output "ids" {   value = var.provision ? local.
              - name: 'output[*].id : []   description = "The ids of the gateways that were created" }'
                description: The ids of the gateways that were created
              - name: crns
                description: output "crns" {   value = var.provision ? local.
              - name: 'output[*].crn : []   description = "The crns of the gateways that were created" }'
                description: The crns of the gateways that were created
              - name: count
                description: The number of gateways that were created
              - name: provision
                description: The flag indicating that the gateway was provisioned
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.8.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: subnets
                  output: vpc_name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: region
                scope: global
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: label
                type: string
                description: The label for the server instance
                default: vpn
                optional: true
              - name: mode
                type: string
                description: The optional mode of operation for the VPN gateway. Valid values are route or policy
                default: "null"
                optional: true
              - name: tags
                type: list(string)
                description: List of tags for the resource
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the resource should be provisioned. If false the resource will be looked up.
                default: true
                optional: true
            version: v1.0.1
            outputs:
              - name: ids
                description: The ids of the gateways that were created
              - name: count
                description: The number of gateways that were created
              - name: provision
                description: The flag indicating that the gateway was provisioned
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.11.3'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: The id of the IBM Cloud resource group where the VPC has been provisioned.
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: The name of the vpc instance
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: region
                type: string
                description: The IBM Cloud region where the cluster will be/has been installed.
              - name: ibmcloud_api_key
                type: string
                description: The IBM Cloud api token
              - name: label
                type: string
                description: The label for the server instance
                default: vpn
                optional: true
              - name: mode
                type: string
                description: The optional mode of operation for the VPN gateway. Valid values are route or policy
                default: "null"
                optional: true
              - name: tags
                type: list(string)
                description: List of tags for the resource
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the resource should be provisioned. If false the resource will be looked up.
                default: true
                optional: true
            version: v1.0.0
            outputs:
              - name: ids
                description: The ids of the gateways that were created
              - name: count
                description: The number of gateways that were created
              - name: provision
                description: The flag indicating that the gateway was provisioned
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
  - category: source-control
    categoryName: Source Control
    selection: single
    modules:
      - id: github.com/cloud-native-toolkit/terraform-k8s-source-control
        name: source-control
        alias: git
        type: terraform
        description: Module to install Source control into a cluster
        tags:
          - tools
          - devops
          - source control
          - git
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
              - name: type
                scope: module
                type: string
                description: The type of source control system (github or gitlab) currently
              - name: url
                scope: module
                type: string
                description: The url to the git host (base git host, org, or repo url)
            version: v1.2.5
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: platform.type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
                default: ""
                optional: true
              - name: type
                scope: module
                type: string
                description: The type of source control system (github or gitlab) currently
              - name: url
                scope: module
                type: string
                description: The url to the git host (base git host, org, or repo url)
            version: v1.2.4
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
              - name: type
                scope: module
                type: string
                description: The type of source control system (github or gitlab) currently
              - name: url
                scope: module
                type: string
                description: The url to the git host (base git host, org, or repo url)
            version: v1.2.3
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                default: ocp4
                optional: true
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                scope: global
                type: string
                description: The directory where the gitops configuration should be stored
              - name: type
                scope: module
                type: string
                description: The type of source control system (github or gitlab) currently
              - name: url
                scope: module
                type: string
                description: The url to the git host (base git host, org, or repo url)
            version: v1.2.2
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_type_code
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The cluster_type of the cluster
                optional: true
              - name: config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the kube config
              - name: cluster_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace in the cluster where the configuration should be created (e.g. tools)
              - name: gitops_dir
                type: string
                description: The directory where the gitops configuration should be stored
                optional: true
              - name: type
                type: string
                description: The type of source control system (github or gitlab) currently
              - name: url
                type: string
                description: The url to the git host (base git host, org, or repo url)
            version: v1.2.1
            outputs:
              - name: output "my
                description: output "my
              - name: 'output" { #  description = "Description of my'
                description: 'output" { #  description = "Description of my'
              - name: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
                description: 'output" #  value       = "value" #  depends_on  = [<some resource>] #}'
        provider: k8s
  - category: sre
    categoryName: SRE tools
    selection: multiple
    modules:
      - id: github.com/cloud-native-toolkit/terraform-ibm-activity-tracker
        name: ibm-activity-tracker
        type: terraform
        description: Provisions the IBM Cloud hosted Activity Tracker service
        tags:
          - sre
          - account
          - ibm cloud
          - activity tracker
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                scope: global
                alias: region
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned
                default: false
                optional: true
            version: v2.3.0
            outputs:
              - name: id
                description: The id of the provisioned instance.
              - name: guid
                description: The id of the provisioned instance.
              - name: name
                description: The name of the provisioned instance.
              - name: crn
                description: The id of the provisioned instance
              - name: location
                description: The location of the provisioned instance
              - name: service
                description: The service name of the key provisioned for the instance
              - name: label
                description: The label for the instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                scope: global
                alias: region
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned
                default: false
                optional: true
              - name: label
                type: string
                description: Label used to build the resource name if one is not provided.
                default: activity-tracker
                optional: true
            version: v2.2.0
            outputs:
              - name: id
                description: The id of the provisioned instance.
              - name: guid
                description: The id of the provisioned instance.
              - name: name
                description: The name of the provisioned instance.
              - name: crn
                description: The id of the provisioned instance
              - name: location
                description: The location of the provisioned instance
              - name: service
                description: The service name of the key provisioned for the instance
              - name: label
                description: The label for the instance
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                scope: global
                alias: region
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned
                default: false
                optional: true
            version: v2.1.2
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                scope: global
                alias: region
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned
                default: false
                optional: true
            version: v2.1.1
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                scope: global
                alias: region
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned
                default: false
                optional: true
            version: v2.1.0
          - platforms: []
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                scope: global
                alias: region
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned
                default: false
                optional: true
            version: v2.0.0
          - platforms: []
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                scope: global
                alias: region
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned
                optional: true
            version: v1.1.4
            outputs: []
          - platforms: []
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: Resource group where the cluster has been provisioned.
              - name: resource_location
                scope: global
                alias: region
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that the instance should be provisioned
                optional: true
            version: v1.1.3
            outputs: []
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-logdna
        name: logdna
        type: terraform
        description: Module to provision a LogDNA instance
        tags:
          - tools
          - devops
          - logdna
          - logging
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
                default: true
                optional: true
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: label
                type: string
                description: The label used to build the resource name if not provided
                default: logging
                optional: true
            version: v3.3.1
            outputs:
              - name: id
                description: The id of the provisioned instance.
              - name: guid
                description: The id of the provisioned instance.
              - name: name
                description: The name of the provisioned instance.
              - name: crn
                description: The id of the provisioned instance
              - name: location
                description: The location of the provisioned instance
              - name: service
                description: The service name of the provisioned instance
              - name: label
                description: The label for the instance
              - name: key_name
                description: The name of the key provisioned for the LogDNA instance.
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
                default: true
                optional: true
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: label
                type: string
                description: The label used to build the resource name if not provided
                default: logdna
                optional: true
            version: v3.3.0
            outputs:
              - name: id
                description: The id of the provisioned instance.
              - name: guid
                description: The id of the provisioned instance.
              - name: name
                description: The name of the provisioned instance.
              - name: crn
                description: The id of the provisioned instance
              - name: location
                description: The location of the provisioned instance
              - name: service
                description: The service name of the provisioned instance
              - name: label
                description: The label for the instance
              - name: key_name
                description: The name of the key provisioned for the LogDNA instance.
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
                default: true
                optional: true
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
            version: v3.2.1
            outputs:
              - name: id
                description: The id of the provisioned LogDNA instance.
              - name: guid
                description: The guid of the provisioned LogDNA instance.
              - name: name
                description: The name of the provisioned LogDNA instance.
              - name: key_name
                description: The name of the key provisioned for the LogDNA instance.
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
                default: true
                optional: true
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
            version: v3.2.0
            outputs:
              - name: id
                description: The id of the provisioned LogDNA instance.
              - name: guid
                description: The guid of the provisioned LogDNA instance.
              - name: name
                description: The name of the provisioned LogDNA instance.
              - name: key_name
                description: The name of the key provisioned for the LogDNA instance.
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
                default: true
                optional: true
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
            version: v3.1.2
            outputs:
              - name: id
                description: The id of the provisioned LogDNA instance.
              - name: name
                description: The name of the provisioned LogDNA instance.
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
                default: true
                optional: true
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
            version: v3.1.1
            outputs:
              - name: id
                description: The id of the provisioned LogDNA instance.
              - name: name
                description: The name of the provisioned LogDNA instance.
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
            version: v3.1.0
            outputs:
              - name: id
                description: The id of the provisioned LogDNA instance.
              - name: name
                description: The name of the provisioned LogDNA instance.
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                optional: true
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
                optional: true
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The identifier for the cluster
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: platform.kubeconfig
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                scope: global
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: service_account_name
                type: string
                description: The service account that the logdna agent should run under
                default: logdna-agent
                optional: true
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
                optional: true
            version: v3.0.1
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The identifier for the cluster
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: platform.kubeconfig
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                scope: global
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: service_account_name
                type: string
                description: The service account that the logdna agent should run under
                default: logdna-agent
                optional: true
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
                optional: true
            version: v3.0.0
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The identifier for the cluster
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: platform.kubeconfig
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                scope: global
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: service_account_name
                type: string
                description: The service account that the logdna agent should run under
                default: logdna-agent
                optional: true
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
                optional: true
            version: v2.7.0
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The identifier for the cluster
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: platform.kubeconfig
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                scope: global
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: service_account_name
                type: string
                description: The service account that the logdna agent should run under
                default: logdna-agent
                optional: true
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
                optional: true
            version: v2.6.0
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: The identifier for the cluster
                default: ""
                optional: true
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                type: string
                description: The name of the cluster
                default: ""
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster referenced by cluster_id (openshift or ocp3 or ocp4 or kubernetes)
                default: ""
                optional: true
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
                default: ""
                optional: true
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
                optional: true
              - name: resource_group_name
                scope: global
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: service_account_name
                type: string
                description: The service account that the logdna agent should run under
                default: logdna-agent
                optional: true
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
                optional: true
            version: v2.5.0
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: The identifier for the cluster
                default: ""
                optional: true
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                type: string
                description: The name of the cluster
                default: ""
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster referenced by cluster_id (openshift or ocp3 or ocp4 or kubernetes)
                default: ""
                optional: true
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
                default: ""
                optional: true
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
                optional: true
              - name: resource_group_name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                default: 7-day
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: service_account_name
                type: string
                description: The service account that the logdna agent should run under
                default: logdna-agent
                optional: true
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
                optional: true
              - name: private_endpoint
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
            version: v2.4.4
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: The identifier for the cluster
                optional: true
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                type: string
                description: The name of the cluster
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster referenced by cluster_id (openshift or ocp3 or ocp4 or kubernetes)
                optional: true
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
                optional: true
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                optional: true
              - name: resource_group_name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (lite, 7-day, 14-day, or 30-day)
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                optional: true
              - name: service_account_name
                type: string
                description: The service account that the logdna agent should run under
                optional: true
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                optional: true
              - name: sync
                type: string
                description: Semaphore to synchronize activities between modules
                optional: true
              - name: private_endpoint
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                optional: true
            version: v2.4.3
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-logdna-bind
        name: ibm-logdna-bind
        type: terraform
        description: Binds the logdna instance to a cluster
        tags:
          - tools
          - logging
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: logdna
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-logdna
                    version: '>= 3.0.0'
              - id: sysdig_bind
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig-bind
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The identifier for the cluster
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: platform.kubeconfig
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: sync
                moduleRef:
                  id: sysdig_bind
                  output: sync
                optional: true
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
              - name: logdna_id
                moduleRef:
                  id: logdna
                  output: guid
                type: string
                description: The id of the logdna instance that will be gound to the cluster
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The apikey used to access the IBM Cloud account
            version: v1.1.1
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: logdna
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-logdna
                    version: '>= 3.0.0'
              - id: sysdig_bind
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig-bind
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The identifier for the cluster
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: sync
                moduleRef:
                  id: sysdig_bind
                  output: sync
                optional: true
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
              - name: logdna_id
                moduleRef:
                  id: logdna
                  output: guid
                type: string
                description: The id of the logdna instance that will be gound to the cluster
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The apikey used to access the IBM Cloud account
            version: v1.2.1
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [null_resource.logdna_bind] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: logdna
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-logdna
                    version: '>= 3.0.0'
              - id: sysdig_bind
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig-bind
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The identifier for the cluster
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: sync
                moduleRef:
                  id: sysdig_bind
                  output: sync
                optional: true
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
              - name: logdna_id
                moduleRef:
                  id: logdna
                  output: guid
                type: string
                description: The id of the logdna instance that will be gound to the cluster
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The apikey used to access the IBM Cloud account
            version: v1.2.0
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [null_resource.logdna_bind] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: logdna
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-logdna
                    version: '>= 3.0.0'
              - id: sysdig_bind
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig-bind
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The identifier for the cluster
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: platform.kubeconfig
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: sync
                moduleRef:
                  id: sysdig_bind
                  output: sync
                optional: true
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
              - name: logdna_id
                moduleRef:
                  id: logdna
                  output: guid
                type: string
                description: The id of the logdna instance that will be gound to the cluster
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The apikey used to access the IBM Cloud account
            version: v1.1.0
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: logdna
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-logdna
                    version: '>= 3.0.0'
              - id: sysdig_bind
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig-bind
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The identifier for the cluster
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: platform.kubeconfig
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: sync
                moduleRef:
                  id: sysdig_bind
                  output: sync
                optional: true
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
              - name: name
                moduleRef:
                  id: logdna
                  output: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The apikey used to access the IBM Cloud account
            version: v1.0.7
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: sysdig_bind
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig-bind
                    version: '>= 1.0.0'
                optional: true
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The identifier for the cluster
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: platform.kubeconfig
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: sync
                moduleRef:
                  id: sysdig_bind
                  output: sync
                optional: true
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The apikey used to access the IBM Cloud account
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
            version: v1.0.6
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The identifier for the cluster
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: platform.kubeconfig
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The apikey used to access the IBM Cloud account
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: sync
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
                optional: true
            version: v1.0.5
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The identifier for the cluster
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: platform.kubeconfig
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The apikey used to access the IBM Cloud account
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: sync
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
                optional: true
            version: v1.0.4
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The identifier for the cluster
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: platform.kubeconfig
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The apikey used to access the IBM Cloud account
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: sync
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
                optional: true
            version: v1.0.3
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The identifier for the cluster
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: platform.kubeconfig
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The apikey used to access the IBM Cloud account
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: sync
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
                optional: true
            version: v1.0.2
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The identifier for the cluster
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: platform.kubeconfig
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: ibmcloud_api_key
                type: string
                description: The apikey used to access the IBM Cloud account
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: sync
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
                optional: true
            version: v1.0.1
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The identifier for the cluster
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: platform.kubeconfig
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: ibmcloud_api_key
                type: string
                description: The apikey used to access the IBM Cloud account
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: sync
                type: string
                description: Semaphore to synchronize activities between modules
                default: ""
                optional: true
            version: v1.0.0
            outputs:
              - name: sync
                description: output "sync" {   value = "logdna"   depends_on = [helm_release.logdna] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.1
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-sysdig
        name: sysdig
        type: terraform
        description: Module to set up the Sysdig into a cluster
        tags:
          - tools
          - devops
          - monitoring
        versions:
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: plan
                type: string
                description: The type of plan the service instance should run under (trial or graduated-tier)
                default: graduated-tier
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
                default: true
                optional: true
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: label
                type: string
                description: The label used to build the resource name if not provided.
                default: monitoring
                optional: true
            version: v3.4.0
            outputs:
              - name: id
                description: The id of the provisioned instance.
              - name: guid
                description: The id of the provisioned instance.
              - name: name
                description: The name of the provisioned instance.
              - name: crn
                description: The id of the provisioned instance
              - name: location
                description: The location of the provisioned instance
              - name: service
                description: The service name of the provisioned instance
              - name: label
                description: The label for the instance
              - name: key_name
                description: The name of the key provisioned for the Sysdig instance.
              - name: access_key
                description: The access key for the Sysdig instance.
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api token
              - name: plan
                type: string
                description: The type of plan the service instance should run under (trial or graduated-tier)
                default: graduated-tier
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
                default: true
                optional: true
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
            version: v3.3.0
            outputs:
              - name: id
                description: The id of the provisioned Sysdig instance.
              - name: name
                description: The name of the provisioned Sysdig instance.
              - name: guid
                description: The id of the provisioned Sysdig instance.
              - name: key_name
                description: The name of the key provisioned for the Sysdig instance.
              - name: access_key
                description: The access key for the Sysdig instance.
          - platforms: []
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (trial or graduated-tier)
                default: graduated-tier
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
                default: true
                optional: true
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
            version: v3.2.2
            outputs:
              - name: id
                description: The id of the provisioned Sysdig instance.
              - name: name
                description: The name of the provisioned Sysdig instance.
              - name: guid
                description: The id of the provisioned Sysdig instance.
              - name: key_name
                description: The name of the key provisioned for the Sysdig instance.
              - name: access_key
                description: The access key for the Sysdig instance.
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
              - name: region
                scope: global
                type: string
              - name: name_prefix
                scope: global
                type: string
              - name: plan
                type: string
              - name: tags
                type: string
              - name: provision
                type: string
              - name: name
                type: string
            version: v3.2.1
            outputs:
              - name: id
                description: The id of the provisioned Sysdig instance.
              - name: name
                description: The name of the provisioned Sysdig instance.
              - name: guid
                description: The id of the provisioned Sysdig instance.
              - name: key_name
                description: The name of the key provisioned for the Sysdig instance.
              - name: access_key
                description: The access key for the Sysdig instance.
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (trial or graduated-tier)
                default: graduated-tier
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
                default: true
                optional: true
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
            version: v3.2.0
            outputs:
              - name: id
                description: The id of the provisioned Sysdig instance.
              - name: name
                description: The name of the provisioned Sysdig instance.
              - name: guid
                description: The id of the provisioned Sysdig instance.
              - name: key_name
                description: The name of the key provisioned for the Sysdig instance.
              - name: access_key
                description: The access key for the Sysdig instance.
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (trial or graduated-tier)
                default: graduated-tier
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
                default: true
                optional: true
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
            version: v3.1.3
            outputs:
              - name: id
                description: The id of the provisioned LogDNA instance.
              - name: name
                description: The name of the provisioned LogDNA instance.
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (trial or graduated-tier)
                default: graduated-tier
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
                default: true
                optional: true
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
            version: v3.1.2
            outputs:
              - name: id
                description: The id of the provisioned LogDNA instance.
              - name: name
                description: The name of the provisioned LogDNA instance.
          - platforms: []
            dependencies: []
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (trial or graduated-tier)
                default: graduated-tier
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
            version: v3.1.1
            outputs:
              - name: id
                description: The id of the provisioned LogDNA instance.
              - name: name
                description: The name of the provisioned LogDNA instance.
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                optional: true
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
                optional: true
            variables:
              - name: resource_group_name
                scope: global
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (trial or graduated-tier)
                default: graduated-tier
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
            version: v3.1.0
            outputs:
              - name: id
                description: The id of the provisioned LogDNA instance.
              - name: name
                description: The name of the provisioned LogDNA instance.
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                optional: true
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
                optional: true
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                scope: global
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (trial or graduated-tier)
                default: graduated-tier
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                default: ""
                optional: true
            version: v3.0.1
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [helm_release.sysdig] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                scope: global
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (trial or graduated-tier)
                default: graduated-tier
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                default: ""
                optional: true
            version: v3.0.0
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [helm_release.sysdig] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                scope: global
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (trial or graduated-tier)
                default: graduated-tier
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                default: ""
                optional: true
            version: v2.7.0
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [helm_release.sysdig] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                optional: true
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                default: ""
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                optional: true
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                default: ""
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                optional: true
                type: string
                description: The path to the config file for the cluster
                default: ""
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                optional: true
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
              - name: resource_group_name
                scope: global
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (trial or graduated-tier)
                default: graduated-tier
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                default: ""
                optional: true
            version: v2.6.0
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [helm_release.sysdig] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
                default: ""
                optional: true
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
                default: ""
                optional: true
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
                optional: true
              - name: resource_group_name
                scope: global
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                scope: global
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (trial or graduated-tier)
                default: graduated-tier
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                default: ""
                optional: true
            version: v2.5.0
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [helm_release.sysdig] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
                default: ""
                optional: true
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
                default: ""
                optional: true
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
                optional: true
              - name: resource_group_name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                default: ""
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (trial or graduated-tier)
                default: graduated-tier
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                default: []
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                default: ""
                optional: true
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                default: ""
                optional: true
              - name: private_endpoint
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
            version: v2.4.0
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [helm_release.sysdig] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                optional: true
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                optional: true
              - name: cluster_type
                moduleRef:
                  id: cluster
                  output: type_code
                type: string
                description: The type of cluster that should be created (openshift or ocp3 or ocp4 or kubernetes)
                optional: true
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
                optional: true
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                optional: true
              - name: resource_group_name
                type: string
                description: Existing resource group where the IKS cluster will be provisioned.
              - name: resource_location
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: name_prefix
                type: string
                description: The prefix name for the service. If not provided it will default to the resource group name
                optional: true
              - name: plan
                type: string
                description: The type of plan the service instance should run under (trial or graduated-tier)
                optional: true
              - name: tags
                type: list(string)
                description: Tags that should be applied to the service
                optional: true
              - name: provision
                type: bool
                description: Flag indicating that logdna instance should be provisioned
              - name: name
                type: string
                description: The name that should be used for the service, particularly when connecting to an existing service. If not provided then the name will be defaulted to {name prefix}-{service}
                optional: true
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                optional: true
            version: v2.3.3
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [helm_release.sysdig] }
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-ibm-sysdig-bind
        name: sysdig-bind
        type: terraform
        description: Module to bind a Sysdig instance to a cluster
        tags:
          - tools
          - monitor
          - sres
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: sysdig
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: platform.kubeconfig
                type: string
                description: The path to the config file for the cluster
                default: ""
                optional: true
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
                optional: true
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: guid
                moduleRef:
                  id: sysdig
                  output: guid
                type: string
                description: The guid of the existing Sysdig instance
              - name: access_key
                moduleRef:
                  id: sysdig
                  output: access_key
                type: string
                description: The access key of the existing Sysdig instance
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                default: ""
                optional: true
            version: v1.1.1
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [helm_release.sysdig] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: sysdig
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: guid
                moduleRef:
                  id: sysdig
                  output: guid
                type: string
                description: The guid of the existing Sysdig instance
              - name: access_key
                moduleRef:
                  id: sysdig
                  output: access_key
                type: string
                description: The access key of the existing Sysdig instance
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                default: ""
                optional: true
            version: v1.1.1
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [null_resource.sysdig_bind] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: sysdig
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: guid
                moduleRef:
                  id: sysdig
                  output: guid
                type: string
                description: The guid of the existing Sysdig instance
              - name: access_key
                moduleRef:
                  id: sysdig
                  output: access_key
                type: string
                description: The access key of the existing Sysdig instance
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                default: ""
                optional: true
            version: v1.2.1
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [null_resource.sysdig_bind] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: sysdig
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: guid
                moduleRef:
                  id: sysdig
                  output: guid
                type: string
                description: The guid of the existing Sysdig instance
              - name: access_key
                moduleRef:
                  id: sysdig
                  output: access_key
                type: string
                description: The access key of the existing Sysdig instance
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                default: ""
                optional: true
            version: v1.1.1
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [null_resource.sysdig_bind] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: sysdig
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: platform.kubeconfig
                type: string
                description: The path to the config file for the cluster
                default: ""
                optional: true
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
                optional: true
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: guid
                moduleRef:
                  id: sysdig
                  output: guid
                type: string
                description: The guid of the existing Sysdig instance
              - name: access_key
                moduleRef:
                  id: sysdig
                  output: access_key
                type: string
                description: The access key of the existing Sysdig instance
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                default: ""
                optional: true
            version: v1.1.0
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [helm_release.sysdig] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: sysdig
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
                default: ""
                optional: true
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
                optional: true
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: guid
                moduleRef:
                  id: sysdig
                  output: guid
                type: string
                description: The guid of the existing Sysdig instance
              - name: access_key
                moduleRef:
                  id: sysdig
                  output: access_key
                type: string
                description: The access key of the existing Sysdig instance
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                default: ""
                optional: true
            version: v1.0.4
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [helm_release.sysdig] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: sysdig
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
                default: ""
                optional: true
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
                optional: true
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: guid
                moduleRef:
                  id: sysdig
                  output: guid
                type: string
                description: The guid of the existing Sysdig instance
              - name: access_key
                moduleRef:
                  id: sysdig
                  output: access_key
                type: string
                description: The access key of the existing Sysdig instance
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                default: ""
                optional: true
            version: v1.0.3
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [helm_release.sysdig] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: sysdig
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig
                    version: '>= 1.0.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
                default: ""
                optional: true
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
                optional: true
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: guid
                moduleRef:
                  id: sysdig
                  output: guid
                type: string
                description: The guid of the existing Sysdig instance
              - name: access_key
                moduleRef:
                  id: sysdig
                  output: access_key
                type: string
                description: The access key of the existing Sysdig instance
              - name: ibmcloud_api_key
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: resource_group_name
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                default: ""
                optional: true
            version: v1.0.2
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [helm_release.sysdig] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
                  - source: github.com/cloud-native-toolkit/terraform-ibm-ocp-vpc
                    version: '>= 1.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: sysdig
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig
                    version: '>= 1.0.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
                default: ""
                optional: true
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
                optional: true
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: guid
                moduleRef:
                  id: sysdig
                  output: guid
                type: string
                description: The guid of the existing Sysdig instance
              - name: access_key
                moduleRef:
                  id: sysdig
                  output: access_key
                type: string
                description: The access key of the existing Sysdig instance
              - name: ibmcloud_api_key
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: resource_group_name
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                default: ""
                optional: true
            version: v1.0.1
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [helm_release.sysdig] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies:
              - id: cluster
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
                    version: '>= 1.7.0'
                  - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
                    version: '>= 2.0.0'
              - id: namespace
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
                    version: '>= 2.1.0'
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: sysdig
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-sysdig
                    version: '>= 1.0.0'
            variables:
              - name: cluster_id
                moduleRef:
                  id: cluster
                  output: id
                type: string
                description: The id of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_name
                moduleRef:
                  id: cluster
                  output: name
                type: string
                description: The name of the cluster into which the sysdig instance should be bound
                default: ""
                optional: true
              - name: cluster_config_file_path
                moduleRef:
                  id: cluster
                  output: config_file_path
                type: string
                description: The path to the config file for the cluster
                default: ""
                optional: true
              - name: tools_namespace
                moduleRef:
                  id: namespace
                  output: name
                  discriminator: tools
                type: string
                description: The namespace where the tools have been deployed (where the configmap should be created)
                default: default
                optional: true
              - name: region
                scope: global
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: private_endpoint
                scope: global
                type: string
                description: Flag indicating that the agent should be created with private endpoints
                default: "true"
                optional: true
              - name: guid
                moduleRef:
                  id: sysdig
                  output: guid
                type: string
                description: The guid of the existing Sysdig instance
              - name: access_key
                moduleRef:
                  id: sysdig
                  output: access_key
                type: string
                description: The access key of the existing Sysdig instance
              - name: ibmcloud_api_key
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: resource_group_name
                type: string
                description: Geographic location of the resource (e.g. us-south, us-east)
              - name: namespace
                type: string
                description: The namespace where the agent should be deployed
                default: ibm-observe
                optional: true
              - name: sync
                type: string
                description: Semaphore value to sync up modules
                default: ""
                optional: true
            version: v1.0.0
            outputs:
              - name: sync
                description: output "sync" {   value = "sysdig"   depends_on = [helm_release.sysdig] }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.1
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: ibm
      - id: github.com/cloud-native-toolkit/terraform-vsi-scc-collector
        name: scc-collector
        alias: scc
        type: terraform
        description: Module that installs an scc collector into a VPC VSI instance
        tags:
          - security
        versions:
          - platforms:
              - vpc
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: region
                scope: global
                type: string
                description: Region.  Must be same Region as the VPC
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of VPC into which to provision the VSI
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: image_name
                type: string
                description: The name of the image that will be used in the Virtual Server instance
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: init_script
                type: string
                description: The script used to initialize the Virtual Server instance. If not provided the default script will be used.
                default: ""
                optional: true
            version: v1.7.1
            outputs:
              - name: vsi_private_ips
                description: output "vsi_private_ips" {   value = module.scc_vsi.private_ips }
              - name: vsi_floating_ips
                description: output "vsi_floating_ips" {   value = module.scc_vsi.public_ips }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = module.scc_vsi.security_group_id }
          - platforms:
              - vpc
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: region
                scope: global
                type: string
                description: Region.  Must be same Region as the VPC
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of VPC into which to provision the VSI
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: image_name
                type: string
                description: The name of the image that will be used in the Virtual Server instance
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: init_script
                type: string
                description: The script used to initialize the Virtual Server instance. If not provided the default script will be used.
                default: ""
                optional: true
            version: v1.7.0
            outputs:
              - name: vsi_private_ips
                description: output "vsi_private_ips" {   value = module.scc_vsi.private_ips }
              - name: vsi_floating_ips
                description: output "vsi_floating_ips" {   value = module.scc_vsi.public_ips }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = module.scc_vsi.security_group_id }
          - platforms:
              - vpc
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: region
                scope: global
                type: string
                description: Region.  Must be same Region as the VPC
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of VPC into which to provision the VSI
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: image_name
                type: string
                description: The name of the image that will be used in the Virtual Server instance
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: init_script
                type: string
                description: The script used to initialize the Virtual Server instance. If not provided the default script will be used.
                default: ""
                optional: true
            version: v1.6.1
            outputs:
              - name: vsi_private_ips
                description: output "vsi_private_ips" {   value = module.scc_vsi.private_ips }
              - name: vsi_floating_ips
                description: output "vsi_floating_ips" {   value = module.scc_vsi.public_ips }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = module.scc_vsi.security_group_id }
          - platforms:
              - vpc
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: region
                scope: global
                type: string
                description: Region.  Must be same Region as the VPC
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of VPC into which to provision the VSI
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: image_name
                type: string
                description: The name of the image that will be used in the Virtual Server instance
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: init_script
                type: string
                description: The script used to initialize the Virtual Server instance. If not provided the default script will be used.
                default: ""
                optional: true
            version: v1.6.0
            outputs:
              - name: vsi_private_ips
                description: output "vsi_private_ips" {   value = module.scc_vsi.private_ips }
              - name: vsi_floating_ips
                description: output "vsi_floating_ips" {   value = module.scc_vsi.public_ips }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = module.scc_vsi.security_group_id }
          - platforms:
              - vpc
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: region
                scope: global
                type: string
                description: Region.  Must be same Region as the VPC
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of VPC into which to provision the VSI
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: image_name
                type: string
                description: The name of the image that will be used in the Virtual Server instance
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: init_script
                type: string
                description: The script used to initialize the Virtual Server instance. If not provided the default script will be used.
                default: ""
                optional: true
            version: v1.5.2
            outputs:
              - name: vsi_private_ips
                description: output "vsi_private_ips" {   value = module.scc_vsi.private_ips }
              - name: vsi_floating_ips
                description: output "vsi_floating_ips" {   value = module.scc_vsi.public_ips }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = module.scc_vsi.security_group_id }
          - platforms:
              - vpc
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: region
                scope: global
                type: string
                description: Region.  Must be same Region as the VPC
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of VPC into which to provision the VSI
              - name: base_security_group
                moduleRef:
                  id: vpc
                  output: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: image_name
                type: string
                description: The name of the image that will be used in the Virtual Server instance
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: init_script
                type: string
                description: The script used to initialize the Virtual Server instance. If not provided the default script will be used.
                default: ""
                optional: true
            version: v1.5.1
            outputs:
              - name: vsi_private_ips
                description: output "vsi_private_ips" {   value = module.scc_vsi.private_ips }
              - name: vsi_floating_ips
                description: output "vsi_floating_ips" {   value = module.scc_vsi.public_ips }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = module.scc_vsi.security_group_id }
          - platforms:
              - vpc
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: region
                scope: global
                type: string
                description: Region.  Must be same Region as the VPC
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of VPC into which to provision the VSI
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: image_name
                type: string
                description: The name of the image that will be used in the Virtual Server instance
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: init_script
                type: string
                description: The script used to initialize the Virtual Server instance. If not provided the default script will be used.
                default: ""
                optional: true
              - name: base_security_group
                type: string
                description: The id of the base security group to use for the VSI instance. If not provided the default VPC security group will be used.
                default: "null"
                optional: true
            version: v1.5.0
            outputs:
              - name: vsi_private_ips
                description: output "vsi_private_ips" {   value = module.scc_vsi.private_ips }
              - name: vsi_floating_ips
                description: output "vsi_floating_ips" {   value = module.scc_vsi.public_ips }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = module.scc_vsi.security_group_id }
          - platforms:
              - vpc
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: region
                scope: global
                type: string
                description: Region.  Must be same Region as the VPC
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of VPC into which to provision the VSI
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: image_name
                type: string
                description: The name of the image that will be used in the Virtual Server instance
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: init_script
                type: string
                description: The script used to initialize the Virtual Server instance. If not provided the default script will be used.
                default: ""
                optional: true
            version: v1.4.1
            outputs:
              - name: vsi_private_ips
                description: output "vsi_private_ips" {   value = module.scc_vsi.private_ips }
              - name: vsi_floating_ips
                description: output "vsi_floating_ips" {   value = module.scc_vsi.public_ips }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = module.scc_vsi.security_group_id }
          - platforms:
              - vpc
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: region
                scope: global
                type: string
                description: Region.  Must be same Region as the VPC
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of VPC into which to provision the VSI
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: image_name
                type: string
                description: The name of the image that will be used in the Virtual Server instance
                default: ibm-ubuntu-18-04-1-minimal-amd64-2
                optional: true
              - name: init_script
                type: string
                description: The script used to initialize the Virtual Server instance. If not provided the default script will be used.
                default: ""
                optional: true
            version: v1.4.0
            outputs:
              - name: vsi_private_ips
                description: output "vsi_private_ips" {   value = module.scc_vsi.private_ips }
              - name: vsi_floating_ips
                description: output "vsi_floating_ips" {   value = module.scc_vsi.public_ips }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = module.scc_vsi.security_group_id }
          - platforms:
              - vpc
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
              - id: cos_bucket
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
                    version: '>= 0.0.1'
                optional: true
              - id: kms_key
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
                    version: '>= 0.0.1'
                optional: true
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: region
                scope: global
                type: string
                description: Region.  Must be same Region as the VPC
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of VPC into which to provision the VSI
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: flow_log_cos_bucket_name
                moduleRef:
                  id: cos_bucket
                  output: bucket_name
                optional: true
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
              - name: kms_key_crn
                moduleRef:
                  id: kms_key
                  output: crn
                optional: true
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
            version: v1.3.1
            outputs:
              - name: vsi_private_ips
                description: output "vsi_private_ips" {   value = module.scc_vsi.private_ips }
              - name: vsi_floating_ips
                description: output "vsi_floating_ips" {   value = module.scc_vsi.public_ips }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = module.scc_vsi.security_group_id }
          - platforms:
              - vpc
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: region
                scope: global
                type: string
                description: Region.  Must be same Region as the VPC
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of VPC into which to provision the VSI
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: scc_registration_key
                scope: global
              - name: flow_log_cos_bucket_name
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: kms_key_crn
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
                optional: true
            version: v1.3.0
            outputs:
              - name: vsi_private_ips
                description: output "vsi_private_ips" {   value = module.scc_vsi.private_ips }
              - name: vsi_floating_ips
                description: output "vsi_floating_ips" {   value = module.scc_vsi.public_ips }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = module.scc_vsi.security_group_id }
          - platforms:
              - vpc
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: region
                scope: global
                type: string
                description: Region.  Must be same Region as the VPC
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of VPC into which to provision the VSI
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: scc_registration_key
                scope: global
              - name: flow_log_cos_bucket_name
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: kms_key_crn
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
                optional: true
            version: v1.2.1
            outputs:
              - name: vsi_private_ips
                description: output "vsi_private_ips" {   value = module.scc_vsi.private_ips }
              - name: vsi_floating_ips
                description: output "vsi_floating_ips" {   value = module.scc_vsi.public_ips }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = module.scc_vsi.security_group_id }
          - platforms:
              - vpc
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: region
                scope: global
                type: string
                description: Region.  Must be same Region as the VPC
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of VPC into which to provision the VSI
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: scc_registration_key
                scope: global
              - name: flow_log_cos_bucket_name
                type: string
                description: Cloud Object Storage bucket id for flow logs (optional)
                default: ""
                optional: true
              - name: kms_enabled
                type: bool
                description: Flag indicating that the volumes should be encrypted using a KMS.
                default: false
                optional: true
              - name: kms_key_crn
                type: string
                description: The crn of the root key in the kms instance. Required if kms_enabled is true
                default: "null"
                optional: true
            version: v1.2.0
            outputs:
              - name: vsi_private_ips
                description: output "vsi_private_ips" {   value = module.scc_vsi.private_ips }
              - name: vsi_floating_ips
                description: output "vsi_floating_ips" {   value = module.scc_vsi.public_ips }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = module.scc_vsi.security_group_id }
          - platforms:
              - vpc
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: region
                scope: global
                type: string
                description: Region.  Must be same Region as the VPC
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of VPC into which to provision the VSI
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: scc_registration_key
                scope: global
                type: string
                description: The registration key generated for the SCC collector. The collector must be set up with a *private* endpoint. The value can be created/retrieved here - https://cloud.ibm.com/security-compliance/settings?tab=collectors
            version: v1.1.1
            outputs:
              - name: vsi_private_ips
                description: output "vsi_private_ips" {   value = ibm_is_instance.vsi[*].primary_network_interface[0].primary_ipv4_address }
              - name: vsi_floating_ips
                description: output "vsi_floating_ips" {   value = ibm_is_floating_ip.vsi_floatingip[*].address }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = ibm_is_security_group.vsi_sg.id }
              - name: vsi_ssh_inboud_rule_id
                description: output "vsi_ssh_inboud_rule_id" {   value = split(".", ibm_is_security_group_rule.rule-ssh-inbound.id)[1] }
              - name: DISABLE_SSH
                description: output "DISABLE_SSH" {   value = "nCommand to remove rule that allows inbound ssh:n ibmcloud is security-group-rule-delete ${ibm_is_security_group.vsi_sg.id} ${split(".", ibm_is_security_group_rule.rule-ssh-inbound.id)[1]}n" }
          - platforms:
              - vpc
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: subnets
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_id
                moduleRef:
                  id: resource_group
                  output: id
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: region
                scope: global
                type: string
                description: Region.  Must be same Region as the VPC
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: vpc_name
                moduleRef:
                  id: vpc
                  output: name
                type: string
                description: Name of VPC into which to provision the VSI
              - name: vpc_subnet_count
                moduleRef:
                  id: subnets
                  output: count
                type: number
                description: Number of vpc subnets
              - name: vpc_subnets
                moduleRef:
                  id: subnets
                  output: subnets
                type: |-
                  list(object({
                      label = string
                      id    = string
                      zone  = string
                    }))
                description: List of subnets with labels
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: scc_registration_key
                scope: global
                type: string
                description: The registration key generated for the SCC collector. The collector must be set up with a *private* endpoint. The value can be created/retrieved here - https://cloud.ibm.com/security-compliance/settings?tab=collectors
            version: v1.1.0
            outputs:
              - name: vsi_private_ips
                description: output "vsi_private_ips" {   value = ibm_is_instance.vsi[*].primary_network_interface[0].primary_ipv4_address }
              - name: vsi_floating_ips
                description: output "vsi_floating_ips" {   value = ibm_is_floating_ip.vsi_floatingip[*].address }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = ibm_is_security_group.vsi_sg.id }
              - name: vsi_ssh_inboud_rule_id
                description: output "vsi_ssh_inboud_rule_id" {   value = split(".", ibm_is_security_group_rule.rule-ssh-inbound.id)[1] }
              - name: DISABLE_SSH
                description: output "DISABLE_SSH" {   value = "nCommand to remove rule that allows inbound ssh:n ibmcloud is security-group-rule-delete ${ibm_is_security_group.vsi_sg.id} ${split(".", ibm_is_security_group_rule.rule-ssh-inbound.id)[1]}n" }
          - platforms:
              - vpc
            dependencies:
              - id: resource_group
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
                    version: '>= 2.1.0'
              - id: vpc
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
                    version: '>= 1.0.0'
              - id: vpcssh
                refs:
                  - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
                    version: '>= 1.0.0'
            variables:
              - name: resource_group_name
                moduleRef:
                  id: resource_group
                  output: name
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: vpc_id
                moduleRef:
                  id: vpc
                  output: id
                type: string
                description: ID of VPC into which to provision the VSI.  A subnet will also be created.
              - name: ssh_key_id
                moduleRef:
                  id: vpcssh
                  output: id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                moduleRef:
                  id: vpcssh
                  output: private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: region
                scope: global
                type: string
                description: Region.  Must be same Region as the VPC
              - name: zone
                scope: ignore
                type: string
                description: Zone in which to provision the VSI.  Must be in the same Region as the VPC.
                default: description = Zone in which to provision the VSI.  Must be in the same Region as the VPC.
                optional: true
              - name: name_prefix
                scope: global
                type: string
                description: Prefix used to name all resources.
                default: description = Prefix used to name all resources.
                optional: true
              - name: ibmcloud_api_key
                scope: global
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: scc_registration_key
                scope: global
                type: string
                description: The registration key generated for the SCC collector. The value can be created/retrieved here - https://cloud.ibm.com/security-compliance/settings?tab=collectors
            version: v1.0.1
            outputs:
              - name: vsi_private_ip
                description: output "vsi_private_ip" {   value = ibm_is_instance.vsi.primary_network_interface.0.primary_ipv4_address }
              - name: vsi_floating_ip
                description: output "vsi_floating_ip" {   value = ibm_is_floating_ip.vsi_floatingip.address }
              - name: vsi_subnet
                description: output "vsi_subnet" {   value = ibm_is_subnet.subnet_vsi.ipv4_cidr_block }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = ibm_is_security_group.vsi_sg.id }
              - name: vsi_ssh_inboud_rule_id
                description: output "vsi_ssh_inboud_rule_id" {   value = split(".", ibm_is_security_group_rule.rule-ssh-inbound.id)[1] }
              - name: DISABLE_SSH
                description: output "DISABLE_SSH" {   value = "nCommand to remove rule that allows inbound ssh:n ibmcloud is security-group-rule-delete ${ibm_is_security_group.vsi_sg.id} ${split(".", ibm_is_security_group_rule.rule-ssh-inbound.id)[1]}n" }
          - platforms:
              - vpc
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables:
              - name: resource_group_name
                type: string
                description: 'Name of Resource Group in which to provision the VSI. '
              - name: region
                type: string
                description: Region.  Must be same Region as the VPC
              - name: zone
                type: string
                description: Zone in which to provision the VSI.  Must be in the same Region as the VPC.
                default: description = Zone in which to provision the VSI.  Must be in the same Region as the VPC.
                optional: true
              - name: ibmcloud_api_key
                type: string
                description: The IBM Cloud api key used to provision the IBM Cloud resources
              - name: vpc_id
                type: string
                description: ID of VPC into which to provision the VSI.  A subnet will also be created.
              - name: name_prefix
                type: string
                description: Prefix used to name all resources.
                default: description = Prefix used to name all resources.
                optional: true
              - name: ssh_key_id
                type: string
                description: ID of SSH Key already provisioned in the region.  This will be used to access the VSI.
              - name: ssh_private_key
                type: string
                description: The value of the private key that matches the ssh_key_id.
              - name: scc_registration_key
                type: string
                description: The registration key generated for the SCC collector. The value can be created/retrieved here - https://cloud.ibm.com/security-compliance/settings?tab=collectors
            version: v1.0.0
            outputs:
              - name: vsi_private_ip
                description: output "vsi_private_ip" {   value = ibm_is_instance.vsi.primary_network_interface.0.primary_ipv4_address }
              - name: vsi_floating_ip
                description: output "vsi_floating_ip" {   value = ibm_is_floating_ip.vsi_floatingip.address }
              - name: vsi_subnet
                description: output "vsi_subnet" {   value = ibm_is_subnet.subnet_vsi.ipv4_cidr_block }
              - name: vsi_security_group_id
                description: output "vsi_security_group_id" {   value = ibm_is_security_group.vsi_sg.id }
              - name: vsi_ssh_inboud_rule_id
                description: output "vsi_ssh_inboud_rule_id" {   value = split(".", ibm_is_security_group_rule.rule-ssh-inbound.id)[1] }
              - name: DISABLE_SSH
                description: output "DISABLE_SSH" {   value = "nCommand to remove rule that allows inbound ssh:n ibmcloud is security-group-rule-delete ${ibm_is_security_group.vsi_sg.id} ${split(".", ibm_is_security_group_rule.rule-ssh-inbound.id)[1]}n" }
        provider: vsi
  - category: util
    categoryName: Utilities
    selection: multiple
    modules:
      - id: github.com/cloud-native-toolkit/terraform-util-sealed-secret-cert
        name: sealed-secret-cert
        type: terraform
        description: Module to collect or generate the certificate and private key used for the sealed secret component
        tags:
          - tools
          - devops
        versions:
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            variables:
              - name: cert
                type: string
                description: The public key that will be used to encrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: private_key
                type: string
                description: The private key that will be used to decrypt sealed secrets. If not provided, a new one will be generated
                default: ""
                optional: true
              - name: cert_file
                type: string
                description: The file containing the public key that will be used to encrypt the sealed secrets. If not provided a new public key will be generated
                default: ""
                optional: true
              - name: private_key_file
                type: string
                description: The file containin the private key that will be used to encrypt the sealed secrets. If not provided a new private key will be generated
                default: ""
                optional: true
            version: v1.0.0
            outputs:
              - name: private_key
                description: output "private_key" {   value = local.private_key   sensitive = true }
              - name: cert
                description: output "cert" {   value = local.cert }
          - platforms:
              - kubernetes
              - ocp3
              - ocp4
            dependencies: []
            #    - id: cluster
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-ibm-container-platform
            #          version: ">= 1.7.0"
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-ocp-cluster
            #          version: ">= 2.0.0"
            #    - id: namespace
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-namespace
            #          version: ">= 2.1.0"
            #    - id: dashboard
            #      refs:
            #        - source: github.com/cloud-native-toolkit/terraform-k8s-dashboard
            #          version: ">= 1.6.0"
            variables: []
            version: v0.0.0
        provider: util
